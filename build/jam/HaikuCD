# Execute pre-image user config rules.
UserBuildConfigRulePreImage	;

# Set cd file name and directory defaults and locate the cd file.
HAIKU_CD_NAME ?= $(HAIKU_DEFAULT_CD_NAME) ;
HAIKU_CD_DIR ?= $(HAIKU_DEFAULT_CD_DIR) ;
HAIKU_CD = $(HAIKU_CD_NAME) ;
HAIKU_CD_LABEL ?= $(HAIKU_DEFAULT_CD_LABEL) ;
MakeLocate $(HAIKU_CD) : $(HAIKU_CD_DIR) ;

# prepare the script that initializes the shell variables
HAIKU_CD_INIT_VARIABLES_SCRIPT = <HaikuCD>haiku.cd-init-vars ;
local script = $(HAIKU_CD_INIT_VARIABLES_SCRIPT) ;
MakeLocate $(script) : $(HAIKU_OUTPUT_DIR) ;
Always $(script) ;

AddVariableToScript $(script) : sourceDir : $(HAIKU_TOP) ;
AddVariableToScript $(script) : outputDir : $(HAIKU_OUTPUT_DIR) ;
AddVariableToScript $(script) : tmpDir : $(HAIKU_TMP_DIR) ;
AddVariableToScript $(script) : cdLabel : $(HAIKU_CD_LABEL) ;
AddVariableToScript $(script) : addBuildCompatibilityLibDir
	: $(HOST_ADD_BUILD_COMPATIBILITY_LIB_DIR) ;
AddTargetVariableToScript $(script) : <build>addattr ;
AddTargetVariableToScript $(script) : <build>copyattr ;
AddTargetVariableToScript $(script) : <build>rc ;
AddTargetVariableToScript $(script) : <build>resattr ;
AddTargetVariableToScript $(script) : <build>unzip ;
AddTargetVariableToScript $(script) : <build>generate_attribute_stores ;
if $(HOST_RM_ATTRS_TARGET) {
	AddTargetVariableToScript $(script) : $(HOST_RM_ATTRS_TARGET) : rmAttrs ;
} else {
	AddVariableToScript $(script) : rmAttrs : rm ;
}
if $(optionalPackageDescriptions) {
	AddTargetVariableToScript $(script) : $(optionalPackageDescriptions)
		: optionalPackageDescriptions ;
}


# create the other scripts
HAIKU_CD_MAKE_DIRS_SCRIPT = <HaikuCD>haiku.cd-make-dirs ;
HAIKU_CD_COPY_FILES_SCRIPT = <HaikuCD>haiku.cd-copy-files ;
HAIKU_CD_UNZIP_FILES_SCRIPT = <HaikuCD>haiku.cd-unzip-files ;
MakeLocate $(HAIKU_CD_MAKE_DIRS_SCRIPT) $(HAIKU_CD_COPY_FILES_SCRIPT)
	$(HAIKU_CD_UNZIP_FILES_SCRIPT) : $(HAIKU_OUTPUT_DIR) ;

CreateHaikuImageMakeDirectoriesScript $(HAIKU_CD_MAKE_DIRS_SCRIPT) ;
CreateHaikuImageCopyFilesScript $(HAIKU_CD_COPY_FILES_SCRIPT) ;
CreateHaikuImageUnzipFilesScript $(HAIKU_CD_UNZIP_FILES_SCRIPT) ;

# Convenience wrapper rule around BuildHaikuCD.
rule _BuildHaikuCD haikuCD : bootFloppy
{
	# _BuildHaikuCD <cd target> : <bootFloppy> ;
	#

	# build the cd
	# HAIKU_CD_EARLY_USER_SCRIPTS, HAIKU_CD_LATE_USER_SCRIPTS can be
	# specified by the user.
	BuildHaikuCD $(haikuCD) : $(bootFloppy) :
		$(HAIKU_CD_INIT_VARIABLES_SCRIPT)
		$(HAIKU_CD_EARLY_USER_SCRIPTS)
		$(HAIKU_CD_MAKE_DIRS_SCRIPT)
		$(HAIKU_CD_COPY_FILES_SCRIPT)
		$(HAIKU_CD_UNZIP_FILES_SCRIPT)
		$(HAIKU_CD_LATE_USER_SCRIPTS)
	;

	# remove the scripts we have generated
	RmTemps $(haikuCD) :
		$(HAIKU_CD_INIT_VARIABLES_SCRIPT)
		$(HAIKU_CD_MAKE_DIRS_SCRIPT)
		$(HAIKU_CD_COPY_FILES_SCRIPT)
		$(HAIKU_CD_UNZIP_FILES_SCRIPT)
	;
}

# build the cd
_BuildHaikuCD $(HAIKU_CD) : $(HAIKU_BOOT_FLOPPY) ;
NotFile haiku-cd ;
Depends haiku-cd : $(HAIKU_CD) ;

# Execute post-image user config rules.
UserBuildConfigRulePostImage ;
