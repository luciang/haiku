SubDir HAIKU_TOP src tools rc ;

USES_BE_API on <build>librdef.a <build>rc = true ;

GENERATE_C++ on [ FGristFiles lexer.l parser.y ] = true ;

SubDirC++Flags -Wno-sign-compare -Wno-unused ;

local r5Compatibility = [ FDirName $(SUBDIR) R5Compatibility.h ] ;
SubDirCcFlags -include $(r5Compatibility) ;
SubDirC++Flags -include $(r5Compatibility) ;

BuildPlatformStaticLibrary <build>librdef.a :
	compile.cpp decompile.cpp lexer.l parser.y rdef.cpp ;

# these platforms do not need a second copy of the strl routines
if $(HOST_PLATFORM) != darwin && $(HOST_PLATFORM) != linux && $(HOST_PLATFORM) != freebsd {
STRLSRC = strlcpy.c strlcat.c ;
}

BuildPlatformMain <build>rc :
	rc.cpp

	# these two are needed for R5 only
	$(STRLSRC)
;
LinkAgainst <build>rc
	: <build>librdef.a $(HOST_LIBSTDC++) $(HOST_LIBBE) $(HOST_LIBSUPC++) ;

SEARCH on [ FGristFiles
		strlcat.c strlcpy.c
	] = [ FDirName $(HAIKU_TOP) src system libroot posix string ] ;
