SubDir HAIKU_TOP src kits interface ;

# If defined allows to run applications without the registrar
# -- for development only, of course.
if $(RUN_WITHOUT_REGISTRAR) {
	local defines = [ FDefines RUN_WITHOUT_REGISTRAR ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

# If defined allows to run applications without the app server
# -- needed until the app server runs on our kernel.
RUN_WITHOUT_APP_SERVER ?= 0 ;
if $(RUN_WITHOUT_APP_SERVER) != 0 {
	local defines = [ FDefines RUN_WITHOUT_APP_SERVER ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

if ! $(TARGET_PLATFORM_HAIKU_COMPATIBLE) {
	local defines = [ FDefines COMPILE_FOR_R5 ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

SetSubDirSupportedPlatforms haiku libbe_test ;

UsePrivateHeaders app input print interface shared tracker ;

local pngDump ;
if $(TARGET_PLATFORM) = haiku {
	UseLibraryHeaders icon ;
} else {
	pngDump = PNGDump.cpp ;
	UseLibraryHeaders icon png zlib ;
}

SEARCH_SOURCE += [ FDirName $(SUBDIR) textview_support ] ;
SEARCH_SOURCE += [ FDirName $(SUBDIR) layouter ] ;

MergeObject <libbe>interface_kit.o :
	AbstractLayoutItem.cpp
	Alert.cpp
	Alignment.cpp
	Bitmap.cpp
	BMCPrivate.cpp
	Box.cpp
	Button.cpp
	CardLayout.cpp
	ChannelControl.cpp
	ChannelSlider.cpp
	CheckBox.cpp
	ColorConversion.cpp
	ColorControl.cpp
	ColorTools.cpp
	Control.cpp
	Deskbar.cpp
	Dragger.cpp
	Font.cpp
	Gradient.cpp
	GradientLinear.cpp
	GradientRadial.cpp
	GradientRadialFocus.cpp
	GradientDiamond.cpp
	GradientConic.cpp
	GraphicsDefs.cpp
	GridLayout.cpp
	GridLayoutBuilder.cpp
	GridView.cpp
	GroupLayout.cpp
	GroupLayoutBuilder.cpp
	GroupView.cpp
	Input.cpp
	InterfaceDefs.cpp
	Layout.cpp
	LayoutContext.cpp
	LayoutItem.cpp
	LayoutUtils.cpp
	ListItem.cpp
	ListView.cpp
	Menu.cpp
	MenuBar.cpp
	MenuField.cpp
	MenuItem.cpp
	MenuWindow.cpp
	OptionControl.cpp
	OptionPopUp.cpp
	OutlineListView.cpp
	Picture.cpp
	PictureButton.cpp
	PictureDataWriter.cpp
	PicturePlayer.cpp
	Point.cpp
	Polygon.cpp
	PopUpMenu.cpp
	PrintJob.cpp
	PrivateScreen.cpp
	RadioButton.cpp
	Rect.cpp
	Region.cpp
	RegionSupport.cpp
	Screen.cpp
	ScrollBar.cpp
	ScrollView.cpp
	SeparatorItem.cpp
	Shape.cpp
	Shelf.cpp
	Size.cpp
	Slider.cpp
	SpaceLayoutItem.cpp
	SplitLayout.cpp
	SplitLayoutBuilder.cpp
	SplitView.cpp
	StatusBar.cpp
	StringView.cpp
	TabView.cpp
	TextControl.cpp
	TextInput.cpp
	TextView.cpp
	TwoDimensionalLayout.cpp
	View.cpp
	ViewLayoutItem.cpp
	Window.cpp
	ZombieReplicantView.cpp

	# BTextView support
	InlineInput.cpp
	LineBuffer.cpp
	StyleBuffer.cpp
	TextGapBuffer.cpp
	UndoBuffer.cpp
	WidthBuffer.cpp

	# layouter
	ComplexLayouter.cpp
	Layouter.cpp
	LayoutOptimizer.cpp
	OneElementLayouter.cpp
	SimpleLayouter.cpp

	# required on R5
	$(pngDump)
;

StaticLibrary libcolumnlistview.a :
	ColumnListView.cpp
	ColumnTypes.cpp
;
