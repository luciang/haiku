SubDir HAIKU_TOP src kits network compat libnet ;

SetSubDirSupportedPlatformsBeOSCompatible ;

UseHeaders [ FDirName $(SUBDIR) headers ] : true ;
UsePrivateHeaders net ;
UseHeaders [ FDirName $(HAIKU_TOP) headers legacy network ] : true ;

if $(TARGET_PLATFORM) != haiku {
	UseHeaders [ FDirName $(HAIKU_TOP) headers posix ] : true ;
		# We need the public network headers also when not compiling for Haiku.
		# Unfortunately we get more than we want, namely all POSIX headers.

	# Default libs include BeOS R5 libnet.so, something we don't want here!
	LINKFLAGS on libnet.so = [ on libnet.so return $(LINKFLAGS) ]
		-nodefaultlibs -lroot ;
}

{
	# actually we are always BUILDING_R5_LIBNET, as this means we get unprefixed
	# versions of inet_* functions in libnet.so, which is how it should be in any case
	# BONE versions of the inet_* functions are prefixed with __ in <arpa/inet.h> and
	# implemented in libbind.so as are ours.
	local defines ;
	if $(TARGET_PLATFORM) = r5 {
		defines += BUILDING_R5_LIBNET ;
	} else if $(TARGET_PLATFORM) = bone {
		defines += BONE_VERSION ;
		defines += BUILDING_R5_LIBNET ;
	} else if $(TARGET_PLATFORM) = haiku {
		defines += BUILDING_R5_LIBNET ;
	}
	defines = [ FDefines $(defines) ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

#Depends libnet.so : install_network_etc_files ;

if $(TARGET_PLATFORM) = r5 {
	PLATFORM_SOURCES =
		select.c 
		poll.c
		;
	PLATFORM_LIBS = ;
} else {
	# under Haiku and BONE we don't need the above
	# because they are in libsocket.so or libroot.so
	PLATFORM_SOURCES = ;
	PLATFORM_LIBS = libsocket.so ;
}

SharedLibrary libnet.so :
	$(PLATFORM_SOURCES)
	netdebug.c
	netconfig.c
	socket.c
	compat.c
	arc4random.c
	base64.c
	ethers.c
	freeaddrinfo.c
	inet_addr.c
	inet_ntoa.c
	inet_neta.c
	inet_netof.c
	inet_lnaof.c
	inet_network.c
	inet_pton.c
	inet_ntop.c
	getaddrinfo.c
	gethostnamadr.c
	getnameinfo.c
	getnetbyaddr.c
	getnetbyname.c
	getnetnamadr.c
	getprotoname.c
	getnetent.c
	getproto.c
	getprotoent.c
	getservent.c
	getservbyname.c
	getservbyport.c
	linkaddr.c
	res_comp.c
	res_data.c
	res_debug.c
	res_init.c
	res_mkquery.c
	res_query.c
	res_random.c
	res_send.c
	sethostent.c

	: $(PLATFORM_LIBS)
;

# HaikuInstall install_network_etc_files : [ FDirName $(HAIKU_ETC_DIR) ] :
# 	resolv.conf
# 	services
# 	protocols
# 	networks
# ;

# Installation -- in the test directory for the time being
HaikuInstallRelSymLink install-networking
	: [ FDirName $(HAIKU_TEST_DIR) kits net lib ]
	: libnet.so
	: installed-networking-test ;

Package haiku-networkingkit-cvs :
	libnet.so :
#	boot home config lib ;
	boot home Desktop haiku-networkingkit lib ;

Package haiku-networkingkit-cvs :
	resolv.conf services protocols networks :
#	boot beos etc ;
	boot home Desktop haiku-networkingkit etc ;
