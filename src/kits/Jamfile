SubDir HAIKU_TOP src kits ;

# If defined allows to run applications without the registrar
# -- for development only, of course.
if $(RUN_WITHOUT_REGISTRAR) {
	local defines = [ FDefines RUN_WITHOUT_REGISTRAR ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

# If defined allows to run applications without the app server
# -- needed until the app server runs on our kernel.
RUN_WITHOUT_APP_SERVER ?= 0 ;
if $(RUN_WITHOUT_APP_SERVER) != 0 {
	local defines = [ FDefines RUN_WITHOUT_APP_SERVER ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) ;
}

UsePrivateHeaders [ FDirName kernel ]   # For KMessage.h
UsePrivateHeaders syslog_daemon ;		# For syslog.cpp

# Build our libbe.so

AddResources libbe.so : libbe_version.rdef ;

SharedLibrary libbe.so :
	: 
	<libbe>app_kit.o
	<libbe>interface_kit.o
	<libbe>storage_kit.o
	<libbe>support_kit.o

	libicon.a
	libagg.a

	libroot.so	# make sure it links against our libroot.so
	$(TARGET_LIBSTDC++)
;

# Build libbe_haiku.so

SetSupportedPlatformsForTarget libbe_haiku.so : libbe_test ;

if $(TARGET_PLATFORM) = libbe_test {
	local syslog = [ FGristFiles syslog.o ] ;
	# Remove _NO_INLINE_ASM from the defines for syslog.cpp. Otherwise we get
	# references to tls_get/set() etc. that don't exist under BeOS.
	TARGET_DEFINES on $(syslog)
		= [ on $(syslog) FFilter $(TARGET_DEFINES) : _NO_INLINE_ASM ] ;

	# We need to use our <syslog.h>, because the syslog() prototype differs
	# from the BeOS one.
	TARGET_DEFINES on $(syslog) += _SYS_LOG_H ;
	TARGET_C++FLAGS on $(syslog) = [ on $(syslog) return $(TARGET_C++FLAGS) ]
		-include [ FDirName $(HAIKU_TOP) headers posix syslog.h ] ;
}

SharedLibrary libbe_haiku.so :
	KMessage.cpp
	syslog.cpp
	:
	<libbe>app_kit.o
	<libbe>interface_kit.o
	<libbe>storage_kit.o
	<libbe>support_kit.o

	libicon.a
	libagg.a

	libbeadapter.so
	$(TARGET_NETWORK_LIBS)
	$(TARGET_LIBSTDC++)
;

SEARCH on [ FGristFiles KMessage.cpp ]
	= [ FDirName $(HAIKU_TOP) src system kernel messaging ] ;

SEARCH on [ FGristFiles syslog.cpp ]
	= [ FDirName $(HAIKU_TOP) src system libroot posix ] ;


SubInclude HAIKU_TOP src kits app ;
SubInclude HAIKU_TOP src kits bluetooth ;
SubInclude HAIKU_TOP src kits debug ;
SubInclude HAIKU_TOP src kits device ;
SubInclude HAIKU_TOP src kits game ;
SubInclude HAIKU_TOP src kits interface ;
SubInclude HAIKU_TOP src kits mail ;
SubInclude HAIKU_TOP src kits media ;
SubInclude HAIKU_TOP src kits midi ;
SubInclude HAIKU_TOP src kits midi2 ;
SubInclude HAIKU_TOP src kits network ;
SubInclude HAIKU_TOP src kits opengl ;
SubInclude HAIKU_TOP src kits screensaver ;
SubInclude HAIKU_TOP src kits shared ;
SubInclude HAIKU_TOP src kits storage ;
SubInclude HAIKU_TOP src kits support ;
SubInclude HAIKU_TOP src kits textencoding ;
SubInclude HAIKU_TOP src kits tracker ;
SubInclude HAIKU_TOP src kits translation ;
