<?xml version="1.0"?>
<!DOCTYPE OpenGLAPI [
<!ELEMENT OpenGLAPI (category+)>
<!ELEMENT category (type*, enum*, function*)>
<!ELEMENT type EMPTY>
<!ELEMENT enum EMPTY>
<!ELEMENT function (param*, return?, glx?)>
<!ELEMENT param EMPTY>
<!ELEMENT return EMPTY>
<!ELEMENT glx EMPTY>

<!ATTLIST category name   CDATA #REQUIRED
                   number CDATA #IMPLIED>
<!ATTLIST type     name   CDATA #REQUIRED
                   size   CDATA #REQUIRED
                   glx_name CDATA #IMPLIED>
<!ATTLIST enum     name   CDATA #REQUIRED
                   value  CDATA #REQUIRED>
<!ATTLIST function name   CDATA #REQUIRED
                   offset CDATA #REQUIRED
                   vectorequiv CDATA #IMPLIED>
<!ATTLIST param    name   CDATA #REQUIRED
                   type   CDATA #REQUIRED
                   count  CDATA #IMPLIED
                   counter  CDATA #IMPLIED
                   count_scale  CDATA #IMPLIED
                   output   CDATA #IMPLIED
		   img_width     CDATA #IMPLIED
		   img_height    CDATA #IMPLIED
		   img_depth     CDATA #IMPLIED
		   img_extent    CDATA #IMPLIED
		   img_xoff      CDATA #IMPLIED
		   img_yoff      CDATA #IMPLIED
		   img_zoff      CDATA #IMPLIED
		   img_woff      CDATA #IMPLIED
		   img_format    CDATA #IMPLIED
		   img_type      CDATA #IMPLIED
		   img_target    CDATA #IMPLIED
		   img_send_null CDATA #IMPLIED
		   img_null_flag CDATA #IMPLIED
		   img_pad_dimensions CDATA #IMPLIED
                   variable_param  CDATA #IMPLIED>
<!ATTLIST return   type     CDATA #REQUIRED>
<!ATTLIST glx      rop      CDATA #IMPLIED
                   sop      CDATA #IMPLIED
                   vendorpriv  CDATA #IMPLIED
                   large    CDATA #IMPLIED
                   doubles_in_order CDATA #IMPLIED
                   always_array CDATA #IMPLIED
                   handcode CDATA #IMPLIED
                   ignore   CDATA #IMPLIED>
]>

<!--
The various attributes for param and glx have the meanings listed below.
When adding new functions, please annote them correct.  In most cases this
will just mean adding a '<glx ignore="true"/>' tag.
    
param:
     name - name of the parameter
     type - fully qualified type (e.g., with "const", etc.)
     count - for counted arrays (e.g., the 'lists' parameter to glCallLists),
         the parameter or literal that represents the count.  For functions
	 like glVertex3fv it will be a litteral, for others it will be one of
	 the parameters.
     counter - this parameter is a counter that will be referenced by the
         'count' attribute in another parameter.
     count_scale - literal value scale factor for the 'count' attribute.
         See ProgramParameters4dvNV for an example.
     output - this parameter is used to store the output of the function.
     variable_param - name of parameter used to determine the number of
         elements referenced by this parameter.  This should be the name of a
         single enum parameter.  Most of the gl*Parameter[if]v functions use
	 this.  Additionally, the enums that can be passed should be properly
	 annotated.
     img_width / img_height / img_depth / img_extent - name of parameters
         (or hardcoded integer) used for the dimensions of pixel data.
     img_xoff / img_yoff / img_zoff / img_woff - name of parameters used
         for x, y, z, and w offsets of pixel data.
     img_format - name of parameter used as the pixel data format.
     img_type - name of parameter used as the pixel data type.
     img_target - name of parameter used as a texture target.  Non-texture
        pixel data should hardcode 0.
     img_send_null - boolean flag to determine if blank pixel data should
        be sent when a NULL pointer is passed.  This is only used by
	TexImage1D and TexImage2D.
     img_null_flag - boolean flag to determine if an extra flag is used to
        determine if a NULL pixel pointer was passed.  This is used by
	TexSubImage1D, TexSubImage2D, TexImage3D and others.
     img_pad_dimensions - boolean flag to determine if dimension data and
        offset data should be padded to the next even number of dimensions.
	For example, this will insert an empty "height" field after the
	"width" field in the protocol for TexImage1D.

glx:
     rop - Opcode value for "render" commands
     sop - Opcode value for "single" commands
     vendorpriv - Opcode value for vendor private (or vendor private with
         reply) commands
     large - set to "true" of the render command can use RenderLarge protocol.
     doubles_in_order - older commands always put GLdouble data at the
         start of the render packet.  Newer commands (e.g., 
         ProgramEnvParameter4dvARB) put the in the order that they appear
         in the parameter list.
     always_array - some single commands take reply data as an array or as
         return value data (e.g., glGetLightfv).  Other single commands take
         reply data only as an array (e.g., glGetClipPlane).
     handcode - some functions are just too complicated to generate 
         (e.g., glSeperableFilter2D) or operate only on client-side data
         (e.g., glVertexPointer) and must be handcoded.
     ignore - some functions have an entry in the dispatch table, but aren't
         suitable for protocol implementation (e.g., glLockArraysEXT).  This
	 also applies to functions that don't have any GLX protocol specified
	 (e.g., glGetFogFuncSGIS).
-->

<OpenGLAPI>

<!-- Core versions sorted by version number. -->

<category name="1.0">
    <enum name="FALSE"                                    value="0x0"/>
    <enum name="TRUE"                                     value="0x1"/>
    <enum name="ZERO"                                     value="0x0"/>
    <enum name="ONE"                                      value="0x1"/>
    <enum name="NONE"                                     value="0x0"/>
    <enum name="NO_ERROR"                                 value="0x0"/>
    <enum name="POINTS"                                   value="0x0000"/>
    <enum name="LINES"                                    value="0x0001"/>
    <enum name="LINE_LOOP"                                value="0x0002"/>
    <enum name="LINE_STRIP"                               value="0x0003"/>
    <enum name="TRIANGLES"                                value="0x0004"/>
    <enum name="TRIANGLE_STRIP"                           value="0x0005"/>
    <enum name="TRIANGLE_FAN"                             value="0x0006"/>
    <enum name="QUADS"                                    value="0x0007"/>
    <enum name="QUAD_STRIP"                               value="0x0008"/>
    <enum name="POLYGON"                                  value="0x0009"/>
    <enum name="ACCUM"                                    value="0x0100"/>
    <enum name="LOAD"                                     value="0x0101"/>
    <enum name="RETURN"                                   value="0x0102"/>
    <enum name="MULT"                                     value="0x0103"/>
    <enum name="ADD"                                      value="0x0104"/>
    <enum name="NEVER"                                    value="0x0200"/>
    <enum name="LESS"                                     value="0x0201"/>
    <enum name="EQUAL"                                    value="0x0202"/>
    <enum name="LEQUAL"                                   value="0x0203"/>
    <enum name="GREATER"                                  value="0x0204"/>
    <enum name="NOTEQUAL"                                 value="0x0205"/>
    <enum name="GEQUAL"                                   value="0x0206"/>
    <enum name="ALWAYS"                                   value="0x0207"/>
    <enum name="SRC_COLOR"                                value="0x0300"/>
    <enum name="ONE_MINUS_SRC_COLOR"                      value="0x0301"/>
    <enum name="SRC_ALPHA"                                value="0x0302"/>
    <enum name="ONE_MINUS_SRC_ALPHA"                      value="0x0303"/>
    <enum name="DST_ALPHA"                                value="0x0304"/>
    <enum name="ONE_MINUS_DST_ALPHA"                      value="0x0305"/>
    <enum name="DST_COLOR"                                value="0x0306"/>
    <enum name="ONE_MINUS_DST_COLOR"                      value="0x0307"/>
    <enum name="SRC_ALPHA_SATURATE"                       value="0x0308"/>
    <enum name="FRONT_LEFT"                               value="0x0400"/>
    <enum name="FRONT_RIGHT"                              value="0x0401"/>
    <enum name="BACK_LEFT"                                value="0x0402"/>
    <enum name="BACK_RIGHT"                               value="0x0403"/>
    <enum name="FRONT"                                    value="0x0404"/>
    <enum name="BACK"                                     value="0x0405"/>
    <enum name="LEFT"                                     value="0x0406"/>
    <enum name="RIGHT"                                    value="0x0407"/>
    <enum name="FRONT_AND_BACK"                           value="0x0408"/>
    <enum name="AUX0"                                     value="0x0409"/>
    <enum name="AUX1"                                     value="0x040A"/>
    <enum name="AUX2"                                     value="0x040B"/>
    <enum name="AUX3"                                     value="0x040C"/>
    <enum name="INVALID_VALUE"                            value="0x0501"/>
    <enum name="INVALID_ENUM"                             value="0x0500"/>
    <enum name="INVALID_OPERATION"                        value="0x0502"/>
    <enum name="STACK_OVERFLOW"                           value="0x0503"/>
    <enum name="STACK_UNDERFLOW"                          value="0x0504"/>
    <enum name="OUT_OF_MEMORY"                            value="0x0505"/>
    <enum name="2D"                                       value="0x0600"/>
    <enum name="3D"                                       value="0x0601"/>
    <enum name="3D_COLOR"                                 value="0x0602"/>
    <enum name="3D_COLOR_TEXTURE"                         value="0x0603"/>
    <enum name="4D_COLOR_TEXTURE"                         value="0x0604"/>
    <enum name="PASS_THROUGH_TOKEN"                       value="0x0700"/>
    <enum name="POINT_TOKEN"                              value="0x0701"/>
    <enum name="LINE_TOKEN"                               value="0x0702"/>
    <enum name="POLYGON_TOKEN"                            value="0x0703"/>
    <enum name="BITMAP_TOKEN"                             value="0x0704"/>
    <enum name="DRAW_PIXEL_TOKEN"                         value="0x0705"/>
    <enum name="COPY_PIXEL_TOKEN"                         value="0x0706"/>
    <enum name="LINE_RESET_TOKEN"                         value="0x0707"/>
    <enum name="EXP"                                      value="0x0800"/>
    <enum name="EXP2"                                     value="0x0801"/>
    <enum name="CW"                                       value="0x0900"/>
    <enum name="CCW"                                      value="0x0901"/>
    <enum name="COEFF"                                    value="0x0A00"/>
    <enum name="ORDER"                                    value="0x0A01"/>
    <enum name="DOMAIN"                                   value="0x0A02"/>
    <enum name="CURRENT_COLOR"                            value="0x0B00"/>
    <enum name="CURRENT_INDEX"                            value="0x0B01"/>
    <enum name="CURRENT_NORMAL"                           value="0x0B02"/>
    <enum name="CURRENT_TEXTURE_COORDS"                   value="0x0B03"/>
    <enum name="CURRENT_RASTER_COLOR"                     value="0x0B04"/>
    <enum name="CURRENT_RASTER_INDEX"                     value="0x0B05"/>
    <enum name="CURRENT_RASTER_TEXTURE_COORDS"            value="0x0B06"/>
    <enum name="CURRENT_RASTER_POSITION"                  value="0x0B07"/>
    <enum name="CURRENT_RASTER_POSITION_VALID"            value="0x0B08"/>
    <enum name="CURRENT_RASTER_DISTANCE"                  value="0x0B09"/>
    <enum name="POINT_SMOOTH"                             value="0x0B10"/>
    <enum name="POINT_SIZE"                               value="0x0B11"/>
    <enum name="POINT_SIZE_RANGE"                         value="0x0B12"/>
    <enum name="POINT_SIZE_GRANULARITY"                   value="0x0B13"/>
    <enum name="LINE_SMOOTH"                              value="0x0B20"/>
    <enum name="LINE_WIDTH"                               value="0x0B21"/>
    <enum name="LINE_WIDTH_RANGE"                         value="0x0B22"/>
    <enum name="LINE_WIDTH_GRANULARITY"                   value="0x0B23"/>
    <enum name="LINE_STIPPLE"                             value="0x0B24"/>
    <enum name="LINE_STIPPLE_PATTERN"                     value="0x0B25"/>
    <enum name="LINE_STIPPLE_REPEAT"                      value="0x0B26"/>
    <enum name="LIST_MODE"                                value="0x0B30"/>
    <enum name="MAX_LIST_NESTING"                         value="0x0B31"/>
    <enum name="LIST_BASE"                                value="0x0B32"/>
    <enum name="LIST_INDEX"                               value="0x0B33"/>
    <enum name="POLYGON_MODE"                             value="0x0B40"/>
    <enum name="POLYGON_SMOOTH"                           value="0x0B41"/>
    <enum name="POLYGON_STIPPLE"                          value="0x0B42"/>
    <enum name="EDGE_FLAG"                                value="0x0B43"/>
    <enum name="CULL_FACE"                                value="0x0B44"/>
    <enum name="CULL_FACE_MODE"                           value="0x0B45"/>
    <enum name="FRONT_FACE"                               value="0x0B46"/>
    <enum name="LIGHTING"                                 value="0x0B50"/>
    <enum name="LIGHT_MODEL_LOCAL_VIEWER"                 value="0x0B51">
        <size name="LightModelfv" count="1"/>
        <size name="LightModeliv" count="1"/>
    </enum>
    <enum name="LIGHT_MODEL_TWO_SIDE"                     value="0x0B52">
        <size name="LightModelfv" count="1"/>
        <size name="LightModeliv" count="1"/>
    </enum>
    <enum name="LIGHT_MODEL_AMBIENT"                      value="0x0B53">
        <size name="LightModelfv" count="4"/>
        <size name="LightModeliv" count="4"/>
    </enum>
    <enum name="SHADE_MODEL"                              value="0x0B54"/>
    <enum name="COLOR_MATERIAL_FACE"                      value="0x0B55"/>
    <enum name="COLOR_MATERIAL_PARAMETER"                 value="0x0B56"/>
    <enum name="COLOR_MATERIAL"                           value="0x0B57"/>
    <enum name="FOG"                                      value="0x0B60"/>
    <enum name="FOG_INDEX"                                value="0x0B61">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="FOG_DENSITY"                              value="0x0B62">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="FOG_START"                                value="0x0B63">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="FOG_END"                                  value="0x0B64">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="FOG_MODE"                                 value="0x0B65">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="FOG_COLOR"                                value="0x0B66">
        <size name="Fogfv" count="4"/>
        <size name="Fogiv" count="4"/>
    </enum>
    <enum name="DEPTH_RANGE"                              value="0x0B70"/>
    <enum name="DEPTH_TEST"                               value="0x0B71"/>
    <enum name="DEPTH_WRITEMASK"                          value="0x0B72"/>
    <enum name="DEPTH_CLEAR_VALUE"                        value="0x0B73"/>
    <enum name="DEPTH_FUNC"                               value="0x0B74"/>
    <enum name="ACCUM_CLEAR_VALUE"                        value="0x0B80"/>
    <enum name="STENCIL_TEST"                             value="0x0B90"/>
    <enum name="STENCIL_CLEAR_VALUE"                      value="0x0B91"/>
    <enum name="STENCIL_FUNC"                             value="0x0B92"/>
    <enum name="STENCIL_VALUE_MASK"                       value="0x0B93"/>
    <enum name="STENCIL_FAIL"                             value="0x0B94"/>
    <enum name="STENCIL_PASS_DEPTH_FAIL"                  value="0x0B95"/>
    <enum name="STENCIL_PASS_DEPTH_PASS"                  value="0x0B96"/>
    <enum name="STENCIL_REF"                              value="0x0B97"/>
    <enum name="STENCIL_WRITEMASK"                        value="0x0B98"/>
    <enum name="MATRIX_MODE"                              value="0x0BA0"/>
    <enum name="NORMALIZE"                                value="0x0BA1"/>
    <enum name="VIEWPORT"                                 value="0x0BA2"/>
    <enum name="MODELVIEW_STACK_DEPTH"                    value="0x0BA3"/>
    <enum name="PROJECTION_STACK_DEPTH"                   value="0x0BA4"/>
    <enum name="TEXTURE_STACK_DEPTH"                      value="0x0BA5"/>
    <enum name="MODELVIEW_MATRIX"                         value="0x0BA6"/>
    <enum name="PROJECTION_MATRIX"                        value="0x0BA7"/>
    <enum name="TEXTURE_MATRIX"                           value="0x0BA8"/>
    <enum name="ATTRIB_STACK_DEPTH"                       value="0x0BB0"/>
    <enum name="CLIENT_ATTRIB_STACK_DEPTH"                value="0x0BB1"/>
    <enum name="ALPHA_TEST"                               value="0x0BC0"/>
    <enum name="ALPHA_TEST_FUNC"                          value="0x0BC1"/>
    <enum name="ALPHA_TEST_REF"                           value="0x0BC2"/>
    <enum name="DITHER"                                   value="0x0BD0"/>
    <enum name="BLEND_DST"                                value="0x0BE0"/>
    <enum name="BLEND_SRC"                                value="0x0BE1"/>
    <enum name="BLEND"                                    value="0x0BE2"/>
    <enum name="LOGIC_OP_MODE"                            value="0x0BF0"/>
    <enum name="LOGIC_OP"                                 value="0x0BF1"/>
    <enum name="AUX_BUFFERS"                              value="0x0C00"/>
    <enum name="DRAW_BUFFER"                              value="0x0C01"/>
    <enum name="READ_BUFFER"                              value="0x0C02"/>
    <enum name="SCISSOR_BOX"                              value="0x0C10"/>
    <enum name="SCISSOR_TEST"                             value="0x0C11"/>
    <enum name="INDEX_CLEAR_VALUE"                        value="0x0C20"/>
    <enum name="INDEX_WRITEMASK"                          value="0x0C21"/>
    <enum name="COLOR_CLEAR_VALUE"                        value="0x0C22"/>
    <enum name="COLOR_WRITEMASK"                          value="0x0C23"/>
    <enum name="INDEX_MODE"                               value="0x0C30"/>
    <enum name="RGBA_MODE"                                value="0x0C31"/>
    <enum name="DOUBLEBUFFER"                             value="0x0C32"/>
    <enum name="STEREO"                                   value="0x0C33"/>
    <enum name="RENDER_MODE"                              value="0x0C40"/>
    <enum name="PERSPECTIVE_CORRECTION_HINT"              value="0x0C50"/>
    <enum name="POINT_SMOOTH_HINT"                        value="0x0C51"/>
    <enum name="LINE_SMOOTH_HINT"                         value="0x0C52"/>
    <enum name="POLYGON_SMOOTH_HINT"                      value="0x0C53"/>
    <enum name="FOG_HINT"                                 value="0x0C54"/>
    <enum name="TEXTURE_GEN_S"                            value="0x0C60"/>
    <enum name="TEXTURE_GEN_T"                            value="0x0C61"/>
    <enum name="TEXTURE_GEN_R"                            value="0x0C62"/>
    <enum name="TEXTURE_GEN_Q"                            value="0x0C63"/>
    <enum name="PIXEL_MAP_I_TO_I"                         value="0x0C70"/>
    <enum name="PIXEL_MAP_S_TO_S"                         value="0x0C71"/>
    <enum name="PIXEL_MAP_I_TO_R"                         value="0x0C72"/>
    <enum name="PIXEL_MAP_I_TO_G"                         value="0x0C73"/>
    <enum name="PIXEL_MAP_I_TO_B"                         value="0x0C74"/>
    <enum name="PIXEL_MAP_I_TO_A"                         value="0x0C75"/>
    <enum name="PIXEL_MAP_R_TO_R"                         value="0x0C76"/>
    <enum name="PIXEL_MAP_G_TO_G"                         value="0x0C77"/>
    <enum name="PIXEL_MAP_B_TO_B"                         value="0x0C78"/>
    <enum name="PIXEL_MAP_A_TO_A"                         value="0x0C79"/>
    <enum name="PIXEL_MAP_I_TO_I_SIZE"                    value="0x0CB0"/>
    <enum name="PIXEL_MAP_S_TO_S_SIZE"                    value="0x0CB1"/>
    <enum name="PIXEL_MAP_I_TO_R_SIZE"                    value="0x0CB2"/>
    <enum name="PIXEL_MAP_I_TO_G_SIZE"                    value="0x0CB3"/>
    <enum name="PIXEL_MAP_I_TO_B_SIZE"                    value="0x0CB4"/>
    <enum name="PIXEL_MAP_I_TO_A_SIZE"                    value="0x0CB5"/>
    <enum name="PIXEL_MAP_R_TO_R_SIZE"                    value="0x0CB6"/>
    <enum name="PIXEL_MAP_G_TO_G_SIZE"                    value="0x0CB7"/>
    <enum name="PIXEL_MAP_B_TO_B_SIZE"                    value="0x0CB8"/>
    <enum name="PIXEL_MAP_A_TO_A_SIZE"                    value="0x0CB9"/>
    <enum name="UNPACK_SWAP_BYTES"                        value="0x0CF0"/>
    <enum name="UNPACK_LSB_FIRST"                         value="0x0CF1"/>
    <enum name="UNPACK_ROW_LENGTH"                        value="0x0CF2"/>
    <enum name="UNPACK_SKIP_PIXELS"                       value="0x0CF4"/>
    <enum name="UNPACK_SKIP_ROWS"                         value="0x0CF3"/>
    <enum name="UNPACK_ALIGNMENT"                         value="0x0CF5"/>
    <enum name="PACK_SWAP_BYTES"                          value="0x0D00"/>
    <enum name="PACK_LSB_FIRST"                           value="0x0D01"/>
    <enum name="PACK_ROW_LENGTH"                          value="0x0D02"/>
    <enum name="PACK_SKIP_ROWS"                           value="0x0D03"/>
    <enum name="PACK_SKIP_PIXELS"                         value="0x0D04"/>
    <enum name="PACK_ALIGNMENT"                           value="0x0D05"/>
    <enum name="MAP_COLOR"                                value="0x0D10"/>
    <enum name="MAP_STENCIL"                              value="0x0D11"/>
    <enum name="INDEX_SHIFT"                              value="0x0D12"/>
    <enum name="INDEX_OFFSET"                             value="0x0D13"/>
    <enum name="RED_SCALE"                                value="0x0D14"/>
    <enum name="RED_BIAS"                                 value="0x0D15"/>
    <enum name="ZOOM_X"                                   value="0x0D16"/>
    <enum name="ZOOM_Y"                                   value="0x0D17"/>
    <enum name="GREEN_SCALE"                              value="0x0D18"/>
    <enum name="GREEN_BIAS"                               value="0x0D19"/>
    <enum name="BLUE_SCALE"                               value="0x0D1A"/>
    <enum name="BLUE_BIAS"                                value="0x0D1B"/>
    <enum name="ALPHA_SCALE"                              value="0x0D1C">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="ALPHA_BIAS"                               value="0x0D1D"/>
    <enum name="DEPTH_SCALE"                              value="0x0D1E"/>
    <enum name="DEPTH_BIAS"                               value="0x0D1F"/>
    <enum name="MAX_EVAL_ORDER"                           value="0x0D30"/>
    <enum name="MAX_LIGHTS"                               value="0x0D31"/>
    <enum name="MAX_CLIP_PLANES"                          value="0x0D32"/>
    <enum name="MAX_TEXTURE_SIZE"                         value="0x0D33"/>
    <enum name="MAX_PIXEL_MAP_TABLE"                      value="0x0D34"/>
    <enum name="MAX_ATTRIB_STACK_DEPTH"                   value="0x0D35"/>
    <enum name="MAX_MODELVIEW_STACK_DEPTH"                value="0x0D36"/>
    <enum name="MAX_NAME_STACK_DEPTH"                     value="0x0D37"/>
    <enum name="MAX_PROJECTION_STACK_DEPTH"               value="0x0D38"/>
    <enum name="MAX_TEXTURE_STACK_DEPTH"                  value="0x0D39"/>
    <enum name="MAX_VIEWPORT_DIMS"                        value="0x0D3A"/>
    <enum name="MAX_CLIENT_ATTRIB_STACK_DEPTH"            value="0x0D3B"/>
    <enum name="SUBPIXEL_BITS"                            value="0x0D50"/>
    <enum name="INDEX_BITS"                               value="0x0D51"/>
    <enum name="RED_BITS"                                 value="0x0D52"/>
    <enum name="GREEN_BITS"                               value="0x0D53"/>
    <enum name="BLUE_BITS"                                value="0x0D54"/>
    <enum name="ALPHA_BITS"                               value="0x0D55"/>
    <enum name="DEPTH_BITS"                               value="0x0D56"/>
    <enum name="STENCIL_BITS"                             value="0x0D57"/>
    <enum name="ACCUM_RED_BITS"                           value="0x0D58"/>
    <enum name="ACCUM_GREEN_BITS"                         value="0x0D59"/>
    <enum name="ACCUM_BLUE_BITS"                          value="0x0D5A"/>
    <enum name="ACCUM_ALPHA_BITS"                         value="0x0D5B"/>
    <enum name="NAME_STACK_DEPTH"                         value="0x0D70"/>
    <enum name="AUTO_NORMAL"                              value="0x0D80"/>
    <enum name="MAP1_COLOR_4"                             value="0x0D90">
        <size name="Map1d" count="4"/>
        <size name="Map1f" count="4"/>
    </enum>
    <enum name="MAP1_INDEX"                               value="0x0D91">
        <size name="Map1d" count="1"/>
        <size name="Map1f" count="1"/>
    </enum>
    <enum name="MAP1_NORMAL"                              value="0x0D92">
        <size name="Map1d" count="3"/>
        <size name="Map1f" count="3"/>
    </enum>
    <enum name="MAP1_TEXTURE_COORD_1"                     value="0x0D93">
        <size name="Map1d" count="1"/>
        <size name="Map1f" count="1"/>
    </enum>
    <enum name="MAP1_TEXTURE_COORD_2"                     value="0x0D94">
        <size name="Map1d" count="2"/>
        <size name="Map1f" count="2"/>
    </enum>
    <enum name="MAP1_TEXTURE_COORD_3"                     value="0x0D95">
        <size name="Map1d" count="3"/>
        <size name="Map1f" count="3"/>
    </enum>
    <enum name="MAP1_TEXTURE_COORD_4"                     value="0x0D96">
        <size name="Map1d" count="4"/>
        <size name="Map1f" count="4"/>
    </enum>
    <enum name="MAP1_VERTEX_3"                            value="0x0D97">
        <size name="Map1d" count="3"/>
        <size name="Map1f" count="3"/>
    </enum>
    <enum name="MAP1_VERTEX_4"                            value="0x0D98">
        <size name="Map1d" count="4"/>
        <size name="Map1f" count="4"/>
    </enum>
    <enum name="MAP2_COLOR_4"                             value="0x0DB0">
        <size name="Map2d" count="4"/>
        <size name="Map2f" count="4"/>
    </enum>
    <enum name="MAP2_INDEX"                               value="0x0DB1">
        <size name="Map2d" count="1"/>
        <size name="Map2f" count="1"/>
    </enum>
    <enum name="MAP2_NORMAL"                              value="0x0DB2">
        <size name="Map2d" count="3"/>
        <size name="Map2f" count="3"/>
    </enum>
    <enum name="MAP2_TEXTURE_COORD_1"                     value="0x0DB3">
        <size name="Map2d" count="1"/>
        <size name="Map2f" count="1"/>
    </enum>
    <enum name="MAP2_TEXTURE_COORD_2"                     value="0x0DB4">
        <size name="Map2d" count="2"/>
        <size name="Map2f" count="2"/>
    </enum>
    <enum name="MAP2_TEXTURE_COORD_3"                     value="0x0DB5">
        <size name="Map2d" count="3"/>
        <size name="Map2f" count="3"/>
    </enum>
    <enum name="MAP2_TEXTURE_COORD_4"                     value="0x0DB6">
        <size name="Map2d" count="4"/>
        <size name="Map2f" count="4"/>
    </enum>
    <enum name="MAP2_VERTEX_3"                            value="0x0DB7">
        <size name="Map2d" count="3"/>
        <size name="Map2f" count="3"/>
    </enum>
    <enum name="MAP2_VERTEX_4"                            value="0x0DB8">
        <size name="Map2d" count="4"/>
        <size name="Map2f" count="4"/>
    </enum>
    <enum name="MAP1_GRID_DOMAIN"                         value="0x0DD0"/>
    <enum name="MAP1_GRID_SEGMENTS"                       value="0x0DD1"/>
    <enum name="MAP2_GRID_DOMAIN"                         value="0x0DD2"/>
    <enum name="MAP2_GRID_SEGMENTS"                       value="0x0DD3"/>
    <enum name="TEXTURE_1D"                               value="0x0DE0"/>
    <enum name="TEXTURE_2D"                               value="0x0DE1"/>
    <enum name="FEEDBACK_BUFFER_POINTER"                  value="0x0DF0"/>
    <enum name="FEEDBACK_BUFFER_SIZE"                     value="0x0DF1"/>
    <enum name="FEEDBACK_BUFFER_TYPE"                     value="0x0DF2"/>
    <enum name="SELECTION_BUFFER_POINTER"                 value="0x0DF3"/>
    <enum name="SELECTION_BUFFER_SIZE"                    value="0x0DF4"/>
    <enum name="TEXTURE_WIDTH"                            value="0x1000"/>
    <enum name="TEXTURE_HEIGHT"                           value="0x1001"/>
    <enum name="TEXTURE_BORDER"                           value="0x1005"/>
    <enum name="TEXTURE_COMPONENTS"                       value="0x1003"/>
    <enum name="TEXTURE_BORDER_COLOR"                     value="0x1004">
        <size name="TexParameterfv" count="4"/>
        <size name="TexParameteriv" count="4"/>
    </enum>
    <enum name="DONT_CARE"                                value="0x1100"/>
    <enum name="FASTEST"                                  value="0x1101"/>
    <enum name="NICEST"                                   value="0x1102"/>
    <enum name="AMBIENT"                                  value="0x1200">
        <size name="Materialfv" count="4"/>
        <size name="Materialiv" count="4"/>
        <size name="Lightfv" count="4"/>
        <size name="Lightiv" count="4"/>
    </enum>
    <enum name="DIFFUSE"                                  value="0x1201">
        <size name="Materialfv" count="4"/>
        <size name="Materialiv" count="4"/>
        <size name="Lightfv" count="4"/>
        <size name="Lightiv" count="4"/>
    </enum>
    <enum name="SPECULAR"                                 value="0x1202">
        <size name="Materialfv" count="4"/>
        <size name="Materialiv" count="4"/>
        <size name="Lightfv" count="4"/>
        <size name="Lightiv" count="4"/>
    </enum>
    <enum name="POSITION"                                 value="0x1203">
        <size name="Lightfv" count="4"/>
        <size name="Lightiv" count="4"/>
    </enum>
    <enum name="SPOT_DIRECTION"                           value="0x1204">
        <size name="Lightfv" count="3"/>
        <size name="Lightiv" count="3"/>
    </enum>
    <enum name="SPOT_EXPONENT"                            value="0x1205">
        <size name="Lightfv" count="1"/>
        <size name="Lightiv" count="1"/>
    </enum>
    <enum name="SPOT_CUTOFF"                              value="0x1206">
        <size name="Lightfv" count="1"/>
        <size name="Lightiv" count="1"/>
    </enum>
    <enum name="CONSTANT_ATTENUATION"                     value="0x1207">
        <size name="Lightfv" count="1"/>
        <size name="Lightiv" count="1"/>
    </enum>
    <enum name="LINEAR_ATTENUATION"                       value="0x1208">
        <size name="Lightfv" count="1"/>
        <size name="Lightiv" count="1"/>
    </enum>
    <enum name="QUADRATIC_ATTENUATION"                    value="0x1209">
        <size name="Lightfv" count="1"/>
        <size name="Lightiv" count="1"/>
    </enum>
    <enum name="COMPILE"                                  value="0x1300"/>
    <enum name="COMPILE_AND_EXECUTE"                      value="0x1301"/>
    <enum name="BYTE"                                     value="0x1400">
        <size name="CallLists" count="1"/>
    </enum>
    <enum name="UNSIGNED_BYTE"                            value="0x1401">
        <size name="CallLists" count="1"/>
    </enum>
    <enum name="SHORT"                                    value="0x1402">
        <size name="CallLists" count="2"/>
    </enum>
    <enum name="UNSIGNED_SHORT"                           value="0x1403">
        <size name="CallLists" count="2"/>
    </enum>
    <enum name="INT"                                      value="0x1404">
        <size name="CallLists" count="4"/>
    </enum>
    <enum name="UNSIGNED_INT"                             value="0x1405">
        <size name="CallLists" count="4"/>
    </enum>
    <enum name="FLOAT"                                    value="0x1406">
        <size name="CallLists" count="4"/>
    </enum>
    <enum name="2_BYTES"                                  value="0x1407">
        <size name="CallLists" count="2"/>
    </enum>
    <enum name="3_BYTES"                                  value="0x1408">
        <size name="CallLists" count="3"/>
    </enum>
    <enum name="4_BYTES"                                  value="0x1409">
        <size name="CallLists" count="4"/>
    </enum>
    <enum name="CLEAR"                                    value="0x1500"/>
    <enum name="AND"                                      value="0x1501"/>
    <enum name="AND_REVERSE"                              value="0x1502"/>
    <enum name="COPY"                                     value="0x1503"/>
    <enum name="AND_INVERTED"                             value="0x1504"/>
    <enum name="NOOP"                                     value="0x1505"/>
    <enum name="XOR"                                      value="0x1506"/>
    <enum name="OR"                                       value="0x1507"/>
    <enum name="NOR"                                      value="0x1508"/>
    <enum name="EQUIV"                                    value="0x1509"/>
    <enum name="INVERT"                                   value="0x150A"/>
    <enum name="OR_REVERSE"                               value="0x150B"/>
    <enum name="COPY_INVERTED"                            value="0x150C"/>
    <enum name="OR_INVERTED"                              value="0x150D"/>
    <enum name="NAND"                                     value="0x150E"/>
    <enum name="SET"                                      value="0x150F"/>
    <enum name="EMISSION"                                 value="0x1600">
        <size name="Materialfv" count="4"/>
        <size name="Materialiv" count="4"/>
    </enum>
    <enum name="SHININESS"                                value="0x1601">
        <size name="Materialfv" count="1"/>
        <size name="Materialiv" count="1"/>
    </enum>
    <enum name="AMBIENT_AND_DIFFUSE"                      value="0x1602">
        <size name="Materialfv" count="4"/>
        <size name="Materialiv" count="4"/>
    </enum>
    <enum name="COLOR_INDEXES"                            value="0x1603">
        <size name="Materialfv" count="3"/>
        <size name="Materialiv" count="3"/>
    </enum>
    <enum name="MODELVIEW"                                value="0x1700"/>
    <enum name="PROJECTION"                               value="0x1701"/>
    <enum name="TEXTURE"                                  value="0x1702"/>
    <enum name="COLOR"                                    value="0x1800"/>
    <enum name="DEPTH"                                    value="0x1801"/>
    <enum name="STENCIL"                                  value="0x1802"/>
    <enum name="COLOR_INDEX"                              value="0x1900"/>
    <enum name="STENCIL_INDEX"                            value="0x1901"/>
    <enum name="DEPTH_COMPONENT"                          value="0x1902"/>
    <enum name="RED"                                      value="0x1903"/>
    <enum name="GREEN"                                    value="0x1904"/>
    <enum name="BLUE"                                     value="0x1905"/>
    <enum name="ALPHA"                                    value="0x1906"/>
    <enum name="RGBA"                                     value="0x1908"/>
    <enum name="RGB"                                      value="0x1907"/>
    <enum name="LUMINANCE"                                value="0x1909"/>
    <enum name="LUMINANCE_ALPHA"                          value="0x190A"/>
    <enum name="BITMAP"                                   value="0x1A00"/>
    <enum name="POINT"                                    value="0x1B00"/>
    <enum name="LINE"                                     value="0x1B01"/>
    <enum name="FILL"                                     value="0x1B02"/>
    <enum name="FEEDBACK"                                 value="0x1C01"/>
    <enum name="RENDER"                                   value="0x1C00"/>
    <enum name="SELECT"                                   value="0x1C02"/>
    <enum name="FLAT"                                     value="0x1D00"/>
    <enum name="SMOOTH"                                   value="0x1D01"/>
    <enum name="KEEP"                                     value="0x1E00"/>
    <enum name="REPLACE"                                  value="0x1E01"/>
    <enum name="INCR"                                     value="0x1E02"/>
    <enum name="DECR"                                     value="0x1E03"/>
    <enum name="VENDOR"                                   value="0x1F00"/>
    <enum name="RENDERER"                                 value="0x1F01"/>
    <enum name="VERSION"                                  value="0x1F02"/>
    <enum name="EXTENSIONS"                               value="0x1F03"/>
    <enum name="S"                                        value="0x2000"/>
    <enum name="T"                                        value="0x2001"/>
    <enum name="R"                                        value="0x2002"/>
    <enum name="Q"                                        value="0x2003"/>
    <enum name="MODULATE"                                 value="0x2100"/>
    <enum name="DECAL"                                    value="0x2101"/>
    <enum name="TEXTURE_ENV_MODE"                         value="0x2200">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="TEXTURE_ENV_COLOR"                        value="0x2201">
        <size name="TexEnvfv" count="4"/>
        <size name="TexEnviv" count="4"/>
    </enum>
    <enum name="TEXTURE_ENV"                              value="0x2300"/>
    <enum name="EYE_LINEAR"                               value="0x2400"/>
    <enum name="OBJECT_LINEAR"                            value="0x2401"/>
    <enum name="SPHERE_MAP"                               value="0x2402"/>
    <enum name="TEXTURE_GEN_MODE"                         value="0x2500">
        <size name="TexGendv" count="1"/>
        <size name="TexGenfv" count="1"/>
        <size name="TexGeniv" count="1"/>
    </enum>
    <enum name="OBJECT_PLANE"                             value="0x2501">
        <size name="TexGendv" count="4"/>
        <size name="TexGenfv" count="4"/>
        <size name="TexGeniv" count="4"/>
    </enum>
    <enum name="EYE_PLANE"                                value="0x2502">
        <size name="TexGendv" count="4"/>
        <size name="TexGenfv" count="4"/>
        <size name="TexGeniv" count="4"/>
    </enum>
    <enum name="NEAREST"                                  value="0x2600"/>
    <enum name="LINEAR"                                   value="0x2601"/>
    <enum name="NEAREST_MIPMAP_NEAREST"                   value="0x2700"/>
    <enum name="LINEAR_MIPMAP_NEAREST"                    value="0x2701"/>
    <enum name="NEAREST_MIPMAP_LINEAR"                    value="0x2702"/>
    <enum name="LINEAR_MIPMAP_LINEAR"                     value="0x2703"/>
    <enum name="TEXTURE_MAG_FILTER"                       value="0x2800">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_MIN_FILTER"                       value="0x2801">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_WRAP_S"                           value="0x2802">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_WRAP_T"                           value="0x2803">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="CLAMP"                                    value="0x2900"/>
    <enum name="REPEAT"                                   value="0x2901"/>
    <enum name="CLIP_PLANE0"                              value="0x3000"/>
    <enum name="CLIP_PLANE1"                              value="0x3001"/>
    <enum name="CLIP_PLANE2"                              value="0x3002"/>
    <enum name="CLIP_PLANE3"                              value="0x3003"/>
    <enum name="CLIP_PLANE4"                              value="0x3004"/>
    <enum name="CLIP_PLANE5"                              value="0x3005"/>
    <enum name="LIGHT0"                                   value="0x4000"/>
    <enum name="LIGHT1"                                   value="0x4001"/>
    <enum name="LIGHT2"                                   value="0x4002"/>
    <enum name="LIGHT3"                                   value="0x4003"/>
    <enum name="LIGHT4"                                   value="0x4004"/>
    <enum name="LIGHT5"                                   value="0x4005"/>
    <enum name="LIGHT6"                                   value="0x4006"/>
    <enum name="LIGHT7"                                   value="0x4007"/>
    <enum name="CURRENT_BIT"                              value="0x00000001"/>
    <enum name="POINT_BIT"                                value="0x00000002"/>
    <enum name="LINE_BIT"                                 value="0x00000004"/>
    <enum name="POLYGON_BIT"                              value="0x00000008"/>
    <enum name="POLYGON_STIPPLE_BIT"                      value="0x00000010"/>
    <enum name="PIXEL_MODE_BIT"                           value="0x00000020"/>
    <enum name="LIGHTING_BIT"                             value="0x00000040"/>
    <enum name="FOG_BIT"                                  value="0x00000080"/>
    <enum name="DEPTH_BUFFER_BIT"                         value="0x00000100"/>
    <enum name="ACCUM_BUFFER_BIT"                         value="0x00000200"/>
    <enum name="STENCIL_BUFFER_BIT"                       value="0x00000400"/>
    <enum name="VIEWPORT_BIT"                             value="0x00000800"/>
    <enum name="TRANSFORM_BIT"                            value="0x00001000"/>
    <enum name="ENABLE_BIT"                               value="0x00002000"/>
    <enum name="COLOR_BUFFER_BIT"                         value="0x00004000"/>
    <enum name="HINT_BIT"                                 value="0x00008000"/>
    <enum name="EVAL_BIT"                                 value="0x00010000"/>
    <enum name="LIST_BIT"                                 value="0x00020000"/>
    <enum name="TEXTURE_BIT"                              value="0x00040000"/>
    <enum name="SCISSOR_BIT"                              value="0x00080000"/>
    <enum name="ALL_ATTRIB_BITS"                          value="0x000FFFFF"/>

    <type name="double"  size="8"  glx_name="FLOAT64"/>
    <type name="clampd"  size="8"  glx_name="FLOAT64"/>

    <type name="float"   size="4"  glx_name="FLOAT32"/>
    <type name="clampf"  size="4"  glx_name="FLOAT32"/>

    <type name="int"     size="4"  glx_name="CARD32"/>
    <type name="uint"    size="4"  glx_name="CARD32"/>
    <type name="sizei"   size="4"  glx_name="CARD32"/>
    <type name="enum"    size="4"  glx_name="ENUM"/>
    <type name="bitfield" size="4" glx_name="CARD32"/>

    <type name="short"   size="2"  glx_name="CARD16"/>
    <type name="ushort"  size="2"  glx_name="CARD16"/>

    <type name="byte"    size="1"  glx_name="CARD8"/>
    <type name="ubyte"   size="1"  glx_name="CARD8"/>
    <type name="boolean" size="1"  glx_name="CARD8"/>
    
    <type name="void"    size="0"/>

    <function name="NewList" offset="0">
        <param name="list" type="GLuint"/>
        <param name="mode" type="GLenum"/>
        <glx sop="101"/>
    </function>

    <function name="EndList" offset="1">
        <glx sop="102"/>
    </function>

    <function name="CallList" offset="2">
        <param name="list" type="GLuint"/>
        <glx rop="1"/>
    </function>

    <function name="CallLists" offset="3">
        <param name="n" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="lists" type="const GLvoid *" variable_param="type" count="n"/>
        <glx rop="2" large="true"/>
    </function>

    <function name="DeleteLists" offset="4">
        <param name="list" type="GLuint"/>
        <param name="range" type="GLsizei"/>
        <glx sop="103"/>
    </function>

    <function name="GenLists" offset="5">
        <param name="range" type="GLsizei"/>
        <return type="GLuint"/>
        <glx sop="104"/>
    </function>

    <function name="ListBase" offset="6">
        <param name="base" type="GLuint"/>
        <glx rop="3"/>
    </function>

    <function name="Begin" offset="7">
        <param name="mode" type="GLenum"/>
        <glx rop="4"/>
    </function>

    <function name="Bitmap" offset="8">
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="xorig" type="GLfloat"/>
        <param name="yorig" type="GLfloat"/>
        <param name="xmove" type="GLfloat"/>
        <param name="ymove" type="GLfloat"/>
        <param name="bitmap" type="const GLubyte *" img_width="width" img_height="height" img_format="GL_COLOR_INDEX" img_type="GL_BITMAP" img_target="0" img_pad_dimensions="false"/>
        <glx rop="5" large="true"/>
    </function>

    <function name="Color3b" offset="9" vectorequiv="Color3bv">
        <param name="red" type="GLbyte"/>
        <param name="green" type="GLbyte"/>
        <param name="blue" type="GLbyte"/>
    </function>

    <function name="Color3bv" offset="10">
        <param name="v" type="const GLbyte *" count="3"/>
        <glx rop="6"/>
    </function>

    <function name="Color3d" offset="11" vectorequiv="Color3dv">
        <param name="red" type="GLdouble"/>
        <param name="green" type="GLdouble"/>
        <param name="blue" type="GLdouble"/>
    </function>

    <function name="Color3dv" offset="12">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="7"/>
    </function>

    <function name="Color3f" offset="13" vectorequiv="Color3fv">
        <param name="red" type="GLfloat"/>
        <param name="green" type="GLfloat"/>
        <param name="blue" type="GLfloat"/>
    </function>

    <function name="Color3fv" offset="14">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="8"/>
    </function>

    <function name="Color3i" offset="15" vectorequiv="Color3iv">
        <param name="red" type="GLint"/>
        <param name="green" type="GLint"/>
        <param name="blue" type="GLint"/>
    </function>

    <function name="Color3iv" offset="16">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="9"/>
    </function>

    <function name="Color3s" offset="17" vectorequiv="Color3sv">
        <param name="red" type="GLshort"/>
        <param name="green" type="GLshort"/>
        <param name="blue" type="GLshort"/>
    </function>

    <function name="Color3sv" offset="18">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="10"/>
    </function>

    <function name="Color3ub" offset="19" vectorequiv="Color3ubv">
        <param name="red" type="GLubyte"/>
        <param name="green" type="GLubyte"/>
        <param name="blue" type="GLubyte"/>
    </function>

    <function name="Color3ubv" offset="20">
        <param name="v" type="const GLubyte *" count="3"/>
        <glx rop="11"/>
    </function>

    <function name="Color3ui" offset="21" vectorequiv="Color3uiv">
        <param name="red" type="GLuint"/>
        <param name="green" type="GLuint"/>
        <param name="blue" type="GLuint"/>
    </function>

    <function name="Color3uiv" offset="22">
        <param name="v" type="const GLuint *" count="3"/>
        <glx rop="12"/>
    </function>

    <function name="Color3us" offset="23" vectorequiv="Color3usv">
        <param name="red" type="GLushort"/>
        <param name="green" type="GLushort"/>
        <param name="blue" type="GLushort"/>
    </function>

    <function name="Color3usv" offset="24">
        <param name="v" type="const GLushort *" count="3"/>
        <glx rop="13"/>
    </function>

    <function name="Color4b" offset="25" vectorequiv="Color4bv">
        <param name="red" type="GLbyte"/>
        <param name="green" type="GLbyte"/>
        <param name="blue" type="GLbyte"/>
        <param name="alpha" type="GLbyte"/>
    </function>

    <function name="Color4bv" offset="26">
        <param name="v" type="const GLbyte *" count="4"/>
        <glx rop="14"/>
    </function>

    <function name="Color4d" offset="27" vectorequiv="Color4dv">
        <param name="red" type="GLdouble"/>
        <param name="green" type="GLdouble"/>
        <param name="blue" type="GLdouble"/>
        <param name="alpha" type="GLdouble"/>
    </function>

    <function name="Color4dv" offset="28">
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="15"/>
    </function>

    <function name="Color4f" offset="29" vectorequiv="Color4fv">
        <param name="red" type="GLfloat"/>
        <param name="green" type="GLfloat"/>
        <param name="blue" type="GLfloat"/>
        <param name="alpha" type="GLfloat"/>
    </function>

    <function name="Color4fv" offset="30">
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="16"/>
    </function>

    <function name="Color4i" offset="31" vectorequiv="Color4iv">
        <param name="red" type="GLint"/>
        <param name="green" type="GLint"/>
        <param name="blue" type="GLint"/>
        <param name="alpha" type="GLint"/>
    </function>

    <function name="Color4iv" offset="32">
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="17"/>
    </function>

    <function name="Color4s" offset="33" vectorequiv="Color4sv">
        <param name="red" type="GLshort"/>
        <param name="green" type="GLshort"/>
        <param name="blue" type="GLshort"/>
        <param name="alpha" type="GLshort"/>
    </function>

    <function name="Color4sv" offset="34">
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="18"/>
    </function>

    <function name="Color4ub" offset="35" vectorequiv="Color4ubv">
        <param name="red" type="GLubyte"/>
        <param name="green" type="GLubyte"/>
        <param name="blue" type="GLubyte"/>
        <param name="alpha" type="GLubyte"/>
    </function>

    <function name="Color4ubv" offset="36">
        <param name="v" type="const GLubyte *" count="4"/>
        <glx rop="19"/>
    </function>

    <function name="Color4ui" offset="37" vectorequiv="Color4uiv">
        <param name="red" type="GLuint"/>
        <param name="green" type="GLuint"/>
        <param name="blue" type="GLuint"/>
        <param name="alpha" type="GLuint"/>
    </function>

    <function name="Color4uiv" offset="38">
        <param name="v" type="const GLuint *" count="4"/>
        <glx rop="20"/>
    </function>

    <function name="Color4us" offset="39" vectorequiv="Color4usv">
        <param name="red" type="GLushort"/>
        <param name="green" type="GLushort"/>
        <param name="blue" type="GLushort"/>
        <param name="alpha" type="GLushort"/>
    </function>

    <function name="Color4usv" offset="40">
        <param name="v" type="const GLushort *" count="4"/>
        <glx rop="21"/>
    </function>

    <function name="EdgeFlag" offset="41" vectorequiv="EdgeFlagv">
        <param name="flag" type="GLboolean"/>
    </function>

    <function name="EdgeFlagv" offset="42">
        <param name="flag" type="const GLboolean *" count="1"/>
        <glx rop="22"/>
    </function>

    <function name="End" offset="43">
        <glx rop="23"/>
    </function>

    <function name="Indexd" offset="44" vectorequiv="Indexdv">
        <param name="c" type="GLdouble"/>
    </function>

    <function name="Indexdv" offset="45">
        <param name="c" type="const GLdouble *" count="1"/>
        <glx rop="24"/>
    </function>

    <function name="Indexf" offset="46" vectorequiv="Indexfv">
        <param name="c" type="GLfloat"/>
    </function>

    <function name="Indexfv" offset="47">
        <param name="c" type="const GLfloat *" count="1"/>
        <glx rop="25"/>
    </function>

    <function name="Indexi" offset="48" vectorequiv="Indexiv">
        <param name="c" type="GLint"/>
    </function>

    <function name="Indexiv" offset="49">
        <param name="c" type="const GLint *" count="1"/>
        <glx rop="26"/>
    </function>

    <function name="Indexs" offset="50" vectorequiv="Indexsv">
        <param name="c" type="GLshort"/>
    </function>

    <function name="Indexsv" offset="51">
        <param name="c" type="const GLshort *" count="1"/>
        <glx rop="27"/>
    </function>

    <function name="Normal3b" offset="52" vectorequiv="Normal3bv">
        <param name="nx" type="GLbyte"/>
        <param name="ny" type="GLbyte"/>
        <param name="nz" type="GLbyte"/>
    </function>

    <function name="Normal3bv" offset="53">
        <param name="v" type="const GLbyte *" count="3"/>
        <glx rop="28"/>
    </function>

    <function name="Normal3d" offset="54" vectorequiv="Normal3dv">
        <param name="nx" type="GLdouble"/>
        <param name="ny" type="GLdouble"/>
        <param name="nz" type="GLdouble"/>
    </function>

    <function name="Normal3dv" offset="55">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="29"/>
    </function>

    <function name="Normal3f" offset="56" vectorequiv="Normal3fv">
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
    </function>

    <function name="Normal3fv" offset="57">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="30"/>
    </function>

    <function name="Normal3i" offset="58" vectorequiv="Normal3iv">
        <param name="nx" type="GLint"/>
        <param name="ny" type="GLint"/>
        <param name="nz" type="GLint"/>
    </function>

    <function name="Normal3iv" offset="59">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="31"/>
    </function>

    <function name="Normal3s" offset="60" vectorequiv="Normal3sv">
        <param name="nx" type="GLshort"/>
        <param name="ny" type="GLshort"/>
        <param name="nz" type="GLshort"/>
    </function>

    <function name="Normal3sv" offset="61">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="32"/>
    </function>

    <function name="RasterPos2d" offset="62" vectorequiv="RasterPos2dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
    </function>

    <function name="RasterPos2dv" offset="63">
        <param name="v" type="const GLdouble *" count="2"/>
        <glx rop="33"/>
    </function>

    <function name="RasterPos2f" offset="64" vectorequiv="RasterPos2fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
    </function>

    <function name="RasterPos2fv" offset="65">
        <param name="v" type="const GLfloat *" count="2"/>
        <glx rop="34"/>
    </function>

    <function name="RasterPos2i" offset="66" vectorequiv="RasterPos2iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
    </function>

    <function name="RasterPos2iv" offset="67">
        <param name="v" type="const GLint *" count="2"/>
        <glx rop="35"/>
    </function>

    <function name="RasterPos2s" offset="68" vectorequiv="RasterPos2sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
    </function>

    <function name="RasterPos2sv" offset="69">
        <param name="v" type="const GLshort *" count="2"/>
        <glx rop="36"/>
    </function>

    <function name="RasterPos3d" offset="70" vectorequiv="RasterPos3dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
    </function>

    <function name="RasterPos3dv" offset="71">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="37"/>
    </function>

    <function name="RasterPos3f" offset="72" vectorequiv="RasterPos3fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="RasterPos3fv" offset="73">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="38"/>
    </function>

    <function name="RasterPos3i" offset="74" vectorequiv="RasterPos3iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
    </function>

    <function name="RasterPos3iv" offset="75">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="39"/>
    </function>

    <function name="RasterPos3s" offset="76" vectorequiv="RasterPos3sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
    </function>

    <function name="RasterPos3sv" offset="77">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="40"/>
    </function>

    <function name="RasterPos4d" offset="78" vectorequiv="RasterPos4dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
    </function>

    <function name="RasterPos4dv" offset="79">
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="41"/>
    </function>

    <function name="RasterPos4f" offset="80" vectorequiv="RasterPos4fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
    </function>

    <function name="RasterPos4fv" offset="81">
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="42"/>
    </function>

    <function name="RasterPos4i" offset="82" vectorequiv="RasterPos4iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
        <param name="w" type="GLint"/>
    </function>

    <function name="RasterPos4iv" offset="83">
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="43"/>
    </function>

    <function name="RasterPos4s" offset="84" vectorequiv="RasterPos4sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <param name="w" type="GLshort"/>
    </function>

    <function name="RasterPos4sv" offset="85">
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="44"/>
    </function>

    <function name="Rectd" offset="86" vectorequiv="Rectdv">
        <param name="x1" type="GLdouble"/>
        <param name="y1" type="GLdouble"/>
        <param name="x2" type="GLdouble"/>
        <param name="y2" type="GLdouble"/>
    </function>

    <function name="Rectdv" offset="87">
        <param name="v1" type="const GLdouble *" count="2"/>
        <param name="v2" type="const GLdouble *" count="2"/>
        <glx rop="45"/>
    </function>

    <function name="Rectf" offset="88" vectorequiv="Rectfv">
        <param name="x1" type="GLfloat"/>
        <param name="y1" type="GLfloat"/>
        <param name="x2" type="GLfloat"/>
        <param name="y2" type="GLfloat"/>
    </function>

    <function name="Rectfv" offset="89">
        <param name="v1" type="const GLfloat *" count="2"/>
        <param name="v2" type="const GLfloat *" count="2"/>
        <glx rop="46"/>
    </function>

    <function name="Recti" offset="90" vectorequiv="Rectiv">
        <param name="x1" type="GLint"/>
        <param name="y1" type="GLint"/>
        <param name="x2" type="GLint"/>
        <param name="y2" type="GLint"/>
    </function>

    <function name="Rectiv" offset="91">
        <param name="v1" type="const GLint *" count="2"/>
        <param name="v2" type="const GLint *" count="2"/>
        <glx rop="47"/>
    </function>

    <function name="Rects" offset="92" vectorequiv="Rectsv">
        <param name="x1" type="GLshort"/>
        <param name="y1" type="GLshort"/>
        <param name="x2" type="GLshort"/>
        <param name="y2" type="GLshort"/>
    </function>

    <function name="Rectsv" offset="93">
        <param name="v1" type="const GLshort *" count="2"/>
        <param name="v2" type="const GLshort *" count="2"/>
        <glx rop="48"/>
    </function>

    <function name="TexCoord1d" offset="94" vectorequiv="TexCoord1dv">
        <param name="s" type="GLdouble"/>
    </function>

    <function name="TexCoord1dv" offset="95">
        <param name="v" type="const GLdouble *" count="1"/>
        <glx rop="49"/>
    </function>

    <function name="TexCoord1f" offset="96" vectorequiv="TexCoord1fv">
        <param name="s" type="GLfloat"/>
    </function>

    <function name="TexCoord1fv" offset="97">
        <param name="v" type="const GLfloat *" count="1"/>
        <glx rop="50"/>
    </function>

    <function name="TexCoord1i" offset="98" vectorequiv="TexCoord1iv">
        <param name="s" type="GLint"/>
    </function>

    <function name="TexCoord1iv" offset="99">
        <param name="v" type="const GLint *" count="1"/>
        <glx rop="51"/>
    </function>

    <function name="TexCoord1s" offset="100" vectorequiv="TexCoord1sv">
        <param name="s" type="GLshort"/>
    </function>

    <function name="TexCoord1sv" offset="101">
        <param name="v" type="const GLshort *" count="1"/>
        <glx rop="52"/>
    </function>

    <function name="TexCoord2d" offset="102" vectorequiv="TexCoord2dv">
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
    </function>

    <function name="TexCoord2dv" offset="103">
        <param name="v" type="const GLdouble *" count="2"/>
        <glx rop="53"/>
    </function>

    <function name="TexCoord2f" offset="104" vectorequiv="TexCoord2fv">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
    </function>

    <function name="TexCoord2fv" offset="105">
        <param name="v" type="const GLfloat *" count="2"/>
        <glx rop="54"/>
    </function>

    <function name="TexCoord2i" offset="106" vectorequiv="TexCoord2iv">
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
    </function>

    <function name="TexCoord2iv" offset="107">
        <param name="v" type="const GLint *" count="2"/>
        <glx rop="55"/>
    </function>

    <function name="TexCoord2s" offset="108" vectorequiv="TexCoord2sv">
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
    </function>

    <function name="TexCoord2sv" offset="109">
        <param name="v" type="const GLshort *" count="2"/>
        <glx rop="56"/>
    </function>

    <function name="TexCoord3d" offset="110" vectorequiv="TexCoord3dv">
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
    </function>

    <function name="TexCoord3dv" offset="111">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="57"/>
    </function>

    <function name="TexCoord3f" offset="112" vectorequiv="TexCoord3fv">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
    </function>

    <function name="TexCoord3fv" offset="113">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="58"/>
    </function>

    <function name="TexCoord3i" offset="114" vectorequiv="TexCoord3iv">
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
    </function>

    <function name="TexCoord3iv" offset="115">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="59"/>
    </function>

    <function name="TexCoord3s" offset="116" vectorequiv="TexCoord3sv">
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
    </function>

    <function name="TexCoord3sv" offset="117">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="60"/>
    </function>

    <function name="TexCoord4d" offset="118" vectorequiv="TexCoord4dv">
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
        <param name="q" type="GLdouble"/>
    </function>

    <function name="TexCoord4dv" offset="119">
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="61"/>
    </function>

    <function name="TexCoord4f" offset="120" vectorequiv="TexCoord4fv">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="q" type="GLfloat"/>
    </function>

    <function name="TexCoord4fv" offset="121">
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="62"/>
    </function>

    <function name="TexCoord4i" offset="122" vectorequiv="TexCoord4iv">
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
        <param name="q" type="GLint"/>
    </function>

    <function name="TexCoord4iv" offset="123">
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="63"/>
    </function>

    <function name="TexCoord4s" offset="124" vectorequiv="TexCoord4sv">
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
        <param name="q" type="GLshort"/>
    </function>

    <function name="TexCoord4sv" offset="125">
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="64"/>
    </function>

    <function name="Vertex2d" offset="126" vectorequiv="Vertex2dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
    </function>

    <function name="Vertex2dv" offset="127">
        <param name="v" type="const GLdouble *" count="2"/>
        <glx rop="65"/>
    </function>

    <function name="Vertex2f" offset="128" vectorequiv="Vertex2fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
    </function>

    <function name="Vertex2fv" offset="129">
        <param name="v" type="const GLfloat *" count="2"/>
        <glx rop="66"/>
    </function>

    <function name="Vertex2i" offset="130" vectorequiv="Vertex2iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
    </function>

    <function name="Vertex2iv" offset="131">
        <param name="v" type="const GLint *" count="2"/>
        <glx rop="67"/>
    </function>

    <function name="Vertex2s" offset="132" vectorequiv="Vertex2sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
    </function>

    <function name="Vertex2sv" offset="133">
        <param name="v" type="const GLshort *" count="2"/>
        <glx rop="68"/>
    </function>

    <function name="Vertex3d" offset="134" vectorequiv="Vertex3dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
    </function>

    <function name="Vertex3dv" offset="135">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="69"/>
    </function>

    <function name="Vertex3f" offset="136" vectorequiv="Vertex3fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="Vertex3fv" offset="137">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="70"/>
    </function>

    <function name="Vertex3i" offset="138" vectorequiv="Vertex3iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
    </function>

    <function name="Vertex3iv" offset="139">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="71"/>
    </function>

    <function name="Vertex3s" offset="140" vectorequiv="Vertex3sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
    </function>

    <function name="Vertex3sv" offset="141">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="72"/>
    </function>

    <function name="Vertex4d" offset="142" vectorequiv="Vertex4dv">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
    </function>

    <function name="Vertex4dv" offset="143">
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="73"/>
    </function>

    <function name="Vertex4f" offset="144" vectorequiv="Vertex4fv">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
    </function>

    <function name="Vertex4fv" offset="145">
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="74"/>
    </function>

    <function name="Vertex4i" offset="146" vectorequiv="Vertex4iv">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
        <param name="w" type="GLint"/>
    </function>

    <function name="Vertex4iv" offset="147">
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="75"/>
    </function>

    <function name="Vertex4s" offset="148" vectorequiv="Vertex4sv">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <param name="w" type="GLshort"/>
    </function>

    <function name="Vertex4sv" offset="149">
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="76"/>
    </function>

    <function name="ClipPlane" offset="150">
        <param name="plane" type="GLenum"/>
        <param name="equation" type="const GLdouble *" count="4"/>
        <glx rop="77"/>
    </function>

    <function name="ColorMaterial" offset="151">
        <param name="face" type="GLenum"/>
        <param name="mode" type="GLenum"/>
        <glx rop="78"/>
    </function>

    <function name="CullFace" offset="152">
        <param name="mode" type="GLenum"/>
        <glx rop="79"/>
    </function>

    <function name="Fogf" offset="153">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="80"/>
    </function>

    <function name="Fogfv" offset="154">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="81"/>
    </function>

    <function name="Fogi" offset="155">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="82"/>
    </function>

    <function name="Fogiv" offset="156">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="83"/>
    </function>

    <function name="FrontFace" offset="157">
        <param name="mode" type="GLenum"/>
        <glx rop="84"/>
    </function>

    <function name="Hint" offset="158">
        <param name="target" type="GLenum"/>
        <param name="mode" type="GLenum"/>
        <glx rop="85"/>
    </function>

    <function name="Lightf" offset="159">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="86"/>
    </function>

    <function name="Lightfv" offset="160">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="87"/>
    </function>

    <function name="Lighti" offset="161">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="88"/>
    </function>

    <function name="Lightiv" offset="162">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="89"/>
    </function>

    <function name="LightModelf" offset="163">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="90"/>
    </function>

    <function name="LightModelfv" offset="164">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="91"/>
    </function>

    <function name="LightModeli" offset="165">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="92"/>
    </function>

    <function name="LightModeliv" offset="166">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="93"/>
    </function>

    <function name="LineStipple" offset="167">
        <param name="factor" type="GLint"/>
        <param name="pattern" type="GLushort"/>
        <glx rop="94"/>
    </function>

    <function name="LineWidth" offset="168">
        <param name="width" type="GLfloat"/>
        <glx rop="95"/>
    </function>

    <function name="Materialf" offset="169">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="96"/>
    </function>

    <function name="Materialfv" offset="170">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="97"/>
    </function>

    <function name="Materiali" offset="171">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="98"/>
    </function>

    <function name="Materialiv" offset="172">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="99"/>
    </function>

    <function name="PointSize" offset="173">
        <param name="size" type="GLfloat"/>
        <glx rop="100"/>
    </function>

    <function name="PolygonMode" offset="174">
        <param name="face" type="GLenum"/>
        <param name="mode" type="GLenum"/>
        <glx rop="101"/>
    </function>

    <function name="PolygonStipple" offset="175">
        <param name="mask" type="const GLubyte *" img_width="32" img_height="32" img_format="GL_COLOR_INDEX" img_type="GL_BITMAP" img_target="0" img_pad_dimensions="false"/>
        <glx rop="102"/>
    </function>

    <function name="Scissor" offset="176">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <glx rop="103"/>
    </function>

    <function name="ShadeModel" offset="177">
        <param name="mode" type="GLenum"/>
        <glx rop="104"/>
    </function>

    <function name="TexParameterf" offset="178">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="105"/>
    </function>

    <function name="TexParameterfv" offset="179">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="106"/>
    </function>

    <function name="TexParameteri" offset="180">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="107"/>
    </function>

    <function name="TexParameteriv" offset="181">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="108"/>
    </function>

    <function name="TexImage1D" offset="182">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_format="format" img_type="type" img_target="target" img_send_null="true" img_pad_dimensions="true"/>
        <glx rop="109" large="true"/>
    </function>

    <function name="TexImage2D" offset="183">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_format="format" img_type="type" img_target="target" img_send_null="true" img_pad_dimensions="true"/>
        <glx rop="110" large="true"/>
    </function>

    <function name="TexEnvf" offset="184">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="111"/>
    </function>

    <function name="TexEnvfv" offset="185">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="112"/>
    </function>

    <function name="TexEnvi" offset="186">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="113"/>
    </function>

    <function name="TexEnviv" offset="187">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="114"/>
    </function>

    <function name="TexGend" offset="188">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLdouble"/>
        <glx rop="115"/>
    </function>

    <function name="TexGendv" offset="189">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLdouble *" variable_param="pname"/>
        <glx rop="116"/>
    </function>

    <function name="TexGenf" offset="190">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="117"/>
    </function>

    <function name="TexGenfv" offset="191">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="118"/>
    </function>

    <function name="TexGeni" offset="192">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="119"/>
    </function>

    <function name="TexGeniv" offset="193">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="120"/>
    </function>

    <function name="FeedbackBuffer" offset="194">
        <param name="size" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="buffer" type="GLfloat *" output="true"/>
        <glx sop="105" handcode="true"/>
    </function>

    <function name="SelectBuffer" offset="195">
        <param name="size" type="GLsizei"/>
        <param name="buffer" type="GLuint *" output="true"/>
        <glx sop="106" handcode="true"/>
    </function>

    <function name="RenderMode" offset="196">
        <param name="mode" type="GLenum"/>
        <return type="GLint"/>
        <glx sop="107" handcode="true"/>
    </function>

    <function name="InitNames" offset="197">
        <glx rop="121"/>
    </function>

    <function name="LoadName" offset="198">
        <param name="name" type="GLuint"/>
        <glx rop="122"/>
    </function>

    <function name="PassThrough" offset="199">
        <param name="token" type="GLfloat"/>
        <glx rop="123"/>
    </function>

    <function name="PopName" offset="200">
        <glx rop="124"/>
    </function>

    <function name="PushName" offset="201">
        <param name="name" type="GLuint"/>
        <glx rop="125"/>
    </function>

    <function name="DrawBuffer" offset="202">
        <param name="mode" type="GLenum"/>
        <glx rop="126"/>
    </function>

    <function name="Clear" offset="203">
        <param name="mask" type="GLbitfield"/>
        <glx rop="127"/>
    </function>

    <function name="ClearAccum" offset="204">
        <param name="red" type="GLfloat"/>
        <param name="green" type="GLfloat"/>
        <param name="blue" type="GLfloat"/>
        <param name="alpha" type="GLfloat"/>
        <glx rop="128"/>
    </function>

    <function name="ClearIndex" offset="205">
        <param name="c" type="GLfloat"/>
        <glx rop="129"/>
    </function>

    <function name="ClearColor" offset="206">
        <param name="red" type="GLclampf"/>
        <param name="green" type="GLclampf"/>
        <param name="blue" type="GLclampf"/>
        <param name="alpha" type="GLclampf"/>
        <glx rop="130"/>
    </function>

    <function name="ClearStencil" offset="207">
        <param name="s" type="GLint"/>
        <glx rop="131"/>
    </function>

    <function name="ClearDepth" offset="208">
        <param name="depth" type="GLclampd"/>
        <glx rop="132"/>
    </function>

    <function name="StencilMask" offset="209">
        <param name="mask" type="GLuint"/>
        <glx rop="133"/>
    </function>

    <function name="ColorMask" offset="210">
        <param name="red" type="GLboolean"/>
        <param name="green" type="GLboolean"/>
        <param name="blue" type="GLboolean"/>
        <param name="alpha" type="GLboolean"/>
        <glx rop="134"/>
    </function>

    <function name="DepthMask" offset="211">
        <param name="flag" type="GLboolean"/>
        <glx rop="135"/>
    </function>

    <function name="IndexMask" offset="212">
        <param name="mask" type="GLuint"/>
        <glx rop="136"/>
    </function>

    <function name="Accum" offset="213">
        <param name="op" type="GLenum"/>
        <param name="value" type="GLfloat"/>
        <glx rop="137"/>
    </function>

    <function name="Disable" offset="214">
        <param name="cap" type="GLenum"/>
        <glx rop="138" handcode="true"/>
    </function>

    <function name="Enable" offset="215">
        <param name="cap" type="GLenum"/>
        <glx rop="139" handcode="true"/>
    </function>

    <function name="Finish" offset="216">
        <glx sop="108" handcode="true"/>
    </function>

    <function name="Flush" offset="217">
        <glx sop="142" handcode="true"/>
    </function>

    <function name="PopAttrib" offset="218">
        <glx rop="141"/>
    </function>

    <function name="PushAttrib" offset="219">
        <param name="mask" type="GLbitfield"/>
        <glx rop="142"/>
    </function>

    <function name="Map1d" offset="220">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLdouble"/>
        <param name="u2" type="GLdouble"/>
        <param name="stride" type="GLint"/>
        <param name="order" type="GLint"/>
        <param name="points" type="const GLdouble *"/>
        <glx rop="143" handcode="true"/>
    </function>

    <function name="Map1f" offset="221">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLfloat"/>
        <param name="u2" type="GLfloat"/>
        <param name="stride" type="GLint"/>
        <param name="order" type="GLint"/>
        <param name="points" type="const GLfloat *"/>
        <glx rop="144" handcode="true"/>
    </function>

    <function name="Map2d" offset="222">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLdouble"/>
        <param name="u2" type="GLdouble"/>
        <param name="ustride" type="GLint"/>
        <param name="uorder" type="GLint"/>
        <param name="v1" type="GLdouble"/>
        <param name="v2" type="GLdouble"/>
        <param name="vstride" type="GLint"/>
        <param name="vorder" type="GLint"/>
        <param name="points" type="const GLdouble *"/>
        <glx rop="145" handcode="true"/>
    </function>

    <function name="Map2f" offset="223">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLfloat"/>
        <param name="u2" type="GLfloat"/>
        <param name="ustride" type="GLint"/>
        <param name="uorder" type="GLint"/>
        <param name="v1" type="GLfloat"/>
        <param name="v2" type="GLfloat"/>
        <param name="vstride" type="GLint"/>
        <param name="vorder" type="GLint"/>
        <param name="points" type="const GLfloat *"/>
        <glx rop="146" handcode="true"/>
    </function>

    <function name="MapGrid1d" offset="224">
        <param name="un" type="GLint"/>
        <param name="u1" type="GLdouble"/>
        <param name="u2" type="GLdouble"/>
        <glx rop="147"/>
    </function>

    <function name="MapGrid1f" offset="225">
        <param name="un" type="GLint"/>
        <param name="u1" type="GLfloat"/>
        <param name="u2" type="GLfloat"/>
        <glx rop="148"/>
    </function>

    <function name="MapGrid2d" offset="226">
        <param name="un" type="GLint"/>
        <param name="u1" type="GLdouble"/>
        <param name="u2" type="GLdouble"/>
        <param name="vn" type="GLint"/>
        <param name="v1" type="GLdouble"/>
        <param name="v2" type="GLdouble"/>
        <glx rop="149"/>
    </function>

    <function name="MapGrid2f" offset="227">
        <param name="un" type="GLint"/>
        <param name="u1" type="GLfloat"/>
        <param name="u2" type="GLfloat"/>
        <param name="vn" type="GLint"/>
        <param name="v1" type="GLfloat"/>
        <param name="v2" type="GLfloat"/>
        <glx rop="150"/>
    </function>

    <function name="EvalCoord1d" offset="228" vectorequiv="EvalCoord1dv">
        <param name="u" type="GLdouble"/>
    </function>

    <function name="EvalCoord1dv" offset="229">
        <param name="u" type="const GLdouble *" count="1"/>
        <glx rop="151"/>
    </function>

    <function name="EvalCoord1f" offset="230" vectorequiv="EvalCoord1fv">
        <param name="u" type="GLfloat"/>
    </function>

    <function name="EvalCoord1fv" offset="231">
        <param name="u" type="const GLfloat *" count="1"/>
        <glx rop="152"/>
    </function>

    <function name="EvalCoord2d" offset="232" vectorequiv="EvalCoord2dv">
        <param name="u" type="GLdouble"/>
        <param name="v" type="GLdouble"/>
    </function>

    <function name="EvalCoord2dv" offset="233">
        <param name="u" type="const GLdouble *" count="2"/>
        <glx rop="153"/>
    </function>

    <function name="EvalCoord2f" offset="234" vectorequiv="EvalCoord2fv">
        <param name="u" type="GLfloat"/>
        <param name="v" type="GLfloat"/>
    </function>

    <function name="EvalCoord2fv" offset="235">
        <param name="u" type="const GLfloat *" count="2"/>
        <glx rop="154"/>
    </function>

    <function name="EvalMesh1" offset="236">
        <param name="mode" type="GLenum"/>
        <param name="i1" type="GLint"/>
        <param name="i2" type="GLint"/>
        <glx rop="155"/>
    </function>

    <function name="EvalPoint1" offset="237">
        <param name="i" type="GLint"/>
        <glx rop="156"/>
    </function>

    <function name="EvalMesh2" offset="238">
        <param name="mode" type="GLenum"/>
        <param name="i1" type="GLint"/>
        <param name="i2" type="GLint"/>
        <param name="j1" type="GLint"/>
        <param name="j2" type="GLint"/>
        <glx rop="157"/>
    </function>

    <function name="EvalPoint2" offset="239">
        <param name="i" type="GLint"/>
        <param name="j" type="GLint"/>
        <glx rop="158"/>
    </function>

    <function name="AlphaFunc" offset="240">
        <param name="func" type="GLenum"/>
        <param name="ref" type="GLclampf"/>
        <glx rop="159"/>
    </function>

    <function name="BlendFunc" offset="241">
        <param name="sfactor" type="GLenum"/>
        <param name="dfactor" type="GLenum"/>
        <glx rop="160"/>
    </function>

    <function name="LogicOp" offset="242">
        <param name="opcode" type="GLenum"/>
        <glx rop="161"/>
    </function>

    <function name="StencilFunc" offset="243">
        <param name="func" type="GLenum"/>
        <param name="ref" type="GLint"/>
        <param name="mask" type="GLuint"/>
        <glx rop="162"/>
    </function>

    <function name="StencilOp" offset="244">
        <param name="fail" type="GLenum"/>
        <param name="zfail" type="GLenum"/>
        <param name="zpass" type="GLenum"/>
        <glx rop="163"/>
    </function>

    <function name="DepthFunc" offset="245">
        <param name="func" type="GLenum"/>
        <glx rop="164"/>
    </function>

    <function name="PixelZoom" offset="246">
        <param name="xfactor" type="GLfloat"/>
        <param name="yfactor" type="GLfloat"/>
        <glx rop="165"/>
    </function>

    <function name="PixelTransferf" offset="247">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="166"/>
    </function>

    <function name="PixelTransferi" offset="248">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="167"/>
    </function>

    <function name="PixelStoref" offset="249">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx sop="109" handcode="true"/>
    </function>

    <function name="PixelStorei" offset="250">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx sop="110" handcode="true"/>
    </function>

    <function name="PixelMapfv" offset="251">
        <param name="map" type="GLenum"/>
        <param name="mapsize" type="GLsizei" counter="true"/>
        <param name="values" type="const GLfloat *" count="mapsize"/>
        <glx rop="168" large="true"/>
    </function>

    <function name="PixelMapuiv" offset="252">
        <param name="map" type="GLenum"/>
        <param name="mapsize" type="GLsizei" counter="true"/>
        <param name="values" type="const GLuint *" count="mapsize"/>
        <glx rop="169" large="true"/>
    </function>

    <function name="PixelMapusv" offset="253">
        <param name="map" type="GLenum"/>
        <param name="mapsize" type="GLsizei" counter="true"/>
        <param name="values" type="const GLushort *" count="mapsize"/>
        <glx rop="170" large="true"/>
    </function>

    <function name="ReadBuffer" offset="254">
        <param name="mode" type="GLenum"/>
        <glx rop="171"/>
    </function>

    <function name="CopyPixels" offset="255">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <glx rop="172"/>
    </function>

    <function name="ReadPixels" offset="256">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="GLvoid *" output="true"/>
        <glx sop="111" handcode="true"/>
    </function>

    <function name="DrawPixels" offset="257">
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_format="format" img_type="type" img_target="0" img_pad_dimensions="false"/>
        <glx rop="173" large="true"/>
    </function>

    <function name="GetBooleanv" offset="258">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLboolean *" output="true"/>
        <glx sop="112" handcode="true"/>
    </function>

    <function name="GetClipPlane" offset="259">
        <param name="plane" type="GLenum"/>
        <param name="equation" type="GLdouble *" output="true"/>
        <glx sop="113" always_array="true"/>
    </function>

    <function name="GetDoublev" offset="260">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx sop="114" handcode="true"/>
    </function>

    <function name="GetError" offset="261">
        <return type="GLenum"/>
        <glx sop="115" handcode="true"/>
    </function>

    <function name="GetFloatv" offset="262">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="116" handcode="true"/>
    </function>

    <function name="GetIntegerv" offset="263">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="117" handcode="true"/>
    </function>

    <function name="GetLightfv" offset="264">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="118"/>
    </function>

    <function name="GetLightiv" offset="265">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="119"/>
    </function>

    <function name="GetMapdv" offset="266">
        <param name="target" type="GLenum"/>
        <param name="query" type="GLenum"/>
        <param name="v" type="GLdouble *" output="true"/>
        <glx sop="120"/>
    </function>

    <function name="GetMapfv" offset="267">
        <param name="target" type="GLenum"/>
        <param name="query" type="GLenum"/>
        <param name="v" type="GLfloat *" output="true"/>
        <glx sop="121"/>
    </function>

    <function name="GetMapiv" offset="268">
        <param name="target" type="GLenum"/>
        <param name="query" type="GLenum"/>
        <param name="v" type="GLint *" output="true"/>
        <glx sop="122"/>
    </function>

    <function name="GetMaterialfv" offset="269">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="123"/>
    </function>

    <function name="GetMaterialiv" offset="270">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="124"/>
    </function>

    <function name="GetPixelMapfv" offset="271">
        <param name="map" type="GLenum"/>
        <param name="values" type="GLfloat *" output="true"/>
        <glx sop="125"/>
    </function>

    <function name="GetPixelMapuiv" offset="272">
        <param name="map" type="GLenum"/>
        <param name="values" type="GLuint *" output="true"/>
        <glx sop="126"/>
    </function>

    <function name="GetPixelMapusv" offset="273">
        <param name="map" type="GLenum"/>
        <param name="values" type="GLushort *" output="true"/>
        <glx sop="127"/>
    </function>

    <function name="GetPolygonStipple" offset="274">
        <param name="mask" type="GLubyte *" output="true"/>
        <glx sop="128" handcode="true"/>
    </function>

    <function name="GetString" offset="275">
        <param name="name" type="GLenum"/>
        <return type="const GLubyte *"/>
        <glx sop="129" handcode="true"/>
    </function>

    <function name="GetTexEnvfv" offset="276">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="130"/>
    </function>

    <function name="GetTexEnviv" offset="277">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="131"/>
    </function>

    <function name="GetTexGendv" offset="278">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx sop="132"/>
    </function>

    <function name="GetTexGenfv" offset="279">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="133"/>
    </function>

    <function name="GetTexGeniv" offset="280">
        <param name="coord" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="134"/>
    </function>

    <function name="GetTexImage" offset="281">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="GLvoid *" output="true"/>
        <glx sop="135" handcode="true"/>
    </function>

    <function name="GetTexParameterfv" offset="282">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="136"/>
    </function>

    <function name="GetTexParameteriv" offset="283">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="137"/>
    </function>

    <function name="GetTexLevelParameterfv" offset="284">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="138"/>
    </function>

    <function name="GetTexLevelParameteriv" offset="285">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="139"/>
    </function>

    <function name="IsEnabled" offset="286">
        <param name="cap" type="GLenum"/>
        <return type="GLboolean"/>
        <glx sop="140" handcode="true"/>
    </function>

    <function name="IsList" offset="287">
        <param name="list" type="GLuint"/>
        <return type="GLboolean"/>
        <glx sop="141"/>
    </function>

    <function name="DepthRange" offset="288">
        <param name="zNear" type="GLclampd"/>
        <param name="zFar" type="GLclampd"/>
        <glx rop="174"/>
    </function>

    <function name="Frustum" offset="289">
        <param name="left" type="GLdouble"/>
        <param name="right" type="GLdouble"/>
        <param name="bottom" type="GLdouble"/>
        <param name="top" type="GLdouble"/>
        <param name="zNear" type="GLdouble"/>
        <param name="zFar" type="GLdouble"/>
        <glx rop="175"/>
    </function>

    <function name="LoadIdentity" offset="290">
        <glx rop="176"/>
    </function>

    <function name="LoadMatrixf" offset="291">
        <param name="m" type="const GLfloat *" count="16"/>
        <glx rop="177"/>
    </function>

    <function name="LoadMatrixd" offset="292">
        <param name="m" type="const GLdouble *" count="16"/>
        <glx rop="178"/>
    </function>

    <function name="MatrixMode" offset="293">
        <param name="mode" type="GLenum"/>
        <glx rop="179"/>
    </function>

    <function name="MultMatrixf" offset="294">
        <param name="m" type="const GLfloat *" count="16"/>
        <glx rop="180"/>
    </function>

    <function name="MultMatrixd" offset="295">
        <param name="m" type="const GLdouble *" count="16"/>
        <glx rop="181"/>
    </function>

    <function name="Ortho" offset="296">
        <param name="left" type="GLdouble"/>
        <param name="right" type="GLdouble"/>
        <param name="bottom" type="GLdouble"/>
        <param name="top" type="GLdouble"/>
        <param name="zNear" type="GLdouble"/>
        <param name="zFar" type="GLdouble"/>
        <glx rop="182"/>
    </function>

    <function name="PopMatrix" offset="297">
        <glx rop="183"/>
    </function>

    <function name="PushMatrix" offset="298">
        <glx rop="184"/>
    </function>

    <function name="Rotated" offset="299">
        <param name="angle" type="GLdouble"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx rop="185"/>
    </function>

    <function name="Rotatef" offset="300">
        <param name="angle" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <glx rop="186"/>
    </function>

    <function name="Scaled" offset="301">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx rop="187"/>
    </function>

    <function name="Scalef" offset="302">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <glx rop="188"/>
    </function>

    <function name="Translated" offset="303">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx rop="189"/>
    </function>

    <function name="Translatef" offset="304">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <glx rop="190"/>
    </function>

    <function name="Viewport" offset="305">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <glx rop="191"/>
    </function>
</category>

<category name="1.1">
    <enum name="INDEX_LOGIC_OP"                           value="0x0BF1"/>
    <enum name="COLOR_LOGIC_OP"                           value="0x0BF2"/>
    <enum name="TEXTURE_INTERNAL_FORMAT"                  value="0x1003"/>
    <enum name="DOUBLE"                                   value="0x140A"/>
    <enum name="POLYGON_OFFSET_UNITS"                     value="0x2A00"/>
    <enum name="POLYGON_OFFSET_POINT"                     value="0x2A01"/>
    <enum name="POLYGON_OFFSET_LINE"                      value="0x2A02"/>
    <enum name="R3_G3_B2"                                 value="0x2A10"/>
    <enum name="V2F"                                      value="0x2A20"/>
    <enum name="V3F"                                      value="0x2A21"/>
    <enum name="C4UB_V2F"                                 value="0x2A22"/>
    <enum name="C4UB_V3F"                                 value="0x2A23"/>
    <enum name="C3F_V3F"                                  value="0x2A24"/>
    <enum name="N3F_V3F"                                  value="0x2A25"/>
    <enum name="C4F_N3F_V3F"                              value="0x2A26"/>
    <enum name="T2F_V3F"                                  value="0x2A27"/>
    <enum name="T4F_V4F"                                  value="0x2A28"/>
    <enum name="T2F_C4UB_V3F"                             value="0x2A29"/>
    <enum name="T2F_C3F_V3F"                              value="0x2A2A"/>
    <enum name="T2F_N3F_V3F"                              value="0x2A2B"/>
    <enum name="T2F_C4F_N3F_V3F"                          value="0x2A2C"/>
    <enum name="T4F_C4F_N3F_V4F"                          value="0x2A2D"/>
    <enum name="POLYGON_OFFSET_FILL"                      value="0x8037"/>
    <enum name="POLYGON_OFFSET_FACTOR"                    value="0x8038"/>
    <enum name="POLYGON_OFFSET_BIAS"                      value="0x8039"/>
    <enum name="ALPHA4"                                   value="0x803B"/>
    <enum name="ALPHA8"                                   value="0x803C"/>
    <enum name="ALPHA12"                                  value="0x803D"/>
    <enum name="ALPHA16"                                  value="0x803E"/>
    <enum name="LUMINANCE4"                               value="0x803F"/>
    <enum name="LUMINANCE8"                               value="0x8040"/>
    <enum name="LUMINANCE12"                              value="0x8041"/>
    <enum name="LUMINANCE16"                              value="0x8042"/>
    <enum name="LUMINANCE4_ALPHA4"                        value="0x8043"/>
    <enum name="LUMINANCE6_ALPHA2"                        value="0x8044"/>
    <enum name="LUMINANCE8_ALPHA8"                        value="0x8045"/>
    <enum name="LUMINANCE12_ALPHA4"                       value="0x8046"/>
    <enum name="LUMINANCE12_ALPHA12"                      value="0x8047"/>
    <enum name="LUMINANCE16_ALPHA16"                      value="0x8048"/>
    <enum name="INTENSITY"                                value="0x8049"/>
    <enum name="INTENSITY4"                               value="0x804A"/>
    <enum name="INTENSITY8"                               value="0x804B"/>
    <enum name="INTENSITY12"                              value="0x804C"/>
    <enum name="INTENSITY16"                              value="0x804D"/>
    <enum name="RGB4"                                     value="0x804F"/>
    <enum name="RGB5"                                     value="0x8050"/>
    <enum name="RGB8"                                     value="0x8051"/>
    <enum name="RGB10"                                    value="0x8052"/>
    <enum name="RGB12"                                    value="0x8053"/>
    <enum name="RGB16"                                    value="0x8054"/>
    <enum name="RGBA2"                                    value="0x8055"/>
    <enum name="RGBA4"                                    value="0x8056"/>
    <enum name="RGB5_A1"                                  value="0x8057"/>
    <enum name="RGBA8"                                    value="0x8058"/>
    <enum name="RGB10_A2"                                 value="0x8059"/>
    <enum name="RGBA12"                                   value="0x805A"/>
    <enum name="RGBA16"                                   value="0x805B"/>
    <enum name="TEXTURE_RED_SIZE"                         value="0x805C"/>
    <enum name="TEXTURE_GREEN_SIZE"                       value="0x805D"/>
    <enum name="TEXTURE_BLUE_SIZE"                        value="0x805E"/>
    <enum name="TEXTURE_ALPHA_SIZE"                       value="0x805F"/>
    <enum name="TEXTURE_LUMINANCE_SIZE"                   value="0x8060"/>
    <enum name="TEXTURE_INTENSITY_SIZE"                   value="0x8061"/>
    <enum name="PROXY_TEXTURE_1D"                         value="0x8063"/>
    <enum name="PROXY_TEXTURE_2D"                         value="0x8064"/>
    <enum name="TEXTURE_PRIORITY"                         value="0x8066">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_RESIDENT"                         value="0x8067">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_BINDING_1D"                       value="0x8068"/>
    <enum name="TEXTURE_BINDING_2D"                       value="0x8069"/>
    <enum name="VERTEX_ARRAY"                             value="0x8074"/>
    <enum name="NORMAL_ARRAY"                             value="0x8075"/>
    <enum name="COLOR_ARRAY"                              value="0x8076"/>
    <enum name="INDEX_ARRAY"                              value="0x8077"/>
    <enum name="TEXTURE_COORD_ARRAY"                      value="0x8078"/>
    <enum name="EDGE_FLAG_ARRAY"                          value="0x8079"/>
    <enum name="VERTEX_ARRAY_SIZE"                        value="0x807A"/>
    <enum name="VERTEX_ARRAY_TYPE"                        value="0x807B"/>
    <enum name="VERTEX_ARRAY_STRIDE"                      value="0x807C"/>
    <enum name="VERTEX_ARRAY_COUNT"                       value="0x807D"/>
    <enum name="NORMAL_ARRAY_TYPE"                        value="0x807E"/>
    <enum name="NORMAL_ARRAY_STRIDE"                      value="0x807F"/>
    <enum name="NORMAL_ARRAY_COUNT"                       value="0x8080"/>
    <enum name="COLOR_ARRAY_SIZE"                         value="0x8081"/>
    <enum name="COLOR_ARRAY_TYPE"                         value="0x8082"/>
    <enum name="COLOR_ARRAY_STRIDE"                       value="0x8083"/>
    <enum name="COLOR_ARRAY_COUNT"                        value="0x8084"/>
    <enum name="INDEX_ARRAY_TYPE"                         value="0x8085"/>
    <enum name="INDEX_ARRAY_STRIDE"                       value="0x8086"/>
    <enum name="INDEX_ARRAY_COUNT"                        value="0x8087"/>
    <enum name="TEXTURE_COORD_ARRAY_SIZE"                 value="0x8088"/>
    <enum name="TEXTURE_COORD_ARRAY_TYPE"                 value="0x8089"/>
    <enum name="TEXTURE_COORD_ARRAY_STRIDE"               value="0x808A"/>
    <enum name="TEXTURE_COORD_ARRAY_COUNT"                value="0x808B"/>
    <enum name="EDGE_FLAG_ARRAY_STRIDE"                   value="0x808C"/>
    <enum name="EDGE_FLAG_ARRAY_COUNT"                    value="0x808D"/>
    <enum name="VERTEX_ARRAY_POINTER"                     value="0x808E"/>
    <enum name="NORMAL_ARRAY_POINTER"                     value="0x808F"/>
    <enum name="COLOR_ARRAY_POINTER"                      value="0x8090"/>
    <enum name="INDEX_ARRAY_POINTER"                      value="0x8091"/>
    <enum name="TEXTURE_COORD_ARRAY_POINTER"              value="0x8092"/>
    <enum name="EDGE_FLAG_ARRAY_POINTER"                  value="0x8093"/>
    <enum name="CLIENT_PIXEL_STORE_BIT"                   value="0x00000001"/>
    <enum name="CLIENT_VERTEX_ARRAY_BIT"                  value="0x00000002"/>
    <enum name="ALL_CLIENT_ATTRIB_BITS"                   value="0xFFFFFFFF"/>
    <enum name="CLIENT_ALL_ATTRIB_BITS"                   value="0xFFFFFFFF"/>

    <function name="ArrayElement" offset="306">
        <param name="i" type="GLint"/>
        <glx handcode="true"/>
    </function>

    <function name="ColorPointer" offset="308">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="DisableClientState" offset="309">
        <param name="array" type="GLenum"/>
        <glx handcode="true"/>
    </function>

    <function name="DrawArrays" offset="310">
        <param name="mode" type="GLenum"/>
        <param name="first" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <glx handcode="true"/>
    </function>

    <function name="DrawElements" offset="311">
        <param name="mode" type="GLenum"/>
        <param name="count" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="EdgeFlagPointer" offset="312">
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="EnableClientState" offset="313">
        <param name="array" type="GLenum"/>
        <glx handcode="true"/>
    </function>

    <function name="GetPointerv" offset="329">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLvoid **" output="true"/>
        <glx handcode="true"/>
    </function>

    <function name="IndexPointer" offset="314">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="InterleavedArrays" offset="317">
        <param name="format" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="NormalPointer" offset="318">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="TexCoordPointer" offset="320">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="VertexPointer" offset="321">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="PolygonOffset" offset="319">
        <param name="factor" type="GLfloat"/>
        <param name="units" type="GLfloat"/>
        <glx rop="192"/>
    </function>

    <function name="CopyTexImage1D" offset="323">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <glx rop="4119"/>
    </function>

    <function name="CopyTexImage2D" offset="324">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <glx rop="4120"/>
    </function>

    <function name="CopyTexSubImage1D" offset="325">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <glx rop="4121"/>
    </function>

    <function name="CopyTexSubImage2D" offset="326">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <glx rop="4122"/>
    </function>

    <function name="TexSubImage1D" offset="332">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_xoff="xoffset" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="4099" large="true"/>
    </function>

    <function name="TexSubImage2D" offset="333">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_xoff="xoffset" img_yoff="yoffset" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="4100" large="true"/>
    </function>

    <function name="AreTexturesResident" offset="322">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="textures" type="const GLuint *" count="n"/>
        <param name="residences" type="GLboolean *" output="true"/>
        <return type="GLboolean"/>
        <glx sop="143" always_array="true"/>
    </function>

    <function name="BindTexture" offset="307">
        <param name="target" type="GLenum"/>
        <param name="texture" type="GLuint"/>
        <glx rop="4117"/>
    </function>

    <function name="DeleteTextures" offset="327">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="textures" type="const GLuint *" count="n"/>
        <glx sop="144"/>
    </function>

    <function name="GenTextures" offset="328">
        <param name="n" type="GLsizei"/>
        <param name="textures" type="GLuint *" output="true"/>
        <glx sop="145" always_array="true"/>
    </function>

    <function name="IsTexture" offset="330">
        <param name="texture" type="GLuint"/>
        <return type="GLboolean"/>
        <glx sop="146"/>
    </function>

    <function name="PrioritizeTextures" offset="331">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="textures" type="const GLuint *" count="n"/>
        <param name="priorities" type="const GLclampf *" count="n"/>
        <glx rop="4118"/>
    </function>

    <function name="Indexub" offset="315" vectorequiv="Indexubv">
        <param name="c" type="GLubyte"/>
    </function>

    <function name="Indexubv" offset="316">
        <param name="c" type="const GLubyte *" count="1"/>
        <glx rop="194"/>
    </function>

    <function name="PopClientAttrib" offset="334">
        <glx handcode="true"/>
    </function>

    <function name="PushClientAttrib" offset="335">
        <param name="mask" type="GLbitfield"/>
        <glx handcode="true"/>
    </function>
</category>

<category name="1.2">
    <enum name="UNSIGNED_BYTE_3_3_2"                      value="0x8032"/>
    <enum name="UNSIGNED_SHORT_4_4_4_4"                   value="0x8033"/>
    <enum name="UNSIGNED_SHORT_5_5_5_1"                   value="0x8034"/>
    <enum name="UNSIGNED_INT_8_8_8_8"                     value="0x8035"/>
    <enum name="UNSIGNED_INT_10_10_10_2"                  value="0x8036"/>
    <enum name="RESCALE_NORMAL"                           value="0x803A"/>
    <enum name="TEXTURE_BINDING_3D"                       value="0x806A"/>
    <enum name="PACK_SKIP_IMAGES"                         value="0x806B"/>
    <enum name="PACK_IMAGE_HEIGHT"                        value="0x806C"/>
    <enum name="UNPACK_SKIP_IMAGES"                       value="0x806D"/>
    <enum name="UNPACK_IMAGE_HEIGHT"                      value="0x806E"/>
    <enum name="TEXTURE_3D"                               value="0x806F"/>
    <enum name="PROXY_TEXTURE_3D"                         value="0x8070"/>
    <enum name="TEXTURE_DEPTH"                            value="0x8071"/>
    <enum name="TEXTURE_WRAP_R"                           value="0x8072">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="MAX_3D_TEXTURE_SIZE"                      value="0x8073"/>
    <enum name="UNSIGNED_BYTE_2_3_3_REV"                  value="0x8362"/>
    <enum name="UNSIGNED_SHORT_5_6_5"                     value="0x8363"/>
    <enum name="UNSIGNED_SHORT_5_6_5_REV"                 value="0x8364"/>
    <enum name="UNSIGNED_SHORT_4_4_4_4_REV"               value="0x8365"/>
    <enum name="UNSIGNED_SHORT_1_5_5_5_REV"               value="0x8366"/>
    <enum name="UNSIGNED_INT_8_8_8_8_REV"                 value="0x8367"/>
    <enum name="UNSIGNED_INT_2_10_10_10_REV"              value="0x8368"/>
    <enum name="BGR"                                      value="0x80E0"/>
    <enum name="BGRA"                                     value="0x80E1"/>
    <enum name="MAX_ELEMENTS_VERTICES"                    value="0x80E8"/>
    <enum name="MAX_ELEMENTS_INDICES"                     value="0x80E9"/>
    <enum name="CLAMP_TO_EDGE"                            value="0x812F"/>
    <enum name="TEXTURE_MIN_LOD"                          value="0x813A">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_MAX_LOD"                          value="0x813B">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_BASE_LEVEL"                       value="0x813C">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_MAX_LEVEL"                        value="0x813D">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="LIGHT_MODEL_COLOR_CONTROL"                value="0x81F8">
        <size name="LightModelfv" count="1"/>
        <size name="LightModeliv" count="1"/>
    </enum>
    <enum name="SINGLE_COLOR"                             value="0x81F9"/>
    <enum name="SEPARATE_SPECULAR_COLOR"                  value="0x81FA"/>
    <enum name="SMOOTH_POINT_SIZE_RANGE"                  value="0x0B12"/>
    <enum name="SMOOTH_POINT_SIZE_GRANULARITY"            value="0x0B13"/>
    <enum name="SMOOTH_LINE_WIDTH_RANGE"                  value="0x0B22"/>
    <enum name="SMOOTH_LINE_WIDTH_GRANULARITY"            value="0x0B23"/>
    <enum name="ALIASED_POINT_SIZE_RANGE"                 value="0x846D"/>
    <enum name="ALIASED_LINE_WIDTH_RANGE"                 value="0x846E"/>

    <!-- These enums are actually part of the ARB_imaging subset. -->
    
    <enum name="COLOR_TABLE_SCALE"                        value="0x80D6">
        <size name="ColorTableParameterfv" count="4"/>
        <size name="ColorTableParameteriv" count="4"/>
    </enum>
    <enum name="COLOR_TABLE_BIAS"                         value="0x80D7">
        <size name="ColorTableParameterfv" count="4"/>
        <size name="ColorTableParameteriv" count="4"/>
    </enum>
    <enum name="COLOR_TABLE_FORMAT"                       value="0x80D8">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_WIDTH"                        value="0x80D9">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_RED_SIZE"                     value="0x80DA">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_GREEN_SIZE"                   value="0x80DB">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_BLUE_SIZE"                    value="0x80DC">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_ALPHA_SIZE"                   value="0x80DD">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_LUMINANCE_SIZE"               value="0x80DE">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>
    <enum name="COLOR_TABLE_INTENSITY_SIZE"               value="0x80DF">
        <size name="ColorTableParameterfv" count="1"/>
        <size name="ColorTableParameteriv" count="1"/>
    </enum>


    <function name="BlendColor" offset="336">
        <param name="red" type="GLclampf"/>
        <param name="green" type="GLclampf"/>
        <param name="blue" type="GLclampf"/>
        <param name="alpha" type="GLclampf"/>
        <glx rop="4096"/>
    </function>

    <function name="BlendEquation" offset="337">
        <param name="mode" type="GLenum"/>
        <glx rop="4097"/>
    </function>

    <function name="DrawRangeElements" offset="338">
        <param name="mode" type="GLenum"/>
        <param name="start" type="GLuint"/>
        <param name="end" type="GLuint"/>
        <param name="count" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="ColorTable" offset="339">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="table" type="const GLvoid *" img_width="width" img_pad_dimensions="false" img_format="format" img_type="type" img_target="target"/>
        <glx rop="2053" large="true"/>
    </function>

    <function name="ColorTableParameterfv" offset="340">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="2054"/>
    </function>

    <function name="ColorTableParameteriv" offset="341">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="2055"/>
    </function>

    <function name="CopyColorTable" offset="342">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <glx rop="2056"/>
    </function>

    <function name="GetColorTable" offset="343">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="table" type="GLvoid *" output="true"/>
        <glx sop="147" handcode="true"/>
    </function>

    <function name="GetColorTableParameterfv" offset="344">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="148"/>
    </function>

    <function name="GetColorTableParameteriv" offset="345">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="149"/>
    </function>

    <function name="ColorSubTable" offset="346">
        <param name="target" type="GLenum"/>
        <param name="start" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="data" type="const GLvoid *" img_width="count" img_pad_dimensions="false" img_format="format" img_type="type" img_target="target"/>
        <glx rop="195" large="true"/>
    </function>

    <function name="CopyColorSubTable" offset="347">
        <param name="target" type="GLenum"/>
        <param name="start" type="GLsizei"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <glx rop="196"/>
    </function>

    <function name="ConvolutionFilter1D" offset="348">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="const GLvoid *" img_width="width" img_format="format" img_type="type" img_target="target" img_pad_dimensions="true"/>
        <glx rop="4101" large="true"/>
    </function>

    <function name="ConvolutionFilter2D" offset="349">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="const GLvoid *" img_width="width" img_height="height" img_format="format" img_type="type" img_target="target" img_pad_dimensions="true"/>
        <glx rop="4102" large="true"/>
    </function>

    <function name="ConvolutionParameterf" offset="350">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat"/>
        <glx rop="4103"/>
    </function>

    <function name="ConvolutionParameterfv" offset="351">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="4104"/>
    </function>

    <function name="ConvolutionParameteri" offset="352">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint"/>
        <glx rop="4105"/>
    </function>

    <function name="ConvolutionParameteriv" offset="353">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="4106"/>
    </function>

    <function name="CopyConvolutionFilter1D" offset="354">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <glx rop="4107"/>
    </function>

    <function name="CopyConvolutionFilter2D" offset="355">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <glx rop="4108"/>
    </function>

    <function name="GetConvolutionFilter" offset="356">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="GLvoid *" output="true"/>
        <glx sop="150" handcode="true"/>
    </function>

    <function name="GetConvolutionParameterfv" offset="357">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="151"/>
    </function>

    <function name="GetConvolutionParameteriv" offset="358">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="152"/>
    </function>

    <function name="GetSeparableFilter" offset="359">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="row" type="GLvoid *" output="true"/>
        <param name="column" type="GLvoid *" output="true"/>
        <param name="span" type="GLvoid *" output="true"/>
        <glx sop="153" handcode="true"/>
    </function>

    <function name="SeparableFilter2D" offset="360">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="row" type="const GLvoid *"/>
        <param name="column" type="const GLvoid *"/>
        <glx rop="4109" handcode="true"/>
    </function>

    <function name="GetHistogram" offset="361">
        <param name="target" type="GLenum"/>
        <param name="reset" type="GLboolean"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="values" type="GLvoid *" output="true"/>
        <glx sop="154" handcode="true"/>
    </function>

    <function name="GetHistogramParameterfv" offset="362">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="155"/>
    </function>

    <function name="GetHistogramParameteriv" offset="363">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="156"/>
    </function>

    <function name="GetMinmax" offset="364">
        <param name="target" type="GLenum"/>
        <param name="reset" type="GLboolean"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="values" type="GLvoid *" output="true"/>
        <glx sop="157" handcode="true"/>
    </function>

    <function name="GetMinmaxParameterfv" offset="365">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="158"/>
    </function>

    <function name="GetMinmaxParameteriv" offset="366">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="159"/>
    </function>

    <function name="Histogram" offset="367">
        <param name="target" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="internalformat" type="GLenum"/>
        <param name="sink" type="GLboolean"/>
        <glx rop="4110"/>
    </function>

    <function name="Minmax" offset="368">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="sink" type="GLboolean"/>
        <glx rop="4111"/>
    </function>

    <function name="ResetHistogram" offset="369">
        <param name="target" type="GLenum"/>
        <glx rop="4112"/>
    </function>

    <function name="ResetMinmax" offset="370">
        <param name="target" type="GLenum"/>
        <glx rop="4113"/>
    </function>

    <function name="TexImage3D" offset="371">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_depth="depth" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="4114" large="true"/>
    </function>

    <function name="TexSubImage3D" offset="372">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_depth="depth" img_xoff="xoffset" img_yoff="yoffset" img_zoff="zoffset" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="4115" large="true"/>
    </function>

    <function name="CopyTexSubImage3D" offset="373">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <glx rop="4123"/>
    </function>
</category>

<category name="1.3">
    <enum name="TEXTURE0"                                 value="0x84C0"/>
    <enum name="TEXTURE1"                                 value="0x84C1"/>
    <enum name="TEXTURE2"                                 value="0x84C2"/>
    <enum name="TEXTURE3"                                 value="0x84C3"/>
    <enum name="TEXTURE4"                                 value="0x84C4"/>
    <enum name="TEXTURE5"                                 value="0x84C5"/>
    <enum name="TEXTURE6"                                 value="0x84C6"/>
    <enum name="TEXTURE7"                                 value="0x84C7"/>
    <enum name="TEXTURE8"                                 value="0x84C8"/>
    <enum name="TEXTURE9"                                 value="0x84C9"/>
    <enum name="TEXTURE10"                                value="0x84CA"/>
    <enum name="TEXTURE11"                                value="0x84CB"/>
    <enum name="TEXTURE12"                                value="0x84CC"/>
    <enum name="TEXTURE13"                                value="0x84CD"/>
    <enum name="TEXTURE14"                                value="0x84CE"/>
    <enum name="TEXTURE15"                                value="0x84CF"/>
    <enum name="TEXTURE16"                                value="0x84D0"/>
    <enum name="TEXTURE17"                                value="0x84D1"/>
    <enum name="TEXTURE18"                                value="0x84D2"/>
    <enum name="TEXTURE19"                                value="0x84D3"/>
    <enum name="TEXTURE20"                                value="0x84D4"/>
    <enum name="TEXTURE21"                                value="0x84D5"/>
    <enum name="TEXTURE22"                                value="0x84D6"/>
    <enum name="TEXTURE23"                                value="0x84D7"/>
    <enum name="TEXTURE24"                                value="0x84D8"/>
    <enum name="TEXTURE25"                                value="0x84D9"/>
    <enum name="TEXTURE26"                                value="0x84DA"/>
    <enum name="TEXTURE27"                                value="0x84DB"/>
    <enum name="TEXTURE28"                                value="0x84DC"/>
    <enum name="TEXTURE29"                                value="0x84DD"/>
    <enum name="TEXTURE30"                                value="0x84DE"/>
    <enum name="TEXTURE31"                                value="0x84DF"/>
    <enum name="ACTIVE_TEXTURE"                           value="0x84E0"/>
    <enum name="CLIENT_ACTIVE_TEXTURE"                    value="0x84E1"/>
    <enum name="MAX_TEXTURE_UNITS"                        value="0x84E2"/>
    <enum name="TRANSPOSE_MODELVIEW_MATRIX"               value="0x84E3"/>
    <enum name="TRANSPOSE_PROJECTION_MATRIX"              value="0x84E4"/>
    <enum name="TRANSPOSE_TEXTURE_MATRIX"                 value="0x84E5"/>
    <enum name="TRANSPOSE_COLOR_MATRIX"                   value="0x84E6"/>
    <enum name="MULTISAMPLE"                              value="0x809D"/>
    <enum name="SAMPLE_ALPHA_TO_COVERAGE"                 value="0x809E"/>
    <enum name="SAMPLE_ALPHA_TO_ONE"                      value="0x809F"/>
    <enum name="SAMPLE_COVERAGE"                          value="0x80A0"/>
    <enum name="SAMPLE_BUFFERS"                           value="0x80A8"/>
    <enum name="SAMPLES"                                  value="0x80A9"/>
    <enum name="SAMPLE_COVERAGE_VALUE"                    value="0x80AA"/>
    <enum name="SAMPLE_COVERAGE_INVERT"                   value="0x80AB"/>
    <enum name="MULTISAMPLE_BIT"                          value="0x20000000"/>
    <enum name="NORMAL_MAP"                               value="0x8511"/>
    <enum name="REFLECTION_MAP"                           value="0x8512"/>
    <enum name="TEXTURE_CUBE_MAP"                         value="0x8513"/>
    <enum name="TEXTURE_BINDING_CUBE_MAP"                 value="0x8514"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_X"              value="0x8515"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_X"              value="0x8516"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_Y"              value="0x8517"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_Y"              value="0x8518"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_Z"              value="0x8519"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_Z"              value="0x851A"/>
    <enum name="PROXY_TEXTURE_CUBE_MAP"                   value="0x851B"/>
    <enum name="MAX_CUBE_MAP_TEXTURE_SIZE"                value="0x851C"/>
    <enum name="COMPRESSED_ALPHA"                         value="0x84E9"/>
    <enum name="COMPRESSED_LUMINANCE"                     value="0x84EA"/>
    <enum name="COMPRESSED_LUMINANCE_ALPHA"               value="0x84EB"/>
    <enum name="COMPRESSED_INTENSITY"                     value="0x84EC"/>
    <enum name="COMPRESSED_RGB"                           value="0x84ED"/>
    <enum name="COMPRESSED_RGBA"                          value="0x84EE"/>
    <enum name="TEXTURE_COMPRESSION_HINT"                 value="0x84EF"/>
    <enum name="TEXTURE_COMPRESSED_IMAGE_SIZE"            value="0x86A0"/>
    <enum name="TEXTURE_COMPRESSED"                       value="0x86A1"/>
    <enum name="NUM_COMPRESSED_TEXTURE_FORMATS"           value="0x86A2"/>
    <enum name="COMPRESSED_TEXTURE_FORMATS"               value="0x86A3"/>
    <enum name="CLAMP_TO_BORDER"                          value="0x812D"/>
    <enum name="CLAMP_TO_BORDER_SGIS"                     value="0x812D"/>
    <enum name="COMBINE"                                  value="0x8570"/>
    <enum name="COMBINE_RGB"                              value="0x8571">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="COMBINE_ALPHA"                            value="0x8572">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE0_RGB"                              value="0x8580">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE1_RGB"                              value="0x8581">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE2_RGB"                              value="0x8582">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE0_ALPHA"                            value="0x8588">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE1_ALPHA"                            value="0x8589">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE2_ALPHA"                            value="0x858A">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND0_RGB"                             value="0x8590">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND1_RGB"                             value="0x8591">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND2_RGB"                             value="0x8592">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND0_ALPHA"                           value="0x8598">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND1_ALPHA"                           value="0x8599">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND2_ALPHA"                           value="0x859A">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="RGB_SCALE"                                value="0x8573">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="ADD_SIGNED"                               value="0x8574"/>
    <enum name="INTERPOLATE"                              value="0x8575"/>
    <enum name="SUBTRACT"                                 value="0x84E7"/>
    <enum name="CONSTANT"                                 value="0x8576"/>
    <enum name="PRIMARY_COLOR"                            value="0x8577"/>
    <enum name="PREVIOUS"                                 value="0x8578"/>
    <enum name="DOT3_RGB"                                 value="0x86AE"/>
    <enum name="DOT3_RGBA"                                value="0x86AF"/>

    <function name="ActiveTexture" alias="ActiveTextureARB">
        <param name="texture" type="GLenum"/>
    </function>

    <function name="ClientActiveTexture" alias="ClientActiveTextureARB">
        <param name="texture" type="GLenum"/>
    </function>

    <function name="MultiTexCoord1d" alias="MultiTexCoord1dARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord1dv" alias="MultiTexCoord1dvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="MultiTexCoord1f" alias="MultiTexCoord1fARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord1fv" alias="MultiTexCoord1fvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="MultiTexCoord1i" alias="MultiTexCoord1iARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
    </function>

    <function name="MultiTexCoord1iv" alias="MultiTexCoord1ivARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *"/>
    </function>

    <function name="MultiTexCoord1s" alias="MultiTexCoord1sARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
    </function>

    <function name="MultiTexCoord1sv" alias="MultiTexCoord1svARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="MultiTexCoord2d" alias="MultiTexCoord2dARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord2dv" alias="MultiTexCoord2dvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="MultiTexCoord2f" alias="MultiTexCoord2fARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord2fv" alias="MultiTexCoord2fvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="MultiTexCoord2i" alias="MultiTexCoord2iARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
    </function>

    <function name="MultiTexCoord2iv" alias="MultiTexCoord2ivARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *"/>
    </function>

    <function name="MultiTexCoord2s" alias="MultiTexCoord2sARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
    </function>

    <function name="MultiTexCoord2sv" alias="MultiTexCoord2svARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="MultiTexCoord3d" alias="MultiTexCoord3dARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord3dv" alias="MultiTexCoord3dvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="MultiTexCoord3f" alias="MultiTexCoord3fARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord3fv" alias="MultiTexCoord3fvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="MultiTexCoord3i" alias="MultiTexCoord3iARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
    </function>

    <function name="MultiTexCoord3iv" alias="MultiTexCoord3ivARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *"/>
    </function>

    <function name="MultiTexCoord3s" alias="MultiTexCoord3sARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
    </function>

    <function name="MultiTexCoord3sv" alias="MultiTexCoord3svARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="MultiTexCoord4d" alias="MultiTexCoord4dARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
        <param name="q" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord4dv" alias="MultiTexCoord4dvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="MultiTexCoord4f" alias="MultiTexCoord4fARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="q" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord4fv" alias="MultiTexCoord4fvARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="MultiTexCoord4i" alias="MultiTexCoord4iARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
        <param name="q" type="GLint"/>
    </function>

    <function name="MultiTexCoord4iv" alias="MultiTexCoord4ivARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *"/>
    </function>

    <function name="MultiTexCoord4s" alias="MultiTexCoord4sARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
        <param name="q" type="GLshort"/>
    </function>

    <function name="MultiTexCoord4sv" alias="MultiTexCoord4svARB">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="LoadTransposeMatrixf" alias="LoadTransposeMatrixfARB">
        <param name="m" type="const GLfloat *"/>
    </function>

    <function name="LoadTransposeMatrixd" alias="LoadTransposeMatrixdARB">
        <param name="m" type="const GLdouble *"/>
    </function>

    <function name="MultTransposeMatrixf" alias="MultTransposeMatrixfARB">
        <param name="m" type="const GLfloat *"/>
    </function>

    <function name="MultTransposeMatrixd" alias="MultTransposeMatrixdARB">
        <param name="m" type="const GLdouble *"/>
    </function>

    <function name="SampleCoverage" alias="SampleCoverageARB">
        <param name="value" type="GLclampf"/>
        <param name="invert" type="GLboolean"/>
    </function>

    <function name="CompressedTexImage3D" alias="CompressedTexImage3DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CompressedTexImage2D" alias="CompressedTexImage2DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CompressedTexImage1D" alias="CompressedTexImage1DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CompressedTexSubImage3D" alias="CompressedTexSubImage3DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CompressedTexSubImage2D" alias="CompressedTexSubImage2DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CompressedTexSubImage1D" alias="CompressedTexSubImage1DARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="GetCompressedTexImage" alias="GetCompressedTexImageARB">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="img" type="GLvoid *" output="true"/>
    </function>
</category>

<category name="1.4">
    <enum name="BLEND_DST_RGB"                            value="0x80C8"/>
    <enum name="BLEND_SRC_RGB"                            value="0x80C9"/>
    <enum name="BLEND_DST_ALPHA"                          value="0x80CA"/>
    <enum name="BLEND_SRC_ALPHA"                          value="0x80CB"/>
    <enum name="POINT_SIZE_MIN"                           value="0x8126">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_SIZE_MAX"                           value="0x8127">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_FADE_THRESHOLD_SIZE"                value="0x8128">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_DISTANCE_ATTENUATION"               value="0x8129">
        <size name="PointParameterfvEXT" count="3"/>
    </enum>
    <enum name="GENERATE_MIPMAP"                          value="0x8191">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="GENERATE_MIPMAP_HINT"                     value="0x8192"/>
    <enum name="DEPTH_COMPONENT16"                        value="0x81A5"/>
    <enum name="DEPTH_COMPONENT24"                        value="0x81A6"/>
    <enum name="DEPTH_COMPONENT32"                        value="0x81A7"/>
    <enum name="MIRRORED_REPEAT"                          value="0x8370"/>
    <enum name="FOG_COORDINATE_SOURCE"                    value="0x8450"/>
    <enum name="FOG_COORDINATE"                           value="0x8451"/>
    <enum name="FRAGMENT_DEPTH"                           value="0x8452"/>
    <enum name="CURRENT_FOG_COORDINATE"                   value="0x8453"/>
    <enum name="FOG_COORDINATE_ARRAY_TYPE"                value="0x8454"/>
    <enum name="FOG_COORDINATE_ARRAY_STRIDE"              value="0x8455"/>
    <enum name="FOG_COORDINATE_ARRAY_POINTER"             value="0x8456"/>
    <enum name="FOG_COORDINATE_ARRAY"                     value="0x8457"/>
    <enum name="COLOR_SUM"                                value="0x8458"/>
    <enum name="CURRENT_SECONDARY_COLOR"                  value="0x8459"/>
    <enum name="SECONDARY_COLOR_ARRAY_SIZE"               value="0x845A"/>
    <enum name="SECONDARY_COLOR_ARRAY_TYPE"               value="0x845B"/>
    <enum name="SECONDARY_COLOR_ARRAY_STRIDE"             value="0x845C"/>
    <enum name="SECONDARY_COLOR_ARRAY_POINTER"            value="0x845D"/>
    <enum name="SECONDARY_COLOR_ARRAY"                    value="0x845E"/>
    <enum name="MAX_TEXTURE_LOD_BIAS"                     value="0x84FD"/>
    <enum name="TEXTURE_FILTER_CONTROL"                   value="0x8500"/>
    <enum name="TEXTURE_LOD_BIAS"                         value="0x8501">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="INCR_WRAP"                                value="0x8507"/>
    <enum name="DECR_WRAP"                                value="0x8508"/>
    <enum name="TEXTURE_DEPTH_SIZE"                       value="0x884A"/>
    <enum name="DEPTH_TEXTURE_MODE"                       value="0x884B">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_COMPARE_MODE"                     value="0x884C">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_COMPARE_FUNC"                     value="0x884D">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="COMPARE_R_TO_TEXTURE"                     value="0x884E"/>

    <function name="BlendFuncSeparate" alias="BlendFuncSeparateEXT">
        <param name="sfactorRGB" type="GLenum"/>
        <param name="dfactorRGB" type="GLenum"/>
        <param name="sfactorAlpha" type="GLenum"/>
        <param name="dfactorAlpha" type="GLenum"/>
    </function>

    <function name="FogCoordf" alias="FogCoordfEXT">
        <param name="coord" type="GLfloat"/>
    </function>

    <function name="FogCoordfv" alias="FogCoordfvEXT">
        <param name="coord" type="const GLfloat *"/>
    </function>

    <function name="FogCoordd" alias="FogCoorddEXT">
        <param name="coord" type="GLdouble"/>
    </function>

    <function name="FogCoorddv" alias="FogCoorddvEXT">
        <param name="coord" type="const GLdouble *"/>
    </function>

    <function name="FogCoordPointer" alias="FogCoordPointerEXT">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
    </function>

    <function name="MultiDrawArrays" alias="MultiDrawArraysEXT">
        <param name="mode" type="GLenum"/>
        <param name="first" type="GLint *"/> <!-- Spec bug. Should be const. -->
        <param name="count" type="GLsizei *"/> <!-- Spec bug. Should be const. -->
        <param name="primcount" type="GLsizei"/>
    </function>

    <function name="MultiDrawElements" alias="MultiDrawElementsEXT">
        <param name="mode" type="GLenum"/>
        <param name="count" type="const GLsizei *"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid **"/>
        <param name="primcount" type="GLsizei"/>
    </function>

    <function name="PointParameterf" alias="PointParameterfEXT">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
    </function>

    <function name="PointParameterfv" alias="PointParameterfvEXT">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="PointParameteri" alias="PointParameteriNV">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
    </function>

    <function name="PointParameteriv" alias="PointParameterivNV">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="SecondaryColor3b" alias="SecondaryColor3bEXT">
        <param name="red" type="GLbyte"/>
        <param name="green" type="GLbyte"/>
        <param name="blue" type="GLbyte"/>
    </function>

    <function name="SecondaryColor3bv" alias="SecondaryColor3bvEXT">
        <param name="v" type="const GLbyte *"/>
    </function>

    <function name="SecondaryColor3d" alias="SecondaryColor3dEXT">
        <param name="red" type="GLdouble"/>
        <param name="green" type="GLdouble"/>
        <param name="blue" type="GLdouble"/>
    </function>

    <function name="SecondaryColor3dv" alias="SecondaryColor3dvEXT">
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="SecondaryColor3f" alias="SecondaryColor3fEXT">
        <param name="red" type="GLfloat"/>
        <param name="green" type="GLfloat"/>
        <param name="blue" type="GLfloat"/>
    </function>

    <function name="SecondaryColor3fv" alias="SecondaryColor3fvEXT">
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="SecondaryColor3i" alias="SecondaryColor3iEXT">
        <param name="red" type="GLint"/>
        <param name="green" type="GLint"/>
        <param name="blue" type="GLint"/>
    </function>

    <function name="SecondaryColor3iv" alias="SecondaryColor3ivEXT">
        <param name="v" type="const GLint *"/>
    </function>

    <function name="SecondaryColor3s" alias="SecondaryColor3sEXT">
        <param name="red" type="GLshort"/>
        <param name="green" type="GLshort"/>
        <param name="blue" type="GLshort"/>
    </function>

    <function name="SecondaryColor3sv" alias="SecondaryColor3svEXT">
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="SecondaryColor3ub" alias="SecondaryColor3ubEXT">
        <param name="red" type="GLubyte"/>
        <param name="green" type="GLubyte"/>
        <param name="blue" type="GLubyte"/>
    </function>

    <function name="SecondaryColor3ubv" alias="SecondaryColor3ubvEXT">
        <param name="v" type="const GLubyte *"/>
    </function>

    <function name="SecondaryColor3ui" alias="SecondaryColor3uiEXT">
        <param name="red" type="GLuint"/>
        <param name="green" type="GLuint"/>
        <param name="blue" type="GLuint"/>
    </function>

    <function name="SecondaryColor3uiv" alias="SecondaryColor3uivEXT">
        <param name="v" type="const GLuint *"/>
    </function>

    <function name="SecondaryColor3us" alias="SecondaryColor3usEXT">
        <param name="red" type="GLushort"/>
        <param name="green" type="GLushort"/>
        <param name="blue" type="GLushort"/>
    </function>

    <function name="SecondaryColor3usv" alias="SecondaryColor3usvEXT">
        <param name="v" type="const GLushort *"/>
    </function>

    <function name="SecondaryColorPointer" alias="SecondaryColorPointerEXT">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
    </function>

    <function name="WindowPos2d" alias="WindowPos2dMESA">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
    </function>

    <function name="WindowPos2dv" alias="WindowPos2dvMESA">
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="WindowPos2f" alias="WindowPos2fMESA">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
    </function>

    <function name="WindowPos2fv" alias="WindowPos2fvMESA">
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="WindowPos2i" alias="WindowPos2iMESA">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
    </function>

    <function name="WindowPos2iv" alias="WindowPos2ivMESA">
        <param name="v" type="const GLint *"/>
    </function>

    <function name="WindowPos2s" alias="WindowPos2sMESA">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
    </function>

    <function name="WindowPos2sv" alias="WindowPos2svMESA">
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="WindowPos3d" alias="WindowPos3dMESA">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
    </function>

    <function name="WindowPos3dv" alias="WindowPos3dvMESA">
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="WindowPos3f" alias="WindowPos3fMESA">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="WindowPos3fv" alias="WindowPos3fvMESA">
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="WindowPos3i" alias="WindowPos3iMESA">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
    </function>

    <function name="WindowPos3iv" alias="WindowPos3ivMESA">
        <param name="v" type="const GLint *"/>
    </function>

    <function name="WindowPos3s" alias="WindowPos3sMESA">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
    </function>

    <function name="WindowPos3sv" alias="WindowPos3svMESA">
        <param name="v" type="const GLshort *"/>
    </function>
</category>

<category name="1.5">
    <enum name="BUFFER_SIZE"                              value="0x8764"/>
    <enum name="BUFFER_USAGE"                             value="0x8765"/>
    <enum name="QUERY_COUNTER_BITS"                       value="0x8864"/>
    <enum name="CURRENT_QUERY"                            value="0x8865"/>
    <enum name="QUERY_RESULT"                             value="0x8866"/>
    <enum name="QUERY_RESULT_AVAILABLE"                   value="0x8867"/>
    <enum name="ARRAY_BUFFER"                             value="0x8892"/>
    <enum name="ELEMENT_ARRAY_BUFFER"                     value="0x8893"/>
    <enum name="ARRAY_BUFFER_BINDING"                     value="0x8894"/>
    <enum name="ELEMENT_ARRAY_BUFFER_BINDING"             value="0x8895"/>
    <enum name="VERTEX_ARRAY_BUFFER_BINDING"              value="0x8896"/>
    <enum name="NORMAL_ARRAY_BUFFER_BINDING"              value="0x8897"/>
    <enum name="COLOR_ARRAY_BUFFER_BINDING"               value="0x8898"/>
    <enum name="INDEX_ARRAY_BUFFER_BINDING"               value="0x8899"/>
    <enum name="TEXTURE_COORD_ARRAY_BUFFER_BINDING"       value="0x889A"/>
    <enum name="EDGE_FLAG_ARRAY_BUFFER_BINDING"           value="0x889B"/>
    <enum name="SECONDARY_COLOR_ARRAY_BUFFER_BINDING"     value="0x889C"/>
    <enum name="FOG_COORDINATE_ARRAY_BUFFER_BINDING"      value="0x889D"/>
    <enum name="WEIGHT_ARRAY_BUFFER_BINDING"              value="0x889E"/>
    <enum name="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"       value="0x889F"/>
    <enum name="READ_ONLY"                                value="0x88B8"/>
    <enum name="WRITE_ONLY"                               value="0x88B9"/>
    <enum name="READ_WRITE"                               value="0x88BA"/>
    <enum name="BUFFER_ACCESS"                            value="0x88BB"/>
    <enum name="BUFFER_MAPPED"                            value="0x88BC"/>
    <enum name="BUFFER_MAP_POINTER"                       value="0x88BD"/>
    <enum name="STREAM_DRAW"                              value="0x88E0"/>
    <enum name="STREAM_READ"                              value="0x88E1"/>
    <enum name="STREAM_COPY"                              value="0x88E2"/>
    <enum name="STATIC_DRAW"                              value="0x88E4"/>
    <enum name="STATIC_READ"                              value="0x88E5"/>
    <enum name="STATIC_COPY"                              value="0x88E6"/>
    <enum name="DYNAMIC_DRAW"                             value="0x88E8"/>
    <enum name="DYNAMIC_READ"                             value="0x88E9"/>
    <enum name="DYNAMIC_COPY"                             value="0x88EA"/>
    <enum name="SAMPLES_PASSED"                           value="0x8914"/>
    <enum name="FOG_COORD_SOURCE"                         value="0x8450"/>
    <enum name="FOG_COORD"                                value="0x8451"/>
    <enum name="CURRENT_FOG_COORD"                        value="0x8453"/>
    <enum name="FOG_COORD_ARRAY_TYPE"                     value="0x8454"/>
    <enum name="FOG_COORD_ARRAY_STRIDE"                   value="0x8455"/>
    <enum name="FOG_COORD_ARRAY_POINTER"                  value="0x8456"/>
    <enum name="FOG_COORD_ARRAY"                          value="0x8457"/>
    <enum name="FOG_COORD_ARRAY_BUFFER_BINDING"           value="0x889D"/>
    <enum name="SRC0_RGB"                                 value="0x8580"/>
    <enum name="SRC1_RGB"                                 value="0x8581"/>
    <enum name="SRC2_RGB"                                 value="0x8582"/>
    <enum name="SRC0_ALPHA"                               value="0x8588"/>
    <enum name="SRC1_ALPHA"                               value="0x8589"/>
    <enum name="SRC2_ALPHA"                               value="0x858A"/>

    <type name="intptr" size="4"/>
    <type name="sizeiptr" size="4"/>

    <function name="BindBuffer" alias="BindBufferARB">
        <param name="target" type="GLenum"/>
        <param name="buffer" type="GLuint"/>
    </function>

    <function name="BufferData" alias="BufferDataARB">
        <param name="target" type="GLenum"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="const GLvoid *"/>
        <param name="usage" type="GLenum"/>
    </function>

    <function name="BufferSubData" alias="BufferSubDataARB">
        <param name="target" type="GLenum"/>
        <param name="offset" type="GLintptrARB"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="DeleteBuffers" alias="DeleteBuffersARB">
        <param name="n" type="GLsizei"/>
        <param name="buffer" type="const GLuint *"/>
    </function>

    <function name="GenBuffers" alias="GenBuffersARB">
        <param name="n" type="GLsizei"/>
        <param name="buffer" type="GLuint *" output="true"/>
    </function>

    <function name="GetBufferParameteriv" alias="GetBufferParameterivARB">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetBufferPointerv" alias="GetBufferPointervARB">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLvoid **" output="true"/>
    </function>

    <function name="GetBufferSubData" alias="GetBufferSubDataARB">
        <param name="target" type="GLenum"/>
        <param name="offset" type="GLintptrARB"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="GLvoid *" output="true"/>
    </function>

    <function name="IsBuffer" alias="IsBufferARB">
        <param name="buffer" type="GLuint"/>
        <return type="GLboolean"/>
    </function>

    <function name="MapBuffer" alias="MapBufferARB">
        <param name="target" type="GLenum"/>
        <param name="access" type="GLenum"/>
        <return type="GLvoid *"/>
    </function>

    <function name="UnmapBuffer" alias="UnmapBufferARB">
        <param name="target" type="GLenum"/>
        <return type="GLboolean"/>
    </function>

    <function name="GenQueries" alias="GenQueriesARB">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="GLuint *" output="true"/>
    </function>

    <function name="DeleteQueries" alias="DeleteQueriesARB">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="const GLuint *"/>
    </function>

    <function name="IsQuery" alias="IsQueryARB">
        <param name="id" type="GLuint"/>
        <return type="GLboolean"/>
    </function>

    <function name="BeginQuery" alias="BeginQueryARB">
        <param name="target" type="GLenum"/>
        <param name="id" type="GLuint"/>
    </function>

    <function name="EndQuery" alias="EndQueryARB">
        <param name="target" type="GLenum"/>
    </function>

    <function name="GetQueryiv" alias="GetQueryivARB">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetQueryObjectiv" alias="GetQueryObjectivARB">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetQueryObjectuiv" alias="GetQueryObjectuivARB">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLuint *" output="true"/>
    </function>
</category>



<!-- ARB extensions sorted by extension number. -->

<category name="GL_ARB_multitexture" number="1">
    <enum name="TEXTURE0_ARB"                             value="0x84C0"/>
    <enum name="TEXTURE1_ARB"                             value="0x84C1"/>
    <enum name="TEXTURE2_ARB"                             value="0x84C2"/>
    <enum name="TEXTURE3_ARB"                             value="0x84C3"/>
    <enum name="TEXTURE4_ARB"                             value="0x84C4"/>
    <enum name="TEXTURE5_ARB"                             value="0x84C5"/>
    <enum name="TEXTURE6_ARB"                             value="0x84C6"/>
    <enum name="TEXTURE7_ARB"                             value="0x84C7"/>
    <enum name="TEXTURE8_ARB"                             value="0x84C8"/>
    <enum name="TEXTURE9_ARB"                             value="0x84C9"/>
    <enum name="TEXTURE10_ARB"                            value="0x84CA"/>
    <enum name="TEXTURE11_ARB"                            value="0x84CB"/>
    <enum name="TEXTURE12_ARB"                            value="0x84CC"/>
    <enum name="TEXTURE13_ARB"                            value="0x84CD"/>
    <enum name="TEXTURE14_ARB"                            value="0x84CE"/>
    <enum name="TEXTURE15_ARB"                            value="0x84CF"/>
    <enum name="TEXTURE16_ARB"                            value="0x84D0"/>
    <enum name="TEXTURE17_ARB"                            value="0x84D1"/>
    <enum name="TEXTURE18_ARB"                            value="0x84D2"/>
    <enum name="TEXTURE19_ARB"                            value="0x84D3"/>
    <enum name="TEXTURE20_ARB"                            value="0x84D4"/>
    <enum name="TEXTURE21_ARB"                            value="0x84D5"/>
    <enum name="TEXTURE22_ARB"                            value="0x84D6"/>
    <enum name="TEXTURE23_ARB"                            value="0x84D7"/>
    <enum name="TEXTURE24_ARB"                            value="0x84D8"/>
    <enum name="TEXTURE25_ARB"                            value="0x84D9"/>
    <enum name="TEXTURE26_ARB"                            value="0x84DA"/>
    <enum name="TEXTURE27_ARB"                            value="0x84DB"/>
    <enum name="TEXTURE28_ARB"                            value="0x84DC"/>
    <enum name="TEXTURE29_ARB"                            value="0x84DD"/>
    <enum name="TEXTURE30_ARB"                            value="0x84DE"/>
    <enum name="TEXTURE31_ARB"                            value="0x84DF"/>
    <enum name="ACTIVE_TEXTURE_ARB"                       value="0x84E0"/>
    <enum name="CLIENT_ACTIVE_TEXTURE_ARB"                value="0x84E1"/>
    <enum name="MAX_TEXTURE_UNITS_ARB"                    value="0x84E2"/>

    <function name="ActiveTextureARB" offset="374">
        <param name="texture" type="GLenum"/>
        <glx rop="197"/>
    </function>

    <function name="ClientActiveTextureARB" offset="375">
        <param name="texture" type="GLenum"/>
        <glx handcode="true"/>
    </function>

    <function name="MultiTexCoord1dARB" offset="376" vectorequiv="MultiTexCoord1dvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord1dvARB" offset="377">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *" count="1"/>
        <glx rop="198"/>
    </function>

    <function name="MultiTexCoord1fARB" offset="378" vectorequiv="MultiTexCoord1fvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord1fvARB" offset="379">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *" count="1"/>
        <glx rop="199"/>
    </function>

    <function name="MultiTexCoord1iARB" offset="380" vectorequiv="MultiTexCoord1ivARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
    </function>

    <function name="MultiTexCoord1ivARB" offset="381">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *" count="1"/>
        <glx rop="200"/>
    </function>

    <function name="MultiTexCoord1sARB" offset="382" vectorequiv="MultiTexCoord1svARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
    </function>

    <function name="MultiTexCoord1svARB" offset="383">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *" count="1"/>
        <glx rop="201"/>
    </function>

    <function name="MultiTexCoord2dARB" offset="384" vectorequiv="MultiTexCoord2dvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord2dvARB" offset="385">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *" count="2"/>
        <glx rop="202"/>
    </function>

    <function name="MultiTexCoord2fARB" offset="386" vectorequiv="MultiTexCoord2fvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord2fvARB" offset="387">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *" count="2"/>
        <glx rop="203"/>
    </function>

    <function name="MultiTexCoord2iARB" offset="388" vectorequiv="MultiTexCoord2ivARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
    </function>

    <function name="MultiTexCoord2ivARB" offset="389">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *" count="2"/>
        <glx rop="204"/>
    </function>

    <function name="MultiTexCoord2sARB" offset="390" vectorequiv="MultiTexCoord2svARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
    </function>

    <function name="MultiTexCoord2svARB" offset="391">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *" count="2"/>
        <glx rop="205"/>
    </function>

    <function name="MultiTexCoord3dARB" offset="392" vectorequiv="MultiTexCoord3dvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord3dvARB" offset="393">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="206"/>
    </function>

    <function name="MultiTexCoord3fARB" offset="394" vectorequiv="MultiTexCoord3fvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord3fvARB" offset="395">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="207"/>
    </function>

    <function name="MultiTexCoord3iARB" offset="396" vectorequiv="MultiTexCoord3ivARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
    </function>

    <function name="MultiTexCoord3ivARB" offset="397">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="208"/>
    </function>

    <function name="MultiTexCoord3sARB" offset="398" vectorequiv="MultiTexCoord3svARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
    </function>

    <function name="MultiTexCoord3svARB" offset="399">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="209"/>
    </function>

    <function name="MultiTexCoord4dARB" offset="400" vectorequiv="MultiTexCoord4dvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLdouble"/>
        <param name="t" type="GLdouble"/>
        <param name="r" type="GLdouble"/>
        <param name="q" type="GLdouble"/>
    </function>

    <function name="MultiTexCoord4dvARB" offset="401">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="210"/>
    </function>

    <function name="MultiTexCoord4fARB" offset="402" vectorequiv="MultiTexCoord4fvARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="q" type="GLfloat"/>
    </function>

    <function name="MultiTexCoord4fvARB" offset="403">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="211"/>
    </function>

    <function name="MultiTexCoord4iARB" offset="404" vectorequiv="MultiTexCoord4ivARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLint"/>
        <param name="t" type="GLint"/>
        <param name="r" type="GLint"/>
        <param name="q" type="GLint"/>
    </function>

    <function name="MultiTexCoord4ivARB" offset="405">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="212"/>
    </function>

    <function name="MultiTexCoord4sARB" offset="406" vectorequiv="MultiTexCoord4svARB">
        <param name="target" type="GLenum"/>
        <param name="s" type="GLshort"/>
        <param name="t" type="GLshort"/>
        <param name="r" type="GLshort"/>
        <param name="q" type="GLshort"/>
    </function>

    <function name="MultiTexCoord4svARB" offset="407">
        <param name="target" type="GLenum"/>
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="213"/>
    </function>
</category>

<!-- ARB extension number 2 is a GLX extension. -->

<category name="GL_ARB_transpose_matrix" number="3">
    <enum name="TRANSPOSE_MODELVIEW_MATRIX_ARB"           value="0x84E3"/>
    <enum name="TRANSPOSE_PROJECTION_MATRIX_ARB"          value="0x84E4"/>
    <enum name="TRANSPOSE_TEXTURE_MATRIX_ARB"             value="0x84E5"/>
    <enum name="TRANSPOSE_COLOR_MATRIX_ARB"               value="0x84E6"/>

    <function name="LoadTransposeMatrixfARB" offset="408">
        <param name="m" type="const GLfloat *"/>
        <glx handcode="true"/>
    </function>

    <function name="LoadTransposeMatrixdARB" offset="409">
        <param name="m" type="const GLdouble *"/>
        <glx handcode="true"/>
    </function>

    <function name="MultTransposeMatrixfARB" offset="410">
        <param name="m" type="const GLfloat *"/>
        <glx handcode="true"/>
    </function>

    <function name="MultTransposeMatrixdARB" offset="411">
        <param name="m" type="const GLdouble *"/>
        <glx handcode="true"/>
    </function>
</category>

<!-- ARB extension number 4 is a WGL extension. -->

<category name="GL_ARB_multisample" number="5">
    <enum name="MULTISAMPLE_ARB"                          value="0x809D"/>
    <enum name="SAMPLE_ALPHA_TO_COVERAGE_ARB"             value="0x809E"/>
    <enum name="SAMPLE_ALPHA_TO_ONE_ARB"                  value="0x809F"/>
    <enum name="SAMPLE_COVERAGE_ARB"                      value="0x80A0"/>
    <enum name="SAMPLE_BUFFERS_ARB"                       value="0x80A8"/>
    <enum name="SAMPLES_ARB"                              value="0x80A9"/>
    <enum name="SAMPLE_COVERAGE_VALUE_ARB"                value="0x80AA"/>
    <enum name="SAMPLE_COVERAGE_INVERT_ARB"               value="0x80AB"/>
    <enum name="MULTISAMPLE_BIT_ARB"                      value="0x20000000"/>

    <function name="SampleCoverageARB" offset="412">
        <param name="value" type="GLclampf"/>
        <param name="invert" type="GLboolean"/>
        <glx rop="229"/>
    </function>
</category>

<category name="GL_ARB_texture_env_add" number="6">
    <!-- No new functions, types, enums. -->
</category>

<category name="GL_ARB_texture_cube_map" number="7">
    <enum name="NORMAL_MAP_ARB"                           value="0x8511"/>
    <enum name="REFLECTION_MAP_ARB"                       value="0x8512"/>
    <enum name="TEXTURE_CUBE_MAP_ARB"                     value="0x8513"/>
    <enum name="TEXTURE_BINDING_CUBE_MAP_ARB"             value="0x8514"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_X_ARB"          value="0x8515"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_X_ARB"          value="0x8516"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_Y_ARB"          value="0x8517"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB"          value="0x8518"/>
    <enum name="TEXTURE_CUBE_MAP_POSITIVE_Z_ARB"          value="0x8519"/>
    <enum name="TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB"          value="0x851A"/>
    <enum name="PROXY_TEXTURE_CUBE_MAP_ARB"               value="0x851B"/>
    <enum name="MAX_CUBE_MAP_TEXTURE_SIZE_ARB"            value="0x851C"/>
</category>

<!-- ARB extension number 8 is a WGL extension. -->
<!-- ARB extension number 9 is a WGL extension. -->
<!-- ARB extension number 10 is a WGL extension. -->
<!-- ARB extension number 11 is a WGL extension. -->

<category name="GL_ARB_texture_compression" number="12">
    <enum name="COMPRESSED_ALPHA_ARB"                     value="0x84E9"/>
    <enum name="COMPRESSED_LUMINANCE_ARB"                 value="0x84EA"/>
    <enum name="COMPRESSED_LUMINANCE_ALPHA_ARB"           value="0x84EB"/>
    <enum name="COMPRESSED_INTENSITY_ARB"                 value="0x84EC"/>
    <enum name="COMPRESSED_RGB_ARB"                       value="0x84ED"/>
    <enum name="COMPRESSED_RGBA_ARB"                      value="0x84EE"/>
    <enum name="TEXTURE_COMPRESSION_HINT_ARB"             value="0x84EF"/>
    <enum name="TEXTURE_COMPRESSED_IMAGE_SIZE_ARB"        value="0x86A0"/>
    <enum name="TEXTURE_COMPRESSED_ARB"                   value="0x86A1"/>
    <enum name="NUM_TEXTURE_COMPRESSED_FORMATS_ARB"       value="0x86A2"/>
    <enum name="TEXTURE_COMPRESSED_FORMATS_ARB"           value="0x86A3"/>

    <function name="CompressedTexImage3DARB" offset="554">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="216" handcode="true"/>
    </function>

    <function name="CompressedTexImage2DARB" offset="555">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="215" handcode="true"/>
    </function>

    <function name="CompressedTexImage1DARB" offset="556">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="214" handcode="true"/>
    </function>

    <function name="CompressedTexSubImage3DARB" offset="557">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="219" handcode="true"/>
    </function>

    <function name="CompressedTexSubImage2DARB" offset="558">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="218" handcode="true"/>
    </function>

    <function name="CompressedTexSubImage1DARB" offset="559">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="imageSize" type="GLsizei"/>
        <param name="data" type="const GLvoid *"/>
        <glx rop="217" handcode="true"/>
    </function>

    <function name="GetCompressedTexImageARB" offset="560">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="img" type="GLvoid *" output="true"/>
        <glx sop="160" handcode="true"/>
    </function>
</category>

<category name="GL_ARB_texture_border_clamp" number="13">
    <enum name="CLAMP_TO_BORDER_ARB"                      value="0x812D"/>
</category>

<category name="GL_ARB_point_parameters" number="14">
    <enum name="POINT_SIZE_MIN_ARB"                       value="0x8126">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_SIZE_MAX_ARB"                       value="0x8127">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_FADE_THRESHOLD_SIZE_ARB"            value="0x8128">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_DISTANCE_ATTENUATION_ARB"           value="0x8129">
        <size name="PointParameterfvEXT" count="3"/>
    </enum>

    <function name="PointParameterfARB" alias="PointParameterfEXT">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="2065"/>
    </function>

    <function name="PointParameterfvARB" alias="PointParameterfvEXT">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="2066"/>
    </function>
</category>

<category name="GL_ARB_vertex_blend" number="15">
    <enum name="MAX_VERTEX_UNITS_ARB"                     value="0x86A4"/>
    <enum name="ACTIVE_VERTEX_UNITS_ARB"                  value="0x86A5"/>
    <enum name="WEIGHT_SUM_UNITY_ARB"                     value="0x86A6"/>
    <enum name="VERTEX_BLEND_ARB"                         value="0x86A7"/>
    <enum name="CURRENT_WEIGHT_ARB"                       value="0x86A8"/>
    <enum name="WEIGHT_ARRAY_TYPE_ARB"                    value="0x86A9"/>
    <enum name="WEIGHT_ARRAY_STRIDE_ARB"                  value="0x86AA"/>
    <enum name="WEIGHT_ARRAY_SIZE_ARB"                    value="0x86AB"/>
    <enum name="WEIGHT_ARRAY_POINTER_ARB"                 value="0x86AC"/>
    <enum name="WEIGHT_ARRAY_ARB"                         value="0x86AD"/>
    <enum name="MODELVIEW0_ARB"                           value="0x1700"/>
    <enum name="MODELVIEW1_ARB"                           value="0x850A"/>
    <enum name="MODELVIEW2_ARB"                           value="0x8722"/>
    <enum name="MODELVIEW3_ARB"                           value="0x8723"/>
    <enum name="MODELVIEW4_ARB"                           value="0x8724"/>
    <enum name="MODELVIEW5_ARB"                           value="0x8725"/>
    <enum name="MODELVIEW6_ARB"                           value="0x8726"/>
    <enum name="MODELVIEW7_ARB"                           value="0x8727"/>
    <enum name="MODELVIEW8_ARB"                           value="0x8728"/>
    <enum name="MODELVIEW9_ARB"                           value="0x8729"/>
    <enum name="MODELVIEW10_ARB"                          value="0x872A"/>
    <enum name="MODELVIEW11_ARB"                          value="0x872B"/>
    <enum name="MODELVIEW12_ARB"                          value="0x872C"/>
    <enum name="MODELVIEW13_ARB"                          value="0x872D"/>
    <enum name="MODELVIEW14_ARB"                          value="0x872E"/>
    <enum name="MODELVIEW15_ARB"                          value="0x872F"/>
    <enum name="MODELVIEW16_ARB"                          value="0x8730"/>
    <enum name="MODELVIEW17_ARB"                          value="0x8731"/>
    <enum name="MODELVIEW18_ARB"                          value="0x8732"/>
    <enum name="MODELVIEW19_ARB"                          value="0x8733"/>
    <enum name="MODELVIEW20_ARB"                          value="0x8734"/>
    <enum name="MODELVIEW21_ARB"                          value="0x8735"/>
    <enum name="MODELVIEW22_ARB"                          value="0x8736"/>
    <enum name="MODELVIEW23_ARB"                          value="0x8737"/>
    <enum name="MODELVIEW24_ARB"                          value="0x8738"/>
    <enum name="MODELVIEW25_ARB"                          value="0x8739"/>
    <enum name="MODELVIEW26_ARB"                          value="0x873A"/>
    <enum name="MODELVIEW27_ARB"                          value="0x873B"/>
    <enum name="MODELVIEW28_ARB"                          value="0x873C"/>
    <enum name="MODELVIEW29_ARB"                          value="0x873D"/>
    <enum name="MODELVIEW30_ARB"                          value="0x873E"/>
    <enum name="MODELVIEW31_ARB"                          value="0x873F"/>

    <function name="WeightbvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLbyte *"/>
    </function>

    <function name="WeightsvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLshort *"/>
    </function>

    <function name="WeightivARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLint *"/>
    </function>

    <function name="WeightfvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLfloat *"/>
    </function>

    <function name="WeightdvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLdouble *"/>
    </function>

    <function name="WeightubvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLubyte *"/>
    </function>

    <function name="WeightusvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLushort *"/>
    </function>

    <function name="WeightuivARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="weights" type="const GLuint *"/>
    </function>

    <function name="WeightPointerARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="VertexBlendARB" offset="?">
        <param name="count" type="GLint"/>
    </function>
</category>

<category name="GL_ARB_matrix_palette" number="16">
    <enum name="MATRIX_PALETTE_ARB"                       value="0x8840"/>
    <enum name="MAX_MATRIX_PALETTE_STACK_DEPTH_ARB"       value="0x8841"/>
    <enum name="MAX_PALETTE_MATRICES_ARB"                 value="0x8842"/>
    <enum name="CURRENT_PALETTE_MATRIX_ARB"               value="0x8843"/>
    <enum name="MATRIX_INDEX_ARRAY_ARB"                   value="0x8844"/>
    <enum name="CURRENT_MATRIX_INDEX_ARB"                 value="0x8845"/>
    <enum name="MATRIX_INDEX_ARRAY_SIZE_ARB"              value="0x8846"/>
    <enum name="MATRIX_INDEX_ARRAY_TYPE_ARB"              value="0x8847"/>
    <enum name="MATRIX_INDEX_ARRAY_STRIDE_ARB"            value="0x8848"/>
    <enum name="MATRIX_INDEX_ARRAY_POINTER_ARB"           value="0x8849"/>

    <function name="CurrentPaletteMatrixARB" offset="?">
        <param name="index" type="GLint"/>
    </function>

    <function name="MatrixIndexubvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="indices" type="const GLubyte *"/>
    </function>

    <function name="MatrixIndexusvARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="indices" type="const GLushort *"/>
    </function>

    <function name="MatrixIndexuivARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="indices" type="const GLuint *"/>
    </function>

    <function name="MatrixIndexPointerARB" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>
</category>

<category name="GL_ARB_texture_env_combine" number="17">
    <enum name="COMBINE_ARB"                              value="0x8570"/>
    <enum name="COMBINE_RGB_ARB"                          value="0x8571"/>
    <enum name="COMBINE_ALPHA_ARB"                        value="0x8572"/>
    <enum name="SOURCE0_RGB_ARB"                          value="0x8580"/>
    <enum name="SOURCE1_RGB_ARB"                          value="0x8581"/>
    <enum name="SOURCE2_RGB_ARB"                          value="0x8582"/>
    <enum name="SOURCE0_ALPHA_ARB"                        value="0x8588"/>
    <enum name="SOURCE1_ALPHA_ARB"                        value="0x8589"/>
    <enum name="SOURCE2_ALPHA_ARB"                        value="0x858A"/>
    <enum name="OPERAND0_RGB_ARB"                         value="0x8590"/>
    <enum name="OPERAND1_RGB_ARB"                         value="0x8591"/>
    <enum name="OPERAND2_RGB_ARB"                         value="0x8592"/>
    <enum name="OPERAND0_ALPHA_ARB"                       value="0x8598"/>
    <enum name="OPERAND1_ALPHA_ARB"                       value="0x8599"/>
    <enum name="OPERAND2_ALPHA_ARB"                       value="0x859A"/>
    <enum name="RGB_SCALE_ARB"                            value="0x8573"/>
    <enum name="ADD_SIGNED_ARB"                           value="0x8574"/>
    <enum name="INTERPOLATE_ARB"                          value="0x8575"/>
    <enum name="SUBTRACT_ARB"                             value="0x84E7"/>
    <enum name="CONSTANT_ARB"                             value="0x8576"/>
    <enum name="PRIMARY_COLOR_ARB"                        value="0x8577"/>
    <enum name="PREVIOUS_ARB"                             value="0x8578"/>
</category>

<category name="GL_ARB_texture_env_crossbar" number="18">
    <!-- No new functions, types, enums. -->
</category>

<category name="GL_ARB_texture_env_dot3" number="19">
    <enum name="DOT3_RGB_ARB"                             value="0x86AE"/>
    <enum name="DOT3_RGBA_ARB"                            value="0x86AF"/>
</category>

<!-- ARB extension number 20 is a WGL extension. -->

<category name="GL_ARB_texture_mirrored_repeat" number="21">
    <enum name="MIRRORED_REPEAT_ARB"                      value="0x8370"/>
</category>

<category name="GL_ARB_depth_texture" number="22">
    <enum name="DEPTH_COMPONENT16_ARB"                    value="0x81A5"/>
    <enum name="DEPTH_COMPONENT24_ARB"                    value="0x81A6"/>
    <enum name="DEPTH_COMPONENT32_ARB"                    value="0x81A7"/>
    <enum name="TEXTURE_DEPTH_SIZE_ARB"                   value="0x884A"/>
    <enum name="DEPTH_TEXTURE_MODE_ARB"                   value="0x884B">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<category name="GL_ARB_shadow" number="23">
    <enum name="TEXTURE_COMPARE_MODE_ARB"                 value="0x884C">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_COMPARE_FUNC_ARB"                 value="0x884D">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="COMPARE_R_TO_TEXTURE_ARB"                 value="0x884E"/>
</category>

<category name="GL_ARB_shadow_ambient" number="24">
    <enum name="TEXTURE_COMPARE_FAIL_VALUE_ARB"           value="0x80BF">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<category name="GL_ARB_window_pos" number="25">
    <function name="WindowPos2dARB" alias="WindowPos2dMESA">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
    </function>

    <function name="WindowPos2fARB" alias="WindowPos2fMESA">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
    </function>

    <function name="WindowPos2iARB" alias="WindowPos2iMESA">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
    </function>

    <function name="WindowPos2sARB" alias="WindowPos2sMESA">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
    </function>

    <function name="WindowPos2dvARB" alias="WindowPos2dvMESA">
        <param name="p" type="const GLdouble *"/>
    </function>

    <function name="WindowPos2fvARB" alias="WindowPos2fvMESA">
        <param name="p" type="const GLfloat *"/>
    </function>

    <function name="WindowPos2ivARB" alias="WindowPos2ivMESA">
        <param name="p" type="const GLint *"/>
    </function>

    <function name="WindowPos2svARB" alias="WindowPos2svMESA">
        <param name="p" type="const GLshort *"/>
    </function>

    <function name="WindowPos3dARB" alias="WindowPos3dMESA">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
    </function>

    <function name="WindowPos3fARB" alias="WindowPos3fMESA">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="WindowPos3iARB" alias="WindowPos3iMESA">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
    </function>

    <function name="WindowPos3sARB" alias="WindowPos3sMESA">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
    </function>

    <function name="WindowPos3dvARB" alias="WindowPos3dvMESA">
        <param name="p" type="const GLdouble *"/>
    </function>

    <function name="WindowPos3fvARB" alias="WindowPos3fvMESA">
        <param name="p" type="const GLfloat *"/>
    </function>

    <function name="WindowPos3ivARB" alias="WindowPos3ivMESA">
        <param name="p" type="const GLint *"/>
    </function>

    <function name="WindowPos3svARB" alias="WindowPos3svMESA">
        <param name="p" type="const GLshort *"/>
    </function>
</category>

<category name="GL_ARB_vertex_program" number="26">
    <enum name="COLOR_SUM_ARB"                            value="0x8458"/>
    <enum name="VERTEX_PROGRAM_ARB"                       value="0x8620"/>
    <enum name="VERTEX_ATTRIB_ARRAY_ENABLED_ARB"          value="0x8622"/>
    <enum name="VERTEX_ATTRIB_ARRAY_SIZE_ARB"             value="0x8623"/>
    <enum name="VERTEX_ATTRIB_ARRAY_STRIDE_ARB"           value="0x8624"/>
    <enum name="VERTEX_ATTRIB_ARRAY_TYPE_ARB"             value="0x8625"/>
    <enum name="CURRENT_VERTEX_ATTRIB_ARB"                value="0x8626"/>
    <enum name="PROGRAM_LENGTH_ARB"                       value="0x8627"/>
    <enum name="PROGRAM_STRING_ARB"                       value="0x8628"/>
    <enum name="MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB"       value="0x862E"/>
    <enum name="MAX_PROGRAM_MATRICES_ARB"                 value="0x862F"/>
    <enum name="CURRENT_MATRIX_STACK_DEPTH_ARB"           value="0x8640"/>
    <enum name="CURRENT_MATRIX_ARB"                       value="0x8641"/>
    <enum name="VERTEX_PROGRAM_POINT_SIZE_ARB"            value="0x8642"/>
    <enum name="VERTEX_PROGRAM_TWO_SIDE_ARB"              value="0x8643"/>
    <enum name="VERTEX_ATTRIB_ARRAY_POINTER_ARB"          value="0x8645"/>
    <enum name="PROGRAM_ERROR_POSITION_ARB"               value="0x864B"/>
    <enum name="PROGRAM_BINDING_ARB"                      value="0x8677"/>
    <enum name="MAX_VERTEX_ATTRIBS_ARB"                   value="0x8869"/>
    <enum name="VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB"       value="0x886A"/>
    <enum name="PROGRAM_ERROR_STRING_ARB"                 value="0x8874"/>
    <enum name="PROGRAM_FORMAT_ASCII_ARB"                 value="0x8875"/>
    <enum name="PROGRAM_FORMAT_ARB"                       value="0x8876"/>
    <enum name="PROGRAM_INSTRUCTIONS_ARB"                 value="0x88A0"/>
    <enum name="MAX_PROGRAM_INSTRUCTIONS_ARB"             value="0x88A1"/>
    <enum name="PROGRAM_NATIVE_INSTRUCTIONS_ARB"          value="0x88A2"/>
    <enum name="MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB"      value="0x88A3"/>
    <enum name="PROGRAM_TEMPORARIES_ARB"                  value="0x88A4"/>
    <enum name="MAX_PROGRAM_TEMPORARIES_ARB"              value="0x88A5"/>
    <enum name="PROGRAM_NATIVE_TEMPORARIES_ARB"           value="0x88A6"/>
    <enum name="MAX_PROGRAM_NATIVE_TEMPORARIES_ARB"       value="0x88A7"/>
    <enum name="PROGRAM_PARAMETERS_ARB"                   value="0x88A8"/>
    <enum name="MAX_PROGRAM_PARAMETERS_ARB"               value="0x88A9"/>
    <enum name="PROGRAM_NATIVE_PARAMETERS_ARB"            value="0x88AA"/>
    <enum name="MAX_PROGRAM_NATIVE_PARAMETERS_ARB"        value="0x88AB"/>
    <enum name="PROGRAM_ATTRIBS_ARB"                      value="0x88AC"/>
    <enum name="MAX_PROGRAM_ATTRIBS_ARB"                  value="0x88AD"/>
    <enum name="PROGRAM_NATIVE_ATTRIBS_ARB"               value="0x88AE"/>
    <enum name="MAX_PROGRAM_NATIVE_ATTRIBS_ARB"           value="0x88AF"/>
    <enum name="PROGRAM_ADDRESS_REGISTERS_ARB"            value="0x88B0"/>
    <enum name="MAX_PROGRAM_ADDRESS_REGISTERS_ARB"        value="0x88B1"/>
    <enum name="PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB"     value="0x88B2"/>
    <enum name="MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB" value="0x88B3"/>
    <enum name="MAX_PROGRAM_LOCAL_PARAMETERS_ARB"         value="0x88B4"/>
    <enum name="MAX_PROGRAM_ENV_PARAMETERS_ARB"           value="0x88B5"/>
    <enum name="PROGRAM_UNDER_NATIVE_LIMITS_ARB"          value="0x88B6"/>
    <enum name="TRANSPOSE_CURRENT_MATRIX_ARB"             value="0x88B7"/>
    <enum name="MATRIX0_ARB"                              value="0x88C0"/>
    <enum name="MATRIX1_ARB"                              value="0x88C1"/>
    <enum name="MATRIX2_ARB"                              value="0x88C2"/>
    <enum name="MATRIX3_ARB"                              value="0x88C3"/>
    <enum name="MATRIX4_ARB"                              value="0x88C4"/>
    <enum name="MATRIX5_ARB"                              value="0x88C5"/>
    <enum name="MATRIX6_ARB"                              value="0x88C6"/>
    <enum name="MATRIX7_ARB"                              value="0x88C7"/>
    <enum name="MATRIX8_ARB"                              value="0x88C8"/>
    <enum name="MATRIX9_ARB"                              value="0x88C9"/>
    <enum name="MATRIX10_ARB"                             value="0x88CA"/>
    <enum name="MATRIX11_ARB"                             value="0x88CB"/>
    <enum name="MATRIX12_ARB"                             value="0x88CC"/>
    <enum name="MATRIX13_ARB"                             value="0x88CD"/>
    <enum name="MATRIX14_ARB"                             value="0x88CE"/>
    <enum name="MATRIX15_ARB"                             value="0x88CF"/>
    <enum name="MATRIX16_ARB"                             value="0x88D0"/>
    <enum name="MATRIX17_ARB"                             value="0x88D1"/>
    <enum name="MATRIX18_ARB"                             value="0x88D2"/>
    <enum name="MATRIX19_ARB"                             value="0x88D3"/>
    <enum name="MATRIX20_ARB"                             value="0x88D4"/>
    <enum name="MATRIX21_ARB"                             value="0x88D5"/>
    <enum name="MATRIX22_ARB"                             value="0x88D6"/>
    <enum name="MATRIX23_ARB"                             value="0x88D7"/>
    <enum name="MATRIX24_ARB"                             value="0x88D8"/>
    <enum name="MATRIX25_ARB"                             value="0x88D9"/>
    <enum name="MATRIX26_ARB"                             value="0x88DA"/>
    <enum name="MATRIX27_ARB"                             value="0x88DB"/>
    <enum name="MATRIX28_ARB"                             value="0x88DC"/>
    <enum name="MATRIX29_ARB"                             value="0x88DD"/>
    <enum name="MATRIX30_ARB"                             value="0x88DE"/>
    <enum name="MATRIX31_ARB"                             value="0x88DF"/>

    <function name="GetVertexAttribdvARB" offset="588">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetVertexAttribfvARB" offset="589">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetVertexAttribivARB" offset="590">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1dARB" offset="603" vectorequiv="VertexAttrib1dvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1dvARB" offset="604">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="1"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1fARB" offset="605" vectorequiv="VertexAttrib1fvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1fvARB" offset="606">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="1"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1sARB" offset="607" vectorequiv="VertexAttrib1svARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1svARB" offset="608">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="1"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2dARB" offset="609" vectorequiv="VertexAttrib2dvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2dvARB" offset="610">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="2"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2fARB" offset="611" vectorequiv="VertexAttrib2fvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2fvARB" offset="612">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="2"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2sARB" offset="613" vectorequiv="VertexAttrib2svARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2svARB" offset="614">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="2"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3dARB" offset="615" vectorequiv="VertexAttrib3dvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3dvARB" offset="616">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="3"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3fARB" offset="617" vectorequiv="VertexAttrib3fvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3fvARB" offset="618">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="3"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3sARB" offset="619" vectorequiv="VertexAttrib3svARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3svARB" offset="620">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="3"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4dARB" offset="621" vectorequiv="VertexAttrib4dvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4dvARB" offset="622">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="4"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4fARB" offset="623" vectorequiv="VertexAttrib4fvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4fvARB" offset="624">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="4"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4sARB" offset="625" vectorequiv="VertexAttrib4svARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <param name="w" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4svARB" offset="626">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="4"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4NubARB" offset="627" vectorequiv="VertexAttrib4NubvARB">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLubyte"/>
        <param name="y" type="GLubyte"/>
        <param name="z" type="GLubyte"/>
        <param name="w" type="GLubyte"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4NubvARB" offset="628">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLubyte *" count="4"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4bvARB" offset="654">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLbyte *" count="4"/>
        <glx rop="4230" ignore="true"/>
    </function>

    <function name="VertexAttrib4ivARB" offset="655">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="4231" ignore="true"/>
    </function>

    <function name="VertexAttrib4ubvARB" offset="656">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLubyte *" count="4"/>
        <glx rop="4232" ignore="true"/>
    </function>

    <function name="VertexAttrib4usvARB" offset="657">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLushort *" count="4"/>
        <glx rop="4233" ignore="true"/>
    </function>

    <function name="VertexAttrib4uivARB" offset="658">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLuint *" count="4"/>
        <glx rop="4234" ignore="true"/>
    </function>

    <function name="VertexAttrib4NbvARB" offset="659">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLbyte *" count="4"/>
        <glx rop="4235" ignore="true"/>
    </function>

    <function name="VertexAttrib4NsvARB" offset="660">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="4236" ignore="true"/>
    </function>

    <function name="VertexAttrib4NivARB" offset="661">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLint *" count="4"/>
        <glx rop="4237" ignore="true"/>
    </function>

    <function name="VertexAttrib4NusvARB" offset="662">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLushort *" count="4"/>
        <glx rop="4238" ignore="true"/>
    </function>

    <function name="VertexAttrib4NuivARB" offset="663">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLuint *" count="4"/>
        <glx rop="4239" ignore="true"/>
    </function>

    <function name="VertexAttribPointerARB" offset="664">
        <param name="index" type="GLuint"/>
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="normalized" type="GLboolean"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="EnableVertexAttribArrayARB" offset="665">
        <param name="index" type="GLuint"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="DisableVertexAttribArrayARB" offset="666">
        <param name="index" type="GLuint"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="ProgramStringARB" offset="667">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="len" type="GLsizei"/>
        <param name="string" type="const GLvoid *"/>
        <glx rop="4217" handcode="true" ignore="true"/>
    </function>

    <function name="BindProgramARB" alias="BindProgramNV">
        <param name="target" type="GLenum"/>
        <param name="program" type="GLuint"/>
    </function>

    <function name="DeleteProgramsARB" alias="DeleteProgramsNV">
        <param name="n" type="GLsizei"/>
        <param name="programs" type="const GLuint *"/>
    </function>

    <function name="GenProgramsARB" alias="GenProgramsNV">
        <param name="n" type="GLsizei"/>
        <param name="programs" type="GLuint *" output="true"/>
    </function>

    <function name="IsProgramARB" alias="IsProgramNV">
        <param name="program" type="GLuint"/>
        <return type="GLboolean"/>
    </function>

    <!-- FIXME: This should alias to ProgramParameter*NV -->
    <function name="ProgramEnvParameter4dARB" offset="668" vectorequiv="ProgramEnvParameter4dvARB">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <!-- FIXME: This should alias to ProgramParameter*NV -->
    <function name="ProgramEnvParameter4dvARB" offset="669">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLdouble *" count="4"/>
        <glx rop="4185" doubles_in_order="true" ignore="true"/>
    </function>

    <!-- FIXME: This should alias to ProgramParameter*NV -->
    <function name="ProgramEnvParameter4fARB" offset="670" vectorequiv="ProgramEnvParameter4fvARB">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <!-- FIXME: This should alias to ProgramParameter*NV -->
    <function name="ProgramEnvParameter4fvARB" offset="671">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLfloat *" count="4"/>
        <glx rop="4184" ignore="true"/>
    </function>

    <function name="ProgramLocalParameter4dARB" offset="672" vectorequiv="ProgramLocalParameter4dvARB">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="ProgramLocalParameter4dvARB" offset="673">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLdouble *" count="4"/>
        <glx rop="4216" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="ProgramLocalParameter4fARB" offset="674" vectorequiv="ProgramLocalParameter4fvARB">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="ProgramLocalParameter4fvARB" offset="675">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLfloat *" count="4"/>
        <glx rop="4215" ignore="true"/>
    </function>

    <!-- FIXME: This should alias to GetProgramParameter*NV -->
    <function name="GetProgramEnvParameterdvARB" offset="676">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx vendorpriv="1297" doubles_in_order="true" ignore="true"/>
    </function>

    <!-- FIXME: This should alias to GetProgramParameter*NV -->
    <function name="GetProgramEnvParameterfvARB" offset="677">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1296" ignore="true"/>
    </function>

    <function name="GetProgramLocalParameterdvARB" offset="678">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx vendorpriv="1306" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="GetProgramLocalParameterfvARB" offset="679">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1305" ignore="true"/>
    </function>

    <function name="GetProgramivARB" offset="680">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1307" ignore="true"/>
    </function>

    <function name="GetProgramStringARB" offset="681">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="string" type="GLvoid *" output="true"/>
        <glx vendorpriv="1308" handcode="true" ignore="true"/>
    </function>

    <function name="GetVertexAttribPointervARB" alias="GetVertexAttribPointervNV">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLvoid **" output="true"/>
    </function>
</category>

<category name="GL_ARB_fragment_program" number="27">
    <enum name="FRAGMENT_PROGRAM_ARB"                     value="0x8804"/>
    <enum name="PROGRAM_ALU_INSTRUCTIONS_ARB"             value="0x8805"/>
    <enum name="PROGRAM_TEX_INSTRUCTIONS_ARB"             value="0x8806"/>
    <enum name="PROGRAM_TEX_INDIRECTIONS_ARB"             value="0x8807"/>
    <enum name="PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB"      value="0x8808"/>
    <enum name="PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB"      value="0x8809"/>
    <enum name="PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB"      value="0x880A"/>
    <enum name="MAX_PROGRAM_ALU_INSTRUCTIONS_ARB"         value="0x880B"/>
    <enum name="MAX_PROGRAM_TEX_INSTRUCTIONS_ARB"         value="0x880C"/>
    <enum name="MAX_PROGRAM_TEX_INDIRECTIONS_ARB"         value="0x880D"/>
    <enum name="MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB"  value="0x880E"/>
    <enum name="MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB"  value="0x880F"/>
    <enum name="MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB"  value="0x8810"/>
    <enum name="MAX_TEXTURE_COORDS_ARB"                   value="0x8871"/>
    <enum name="MAX_TEXTURE_IMAGE_UNITS_ARB"              value="0x8872"/>
</category>

<category name="GL_ARB_vertex_buffer_object" number="28">
    <enum name="BUFFER_SIZE_ARB"                          value="0x8764"/>
    <enum name="BUFFER_USAGE_ARB"                         value="0x8765"/>
    <enum name="ARRAY_BUFFER_ARB"                         value="0x8892"/>
    <enum name="ELEMENT_ARRAY_BUFFER_ARB"                 value="0x8893"/>
    <enum name="ARRAY_BUFFER_BINDING_ARB"                 value="0x8894"/>
    <enum name="ELEMENT_ARRAY_BUFFER_BINDING_ARB"         value="0x8895"/>
    <enum name="VERTEX_ARRAY_BUFFER_BINDING_ARB"          value="0x8896"/>
    <enum name="NORMAL_ARRAY_BUFFER_BINDING_ARB"          value="0x8897"/>
    <enum name="COLOR_ARRAY_BUFFER_BINDING_ARB"           value="0x8898"/>
    <enum name="INDEX_ARRAY_BUFFER_BINDING_ARB"           value="0x8899"/>
    <enum name="TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB"   value="0x889A"/>
    <enum name="EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB"       value="0x889B"/>
    <enum name="SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB" value="0x889C"/>
    <enum name="FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB"  value="0x889D"/>
    <enum name="WEIGHT_ARRAY_BUFFER_BINDING_ARB"          value="0x889E"/>
    <enum name="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB"   value="0x889F"/>
    <enum name="READ_ONLY_ARB"                            value="0x88B8"/>
    <enum name="WRITE_ONLY_ARB"                           value="0x88B9"/>
    <enum name="READ_WRITE_ARB"                           value="0x88BA"/>
    <enum name="BUFFER_ACCESS_ARB"                        value="0x88BB"/>
    <enum name="BUFFER_MAPPED_ARB"                        value="0x88BC"/>
    <enum name="BUFFER_MAP_POINTER_ARB"                   value="0x88BD"/>
    <enum name="STREAM_DRAW_ARB"                          value="0x88E0"/>
    <enum name="STREAM_READ_ARB"                          value="0x88E1"/>
    <enum name="STREAM_COPY_ARB"                          value="0x88E2"/>
    <enum name="STATIC_DRAW_ARB"                          value="0x88E4"/>
    <enum name="STATIC_READ_ARB"                          value="0x88E5"/>
    <enum name="STATIC_COPY_ARB"                          value="0x88E6"/>
    <enum name="DYNAMIC_DRAW_ARB"                         value="0x88E8"/>
    <enum name="DYNAMIC_READ_ARB"                         value="0x88E9"/>
    <enum name="DYNAMIC_COPY_ARB"                         value="0x88EA"/>

    <type name="intptrARB" size="4"/>
    <type name="sizeiptrARB" size="4"/>

    <function name="BindBufferARB" offset="688">
        <param name="target" type="GLenum"/>
        <param name="buffer" type="GLuint"/>
        <glx ignore="true"/>
    </function>

    <function name="BufferDataARB" offset="689">
        <param name="target" type="GLenum"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="const GLvoid *"/>
        <param name="usage" type="GLenum"/>
        <glx ignore="true"/>
    </function>

    <function name="BufferSubDataARB" offset="690">
        <param name="target" type="GLenum"/>
        <param name="offset" type="GLintptrARB"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="const GLvoid *"/>
        <glx ignore="true"/>
    </function>

    <function name="DeleteBuffersARB" offset="691">
        <param name="n" type="GLsizei"/>
        <param name="buffer" type="const GLuint *"/>
        <glx ignore="true"/>
    </function>

    <function name="GenBuffersARB" offset="692">
        <param name="n" type="GLsizei"/>
        <param name="buffer" type="GLuint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetBufferParameterivARB" offset="693">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetBufferPointervARB" offset="694">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLvoid **" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetBufferSubDataARB" offset="695">
        <param name="target" type="GLenum"/>
        <param name="offset" type="GLintptrARB"/>
        <param name="size" type="GLsizeiptrARB"/>
        <param name="data" type="GLvoid *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="IsBufferARB" offset="696">
        <param name="buffer" type="GLuint"/>
        <return type="GLboolean"/>
        <glx ignore="true"/>
    </function>

    <function name="MapBufferARB" offset="697">
        <param name="target" type="GLenum"/>
        <param name="access" type="GLenum"/>
        <return type="GLvoid *"/>
        <glx ignore="true"/>
    </function>

    <function name="UnmapBufferARB" offset="698">
        <param name="target" type="GLenum"/>
        <return type="GLboolean"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_ARB_occlusion_query" number="29">
    <enum name="QUERY_COUNTER_BITS_ARB"                   value="0x8864"/>
    <enum name="CURRENT_QUERY_ARB"                        value="0x8865"/>
    <enum name="QUERY_RESULT_ARB"                         value="0x8866"/>
    <enum name="QUERY_RESULT_AVAILABLE_ARB"               value="0x8867"/>
    <enum name="SAMPLES_PASSED_ARB"                       value="0x8914"/>

    <function name="GenQueriesARB" offset="700">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="GLuint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="DeleteQueriesARB" offset="701">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="const GLuint *"/>
        <glx ignore="true"/>
    </function>

    <function name="IsQueryARB" offset="702">
        <param name="id" type="GLuint"/>
        <return type="GLboolean"/>
        <glx ignore="true"/>
    </function>

    <function name="BeginQueryARB" offset="703">
        <param name="target" type="GLenum"/>
        <param name="id" type="GLuint"/>
        <glx ignore="true"/>
    </function>

    <function name="EndQueryARB" offset="704">
        <param name="target" type="GLenum"/>
        <glx ignore="true"/>
    </function>

    <function name="GetQueryivARB" offset="705">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetQueryObjectivARB" offset="706">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetQueryObjectuivARB" offset="707">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLuint *" output="true"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_ARB_shader_objects" number="30">
    <enum name="PROGRAM_OBJECT_ARB"                       value="0x8B40"/>
    <enum name="SHADER_OBJECT_ARB"                        value="0x8B48"/>
    <enum name="OBJECT_TYPE_ARB"                          value="0x8B4E"/>
    <enum name="OBJECT_SUBTYPE_ARB"                       value="0x8B4F"/>
    <enum name="FLOAT_VEC2_ARB"                           value="0x8B50"/>
    <enum name="FLOAT_VEC3_ARB"                           value="0x8B51"/>
    <enum name="FLOAT_VEC4_ARB"                           value="0x8B52"/>
    <enum name="INT_VEC2_ARB"                             value="0x8B53"/>
    <enum name="INT_VEC3_ARB"                             value="0x8B54"/>
    <enum name="INT_VEC4_ARB"                             value="0x8B55"/>
    <enum name="BOOL_ARB"                                 value="0x8B56"/>
    <enum name="BOOL_VEC2_ARB"                            value="0x8B57"/>
    <enum name="BOOL_VEC3_ARB"                            value="0x8B58"/>
    <enum name="BOOL_VEC4_ARB"                            value="0x8B59"/>
    <enum name="FLOAT_MAT2_ARB"                           value="0x8B5A"/>
    <enum name="FLOAT_MAT3_ARB"                           value="0x8B5B"/>
    <enum name="FLOAT_MAT4_ARB"                           value="0x8B5C"/>
    <enum name="OBJECT_DELETE_STATUS_ARB"                 value="0x8B80"/>
    <enum name="OBJECT_COMPILE_STATUS_ARB"                value="0x8B81"/>
    <enum name="OBJECT_LINK_STATUS_ARB"                   value="0x8B82"/>
    <enum name="OBJECT_VALIDATE_STATUS_ARB"               value="0x8B83"/>
    <enum name="OBJECT_INFO_LOG_LENGTH_ARB"               value="0x8B84"/>
    <enum name="OBJECT_ATTACHED_OBJECTS_ARB"              value="0x8B85"/>
    <enum name="OBJECT_ACTIVE_UNIFORMS_ARB"               value="0x8B86"/>
    <enum name="OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB"     value="0x8B87"/>
    <enum name="OBJECT_SHADER_SOURCE_LENGTH_ARB"          value="0x8B88"/>

    <type name="charARB" size="1"/>
    <type name="handleARB" size="4"/>

    <function name="DeleteObjectARB" offset="711">
        <param name="obj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="GetHandleARB" offset="712">
        <param name="pname" type="GLenum"/>
        <return type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="DetachObjectARB" offset="713">
        <param name="containerObj" type="GLhandleARB"/>
        <param name="attachedObj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="CreateShaderObjectARB" offset="714">
        <param name="shaderType" type="GLenum"/>
        <return type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="ShaderSourceARB" offset="715">
        <param name="shaderObj" type="GLhandleARB"/>
        <param name="count" type="GLsizei"/>
        <param name="string" type="const GLcharARB **"/>
        <param name="length" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="CompileShaderARB" offset="716">
        <param name="shaderObj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="CreateProgramObjectARB" offset="717">
        <return type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="AttachObjectARB" offset="718">
        <param name="containerObj" type="GLhandleARB"/>
        <param name="obj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="LinkProgramARB" offset="719">
        <param name="programObj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="UseProgramObjectARB" offset="720">
        <param name="programObj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="ValidateProgramARB" offset="721">
        <param name="programObj" type="GLhandleARB"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform1fARB" offset="722">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform2fARB" offset="723">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLfloat"/>
        <param name="v1" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform3fARB" offset="724">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLfloat"/>
        <param name="v1" type="GLfloat"/>
        <param name="v2" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform4fARB" offset="725">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLfloat"/>
        <param name="v1" type="GLfloat"/>
        <param name="v2" type="GLfloat"/>
        <param name="v3" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform1iARB" offset="726">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform2iARB" offset="727">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLint"/>
        <param name="v1" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform3iARB" offset="728">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLint"/>
        <param name="v1" type="GLint"/>
        <param name="v2" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform4iARB" offset="729">
        <param name="location" type="GLint"/>
        <param name="v0" type="GLint"/>
        <param name="v1" type="GLint"/>
        <param name="v2" type="GLint"/>
        <param name="v3" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform1fvARB" offset="730">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform2fvARB" offset="731">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform3fvARB" offset="732">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform4fvARB" offset="733">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform1ivARB" offset="734">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform2ivARB" offset="735">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform3ivARB" offset="736">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="Uniform4ivARB" offset="737">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="value" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="UniformMatrix2fvARB" offset="738">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="transpose" type="GLboolean"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="UniformMatrix3fvARB" offset="739">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="transpose" type="GLboolean"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="UniformMatrix4fvARB" offset="740">
        <param name="location" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="transpose" type="GLboolean"/>
        <param name="value" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="GetObjectParameterfvARB" offset="741">
        <param name="obj" type="GLhandleARB"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetObjectParameterivARB" offset="742">
        <param name="obj" type="GLhandleARB"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetInfoLogARB" offset="743">
        <param name="obj" type="GLhandleARB"/>
        <param name="maxLength" type="GLsizei"/>
        <param name="length" type="GLsizei *" output="true"/>
        <param name="infoLog" type="GLcharARB *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetAttachedObjectsARB" offset="744">
        <param name="containerObj" type="GLhandleARB"/>
        <param name="maxLength" type="GLsizei"/>
        <param name="length" type="GLsizei *" output="true"/>
        <param name="infoLog" type="GLhandleARB *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetUniformLocationARB" offset="745">
        <param name="programObj" type="GLhandleARB"/>
        <param name="name" type="const GLcharARB *"/>
        <return type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="GetActiveUniformARB" offset="746">
        <param name="programObj" type="GLhandleARB"/>
        <param name="index" type="GLuint"/>
        <param name="maxLength" type="GLsizei"/>
        <param name="length" type="GLsizei *" output="true"/>
        <param name="size" type="GLint *" output="true"/>
        <param name="type" type="GLenum *" output="true"/>
        <param name="name" type="GLcharARB *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetUniformfvARB" offset="747">
        <param name="programObj" type="GLhandleARB"/>
        <param name="location" type="GLint"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetUniformivARB" offset="748">
        <param name="programObj" type="GLhandleARB"/>
        <param name="location" type="GLint"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetShaderSourceARB" offset="749">
        <param name="obj" type="GLhandleARB"/>
        <param name="maxLength" type="GLsizei"/>
        <param name="length" type="GLsizei *" output="true"/>
        <param name="source" type="GLcharARB *" output="true"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_ARB_vertex_shader" number="31">
    <enum name="VERTEX_SHADER_ARB"                        value="0x8B31"/>
    <enum name="MAX_VERTEX_UNIFORM_COMPONENTS_ARB"        value="0x8B4A"/>
    <enum name="MAX_VARYING_FLOATS_ARB"                   value="0x8B4B"/>
    <enum name="MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB"       value="0x8B4C"/>
    <enum name="MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB"     value="0x8B4D"/>
    <enum name="OBJECT_ACTIVE_ATTRIBUTES_ARB"             value="0x8B89"/>
    <enum name="OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB"   value="0x8B8A"/>

    <function name="BindAttribLocationARB" offset="750">
        <param name="programObj" type="GLhandleARB"/>
        <param name="index" type="GLuint"/>
        <param name="name" type="const GLcharARB *"/>
        <glx ignore="true"/>
    </function>

    <function name="GetActiveAttribARB" offset="751">
        <param name="programObj" type="GLhandleARB"/>
        <param name="index" type="GLuint"/>
        <param name="maxLength" type="GLsizei"/>
        <param name="length" type="GLsizei *" output="true"/>
        <param name="size" type="GLint *" output="true"/>
        <param name="type" type="GLenum *" output="true"/>
        <param name="name" type="GLcharARB *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetAttribLocationARB" offset="752">
        <param name="programObj" type="GLhandleARB"/>
        <param name="name" type="const GLcharARB *"/>
        <return type="GLint"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_ARB_fragment_shader" number="32">
    <enum name="FRAGMENT_SHADER_ARB"                      value="0x8B30"/>
    <enum name="MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB"      value="0x8B49"/>
</category>

<category name="GL_ARB_shading_language_100" number="33">
    <!-- No new functions, types, enums. -->
</category>

<category name="GL_ARB_texture_non_power_of_two" number="34">
    <!-- No new functions, types, enums. -->
</category>

<category name="GL_ARB_point_sprite" number="35">
    <enum name="POINT_SPRITE_ARB"                         value="0x8861"/>
    <enum name="COORD_REPLACE_ARB"                        value="0x8862">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
</category>

<category name="GL_ARB_fragment_program_shadow" number="36">
    <!-- No new functions, types, enums. -->
</category>

<category name="GL_ARB_draw_buffers" number="37">
    <enum name="MAX_DRAW_BUFFERS_ARB"                     value="0x8824"/>
    <enum name="DRAW_BUFFER0_ARB"                         value="0x8825"/>
    <enum name="DRAW_BUFFER1_ARB"                         value="0x8826"/>
    <enum name="DRAW_BUFFER2_ARB"                         value="0x8827"/>
    <enum name="DRAW_BUFFER3_ARB"                         value="0x8828"/>
    <enum name="DRAW_BUFFER4_ARB"                         value="0x8829"/>
    <enum name="DRAW_BUFFER5_ARB"                         value="0x882A"/>
    <enum name="DRAW_BUFFER6_ARB"                         value="0x882B"/>
    <enum name="DRAW_BUFFER7_ARB"                         value="0x882C"/>
    <enum name="DRAW_BUFFER8_ARB"                         value="0x882D"/>
    <enum name="DRAW_BUFFER9_ARB"                         value="0x882E"/>
    <enum name="DRAW_BUFFER10_ARB"                        value="0x882F"/>
    <enum name="DRAW_BUFFER11_ARB"                        value="0x8830"/>
    <enum name="DRAW_BUFFER12_ARB"                        value="0x8831"/>
    <enum name="DRAW_BUFFER13_ARB"                        value="0x8832"/>
    <enum name="DRAW_BUFFER14_ARB"                        value="0x8833"/>
    <enum name="DRAW_BUFFER15_ARB"                        value="0x8834"/>

    <function name="DrawBuffersARB" offset="413">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="bufs" type="const GLenum *" count="n"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_ARB_texture_rectangle" number="38">
    <enum name="TEXTURE_RECTANGLE_ARB"                    value="0x84F5"/>
    <enum name="TEXTURE_BINDING_RECTANGLE_ARB"            value="0x84F6"/>
    <enum name="PROXY_TEXTURE_RECTANGLE_ARB"              value="0x84F7"/>
    <enum name="MAX_RECTANGLE_TEXTURE_SIZE_ARB"           value="0x84F8"/>
</category>

<!-- Non-ARB extensions sorted by extension number. -->

<category name="GL_EXT_blend_color" number="2">
    <enum name="CONSTANT_COLOR_EXT"                       value="0x8001"/>
    <enum name="ONE_MINUS_CONSTANT_COLOR_EXT"             value="0x8002"/>
    <enum name="CONSTANT_ALPHA_EXT"                       value="0x8003"/>
    <enum name="ONE_MINUS_CONSTANT_ALPHA_EXT"             value="0x8004"/>
    <enum name="BLEND_COLOR_EXT"                          value="0x8005"/>

    <function name="BlendColorEXT" alias="BlendColor">
        <param name="red" type="GLclampf"/>
        <param name="green" type="GLclampf"/>
        <param name="blue" type="GLclampf"/>
        <param name="alpha" type="GLclampf"/>
    </function>
</category>

<category name="GL_EXT_polygon_offset" number="3">
    <function name="PolygonOffsetEXT" offset="414">
        <param name="factor" type="GLfloat"/>
        <param name="bias" type="GLfloat"/>
        <glx rop="4098" ignore="true"/>
    </function>
</category>

<category name="GL_EXT_texture" number="4">
    <enum name="ALPHA4_EXT"                               value="0x803B"/>
    <enum name="ALPHA8_EXT"                               value="0x803C"/>
    <enum name="ALPHA12_EXT"                              value="0x803D"/>
    <enum name="ALPHA16_EXT"                              value="0x803E"/>
    <enum name="LUMINANCE4_EXT"                           value="0x803F"/>
    <enum name="LUMINANCE8_EXT"                           value="0x8040"/>
    <enum name="LUMINANCE12_EXT"                          value="0x8041"/>
    <enum name="LUMINANCE16_EXT"                          value="0x8042"/>
    <enum name="LUMINANCE4_ALPHA4_EXT"                    value="0x8043"/>
    <enum name="LUMINANCE6_ALPHA2_EXT"                    value="0x8044"/>
    <enum name="LUMINANCE8_ALPHA8_EXT"                    value="0x8045"/>
    <enum name="LUMINANCE12_ALPHA4_EXT"                   value="0x8046"/>
    <enum name="LUMINANCE12_ALPHA12_EXT"                  value="0x8047"/>
    <enum name="LUMINANCE16_ALPHA16_EXT"                  value="0x8048"/>
    <enum name="INTENSITY_EXT"                            value="0x8049"/>
    <enum name="INTENSITY4_EXT"                           value="0x804A"/>
    <enum name="INTENSITY8_EXT"                           value="0x804B"/>
    <enum name="INTENSITY12_EXT"                          value="0x804C"/>
    <enum name="INTENSITY16_EXT"                          value="0x804D"/>
    <enum name="RGB2_EXT"                                 value="0x804E"/>
    <enum name="RGB4_EXT"                                 value="0x804F"/>
    <enum name="RGB5_EXT"                                 value="0x8050"/>
    <enum name="RGB8_EXT"                                 value="0x8051"/>
    <enum name="RGB10_EXT"                                value="0x8052"/>
    <enum name="RGB12_EXT"                                value="0x8053"/>
    <enum name="RGB16_EXT"                                value="0x8054"/>
    <enum name="RGBA2_EXT"                                value="0x8055"/>
    <enum name="RGBA4_EXT"                                value="0x8056"/>
    <enum name="RGB5_A1_EXT"                              value="0x8057"/>
    <enum name="RGBA8_EXT"                                value="0x8058"/>
    <enum name="RGB10_A2_EXT"                             value="0x8059"/>
    <enum name="RGBA12_EXT"                               value="0x805A"/>
    <enum name="RGBA16_EXT"                               value="0x805B"/>
    <enum name="TEXTURE_RED_SIZE_EXT"                     value="0x805C"/>
    <enum name="TEXTURE_GREEN_SIZE_EXT"                   value="0x805D"/>
    <enum name="TEXTURE_BLUE_SIZE_EXT"                    value="0x805E"/>
    <enum name="TEXTURE_ALPHA_SIZE_EXT"                   value="0x805F"/>
    <enum name="TEXTURE_LUMINANCE_SIZE_EXT"               value="0x8060"/>
    <enum name="TEXTURE_INTENSITY_SIZE_EXT"               value="0x8061"/>
    <enum name="REPLACE_EXT"                              value="0x8062"/>
    <enum name="PROXY_TEXTURE_1D_EXT"                     value="0x8063"/>
    <enum name="PROXY_TEXTURE_2D_EXT"                     value="0x8064"/>
    <enum name="TEXTURE_TOO_LARGE_EXT"                    value="0x8065"/>
</category>

<!-- Extension number 5 is not listed in the extension registry. -->

<category name="GL_EXT_texture3D" number="6">
    <function name="TexImage3DEXT" alias="TexImage3D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *"/>
    </function>

    <function name="TexSubImage3DEXT" alias="TexSubImage3D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *"/>
    </function>
</category>

<category name="GL_SGIS_texture_filter4" number="7">
    <function name="GetTexFilterFuncSGIS" offset="415">
        <param name="target" type="GLenum"/>
        <param name="filter" type="GLenum"/>
        <param name="weights" type="GLfloat *" output="true"/>
        <glx vendorpriv="4101" ignore="true"/>
    </function>

    <function name="TexFilterFuncSGIS" offset="416">
        <param name="target" type="GLenum"/>
        <param name="filter" type="GLenum"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="weights" type="const GLfloat *" count="n"/>
        <glx rop="2064" ignore="true"/>
    </function>
</category>

<!-- Extension number 8 is not listed in the extension registry. -->

<category name="GL_EXT_subtexture" number="9">
    <function name="TexSubImage1DEXT" alias="TexSubImage1D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *"/>
    </function>

    <function name="TexSubImage2DEXT" alias="TexSubImage2D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *"/>
    </function>
</category>

<category name="GL_EXT_copy_texture" number="10">
    <function name="CopyTexImage1DEXT" alias="CopyTexImage1D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="border" type="GLint"/>
    </function>

    <function name="CopyTexImage2DEXT" alias="CopyTexImage2D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="border" type="GLint"/>
    </function>

    <function name="CopyTexSubImage1DEXT" alias="CopyTexSubImage1D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
    </function>

    <function name="CopyTexSubImage2DEXT" alias="CopyTexSubImage2D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
    </function>

    <function name="CopyTexSubImage3DEXT" alias="CopyTexSubImage3D">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
    </function>
</category>

<category name="GL_EXT_histogram" number="11">
    <function name="GetHistogramEXT" offset="417">
        <param name="target" type="GLenum"/>
        <param name="reset" type="GLboolean"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="values" type="GLvoid *" output="true"/>
        <glx vendorpriv="5" handcode="true" ignore="true"/>
    </function>

    <function name="GetHistogramParameterfvEXT" offset="418">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="6" ignore="true"/>
    </function>

    <function name="GetHistogramParameterivEXT" offset="419">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="7" ignore="true"/>
    </function>

    <function name="GetMinmaxEXT" offset="420">
        <param name="target" type="GLenum"/>
        <param name="reset" type="GLboolean"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="values" type="GLvoid *" output="true"/>
        <glx vendorpriv="8" handcode="true" ignore="true"/>
    </function>

    <function name="GetMinmaxParameterfvEXT" offset="421">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="9" ignore="true"/>
    </function>

    <function name="GetMinmaxParameterivEXT" offset="422">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="10" ignore="true"/>
    </function>

    <function name="HistogramEXT" alias="Histogram">
        <param name="target" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="internalformat" type="GLenum"/>
        <param name="sink" type="GLboolean"/>
    </function>

    <function name="MinmaxEXT" alias="Minmax">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="sink" type="GLboolean"/>
    </function>

    <function name="ResetHistogramEXT" alias="ResetHistogram">
        <param name="target" type="GLenum"/>
    </function>

    <function name="ResetMinmaxEXT" alias="ResetMinmax">
        <param name="target" type="GLenum"/>
    </function>
</category>

<category name="GL_EXT_convolution" number="12">
    <enum name="CONVOLUTION_BORDER_MODE_EXT"              value="0x8013">
        <size name="ConvolutionParameterfv" count="1"/>
        <size name="ConvolutionParameteriv" count="1"/>
    </enum>
    <!-- FIXME: Should this be in a section for HP_convolution_border_modes? -->
    <enum name="CONVOLUTION_BORDER_COLOR_HP"              value="0x8154">
        <size name="ConvolutionParameterfv" count="4"/>
        <size name="ConvolutionParameteriv" count="4"/>
    </enum>
    <enum name="CONVOLUTION_FILTER_SCALE_EXT"             value="0x8014">
        <size name="ConvolutionParameterfv" count="4"/>
        <size name="ConvolutionParameteriv" count="4"/>
    </enum>
    <enum name="CONVOLUTION_FILTER_BIAS_EXT"              value="0x8015">
        <size name="ConvolutionParameterfv" count="4"/>
        <size name="ConvolutionParameteriv" count="4"/>
    </enum>

    <function name="ConvolutionFilter1DEXT" alias="ConvolutionFilter1D">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="const GLvoid *"/>
    </function>

    <function name="ConvolutionFilter2DEXT" alias="ConvolutionFilter2D">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="const GLvoid *"/>
    </function>

    <function name="ConvolutionParameterfEXT" alias="ConvolutionParameterf">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat"/>
    </function>

    <function name="ConvolutionParameterfvEXT" alias="ConvolutionParameterfv">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="ConvolutionParameteriEXT" alias="ConvolutionParameteri">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint"/>
    </function>

    <function name="ConvolutionParameterivEXT" alias="ConvolutionParameteriv">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="CopyConvolutionFilter1DEXT" alias="CopyConvolutionFilter1D">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
    </function>

    <function name="CopyConvolutionFilter2DEXT" alias="CopyConvolutionFilter2D">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
    </function>

    <function name="GetConvolutionFilterEXT" offset="423">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="image" type="GLvoid *" output="true"/>
        <glx sop="1" handcode="true" ignore="true"/>
    </function>

    <function name="GetConvolutionParameterfvEXT" offset="424">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx sop="2" ignore="true"/>
    </function>

    <function name="GetConvolutionParameterivEXT" offset="425">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx sop="3" ignore="true"/>
    </function>

    <function name="GetSeparableFilterEXT" offset="426">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="row" type="GLvoid *" output="true"/>
        <param name="column" type="GLvoid *" output="true"/>
        <param name="span" type="GLvoid *" output="true"/>
        <glx sop="4" handcode="true" ignore="true"/>
    </function>

    <function name="SeparableFilter2DEXT" alias="SeparableFilter2D">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="row" type="const GLvoid *"/>
        <param name="column" type="const GLvoid *"/>
    </function>
</category>

<category name="GL_SGI_color_table" number="14">
    <function name="ColorTableSGI" alias="ColorTable">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="table" type="const GLvoid *"/>
    </function>

    <function name="ColorTableParameterfvSGI" alias="ColorTableParameterfv">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="ColorTableParameterivSGI" alias="ColorTableParameteriv">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="CopyColorTableSGI" alias="CopyColorTable">
        <param name="target" type="GLenum"/>
        <param name="internalformat" type="GLenum"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
    </function>

    <function name="GetColorTableSGI" offset="427">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="table" type="GLvoid *" output="true"/>
        <glx vendorpriv="4098" handcode="true" ignore="true"/>
    </function>

    <function name="GetColorTableParameterfvSGI" offset="428">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="4099" ignore="true"/>
    </function>

    <function name="GetColorTableParameterivSGI" offset="429">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="4100" ignore="true"/>
    </function>
</category>

<category name="GL_SGIS_pixel_texture" number="15">
    <function name="PixelTexGenParameteriSGIS" offset="431">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="PixelTexGenParameterivSGIS" offset="432">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="PixelTexGenParameterfSGIS" offset="433">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="PixelTexGenParameterfvSGIS" offset="434">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="GetPixelTexGenParameterivSGIS" offset="435">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetPixelTexGenParameterfvSGIS" offset="436">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_SGIS_texture4D" number="16">
    <function name="TexImage4DSGIS" offset="437">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="internalformat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="size4d" type="GLsizei"/>
        <param name="border" type="GLint"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_depth="depth" img_extent="size4d" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="2057" ignore="true"/>
    </function>

    <function name="TexSubImage4DSGIS" offset="438">
        <param name="target" type="GLenum"/>
        <param name="level" type="GLint"/>
        <param name="xoffset" type="GLint"/>
        <param name="yoffset" type="GLint"/>
        <param name="zoffset" type="GLint"/>
        <param name="woffset" type="GLint"/>
        <param name="width" type="GLsizei"/>
        <param name="height" type="GLsizei"/>
        <param name="depth" type="GLsizei"/>
        <param name="size4d" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="pixels" type="const GLvoid *" img_width="width" img_height="height" img_depth="depth" img_extent="size4d" img_xoff="xoffset" img_yoff="yoffset" img_zoff="zoffset" img_woff="woffset" img_format="format" img_type="type" img_target="target" img_null_flag="true" img_pad_dimensions="true"/>
        <glx rop="2058" ignore="true"/>
    </function>
</category>

<!-- Extension number 19 is not listed in the extension registry. -->

<category name="GL_EXT_texture_object" number="20">
    <function name="AreTexturesResidentEXT" offset="439">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="textures" type="const GLuint *" count="n"/>
        <param name="residences" type="GLboolean *" output="true"/>
        <return type="GLboolean"/>
        <glx vendorpriv="11" always_array="true"/>
    </function>

    <function name="BindTextureEXT" alias="BindTexture">
        <param name="target" type="GLenum"/>
        <param name="texture" type="GLuint"/>
    </function>

    <!-- For GLX, this is wrong.  DeleteTexturesEXT and DeleteTextures
         do not have the same protocol!
    -->
    <function name="DeleteTexturesEXT" alias="DeleteTextures">
        <param name="n" type="GLsizei"/>
        <param name="textures" type="const GLuint *"/>
    </function>

    <function name="GenTexturesEXT" offset="440">
        <param name="n" type="GLsizei"/>
        <param name="textures" type="GLuint *" output="true"/>
        <glx vendorpriv="13" always_array="true"/>
    </function>

    <function name="IsTextureEXT" offset="441">
        <param name="texture" type="GLuint"/>
        <return type="GLboolean"/>
        <glx vendorpriv="14"/>
    </function>

    <function name="PrioritizeTexturesEXT" alias="PrioritizeTextures">
        <param name="n" type="GLsizei"/>
        <param name="textures" type="const GLuint *"/>
        <param name="priorities" type="const GLclampf *"/>
    </function>
</category>

<category name="GL_SGIS_detail_texture" number="21">
    <function name="DetailTexFuncSGIS" offset="442">
        <param name="target" type="GLenum"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="points" type="const GLfloat *" count="n"/>
        <glx rop="2051" ignore="true"/>
    </function>

    <function name="GetDetailTexFuncSGIS" offset="443">
        <param name="target" type="GLenum"/>
        <param name="points" type="GLfloat *" output="true"/>
        <glx vendorpriv="4096" ignore="true"/>
    </function>
</category>

<category name="GL_SGIS_sharpen_texture" number="22">
    <function name="SharpenTexFuncSGIS" offset="444">
        <param name="target" type="GLenum"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="points" type="const GLfloat *" counter="n" count_scale="2"/>
        <glx rop="2052" ignore="true"/>
    </function>

    <function name="GetSharpenTexFuncSGIS" offset="445">
        <param name="target" type="GLenum"/>
        <param name="points" type="GLfloat *" output="true"/>
        <glx vendorpriv="4097" ignore="true"/>
    </function>
</category>

<category name="GL_SGIS_multisample" number="25">
    <function name="SampleMaskSGIS" offset="446">
        <param name="value" type="GLclampf"/>
        <param name="invert" type="GLboolean"/>
        <glx rop="2048"/>
    </function>

    <function name="SamplePatternSGIS" offset="447">
        <param name="pattern" type="GLenum"/>
        <glx rop="2049"/>
    </function>
</category>

<!-- Extension number 28 is a GLX extension. -->
<!-- Extension number 29 is not listed in the extension registry. -->

<category name="GL_EXT_vertex_array" number="30">
    <function name="ArrayElementEXT" alias="ArrayElement">
        <param name="i" type="GLint"/>
    </function>

    <function name="ColorPointerEXT" offset="448">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="DrawArraysEXT" alias="DrawArrays">
        <param name="mode" type="GLenum"/>
        <param name="first" type="GLint"/>
        <param name="count" type="GLsizei"/>
    </function>

    <function name="EdgeFlagPointerEXT" offset="449">
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLboolean *"/>
        <glx handcode="true"/>
    </function>

    <function name="GetPointervEXT" alias="GetPointerv">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLvoid **" output="true"/>
    </function>

    <function name="IndexPointerEXT" offset="450">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="NormalPointerEXT" offset="451">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="TexCoordPointerEXT" offset="452">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>

    <function name="VertexPointerEXT" offset="453">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>
</category>

<category name="GL_SGIS_generate_mipmap" number="33">
    <enum name="GENERATE_MIPMAP_SGIS"                     value="0x8191">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="GENERATE_MIPMAP_HINT_SGIS"                value="0x8192"/>
</category>

<category name="GL_SGIX_clipmap" number="33">
    <enum name="LINEAR_CLIPMAP_LINEAR_SGIX"               value="0x8170"/>
    <enum name="TEXTURE_CLIPMAP_CENTER_SGIX"              value="0x8171">
        <size name="TexParameterfv" count="2"/>
        <size name="TexParameteriv" count="2"/>
    </enum>
    <enum name="TEXTURE_CLIPMAP_FRAME_SGIX"               value="0x8172"/>
    <enum name="TEXTURE_CLIPMAP_OFFSET_SGIX"              value="0x8173">
        <size name="TexParameterfv" count="2"/>
        <size name="TexParameteriv" count="2"/>
    </enum>
    <enum name="TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX"       value="0x8174">
        <size name="TexParameterfv" count="3"/>
        <size name="TexParameteriv" count="3"/>
    </enum>
    <enum name="TEXTURE_CLIPMAP_LOD_OFFSET_SGIX"          value="0x8175"/>
    <enum name="TEXTURE_CLIPMAP_DEPTH_SGIX"               value="0x8176"/>
    <enum name="MAX_CLIPMAP_DEPTH_SGIX"                   value="0x8177"/>
    <enum name="MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX"           value="0x8178"/>
    <enum name="NEAREST_CLIPMAP_NEAREST_SGIX"             value="0x844D"/>
    <enum name="NEAREST_CLIPMAP_LINEAR_SGIX"              value="0x844E"/>
    <enum name="LINEAR_CLIPMAP_NEAREST_SGIX"              value="0x844F"/>
</category>

<category name="GL_SGIX_shadow" number="34">
    <enum name="TEXTURE_COMPARE_SGIX"                     value="0x819A">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_COMPARE_OPERATOR_SGIX"            value="0x819B">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_LEQUAL_R_SGIX"                    value="0x819C"/>
    <enum name="TEXTURE_GEQUAL_R_SGIX"                    value="0x819D"/>
</category>

<category name="GL_EXT_blend_minmax" number="37">
    <function name="BlendEquationEXT" alias="BlendEquation">
        <param name="mode" type="GLenum"/>
    </function>
</category>

<!-- Extension number 40 is a GLX extension. -->
<!-- Extension number 41 is a GLX extension. -->
<!-- Extension number 42 is a GLX extension. -->
<!-- Extension number 43 is a GLX extension. -->
<!-- Extension number 44 is a GLX extension. -->
<!-- Extension number 46 is not listed in the extension registry. -->
<!-- Extension number 47 is a GLX extension. -->
<!-- Extension number 48 is not listed in the extension registry. -->
<!-- Extension number 49 is a GLX extension. -->
<!-- Extension number 50 is a GLX extension. -->

<category name="GL_SGIX_sprite" number="52">
    <function name="SpriteParameterfSGIX" offset="454">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="SpriteParameterfvSGIX" offset="455">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="SpriteParameteriSGIX" offset="456">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="SpriteParameterivSGIX" offset="457">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_EXT_point_parameters" number="54">
    <enum name="POINT_SIZE_MIN_EXT"                       value="0x8126">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_SIZE_MAX_EXT"                       value="0x8127">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_FADE_THRESHOLD_SIZE_EXT"            value="0x8128">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_DISTANCE_ATTENUATION_EXT"           value="0x8129">
        <size name="PointParameterfvEXT" count="3"/>
    </enum>

    <function name="PointParameterfEXT" offset="458">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="2065"/>
    </function>

    <function name="PointParameterfvEXT" offset="459">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="2066"/>
    </function>
</category>

<category name="GL_SGIX_instruments" number="55">
    <function name="GetInstrumentsSGIX" offset="460">
        <return type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="InstrumentsBufferSGIX" offset="461">
        <param name="size" type="GLsizei"/>
        <param name="buffer" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="PollInstrumentsSGIX" offset="462">
        <param name="marker_p" type="GLint *" output="true"/>
        <return type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="ReadInstrumentsSGIX" offset="463">
        <param name="marker" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="StartInstrumentsSGIX" offset="464">
        <glx ignore="true"/>
    </function>

    <function name="StopInstrumentsSGIX" offset="465">
        <param name="marker" type="GLint"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_SGIX_texture_scale_bias" number="56">
    <enum name="POST_TEXTURE_FILTER_BIAS_SGIX"            value="0x8179">
        <size name="TexParameterfv" count="4"/>
        <size name="TexParameteriv" count="4"/>
    </enum>
    <enum name="POST_TEXTURE_FILTER_SCALE_SGIX"           value="0x817A">
        <size name="TexParameterfv" count="4"/>
        <size name="TexParameteriv" count="4"/>
    </enum>
    <enum name="POST_TEXTURE_FILTER_BIAS_RANGE_SGIX"      value="0x817B"/>
    <enum name="POST_TEXTURE_FILTER_SCALE_RANGE_SGIX"     value="0x817C"/>
</category>

<category name="GL_SGIX_framezoom" number="57">
    <function name="FrameZoomSGIX" offset="466">
        <param name="factor" type="GLint"/>
        <glx rop="2072" ignore="true"/>
    </function>
</category>

<category name="GL_SGIX_tag_sample_buffer" number="58">
    <function name="TagSampleBufferSGIX" offset="467">
        <glx rop="2050" ignore="true"/>
    </function>
</category>

<!-- Extension number 59 is not listed in the extension registry. -->

<category name="GL_SGIX_reference_plane" number="60">
    <function name="ReferencePlaneSGIX" offset="468">
        <param name="equation" type="const GLdouble *" count="4"/>
        <glx rop="2071" ignore="true"/>
    </function>
</category>

<category name="GL_SGIX_flush_raster" number="61">
    <function name="FlushRasterSGIX" offset="469">
        <glx vendorpriv="4105" ignore="true"/>
    </function>
</category>

<!-- Extension number 62 is a GLX extension. -->

<category name="GL_SGIX_depth_texture" number="63">
    <enum name="DEPTH_COMPONENT16_SGIX"                   value="0x81A5"/>
    <enum name="DEPTH_COMPONENT24_SGIX"                   value="0x81A6"/>
    <enum name="DEPTH_COMPONENT32_SGIX"                   value="0x81A7"/>
</category>

<category name="GL_SGIS_fog_function" number="64">
    <function name="FogFuncSGIS" offset="?">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="points" type="const GLfloat *" counter="n" count_scale="2"/>
        <glx rop="2067" ignore="true"/>
    </function>

    <function name="GetFogFuncSGIS" offset="?">
        <param name="points" type="GLfloat *" output="true"/>
        <!-- GLX protocol for this function is unknown. -->
    </function>
</category>

<category name="GL_SGIX_fog_offset" number="65">
    <enum name="FOG_OFFSET_SGIX"                          value="0x8198"/>
    <enum name="FOG_OFFSET_VALUE_SGIX"                    value="0x8199">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
</category>

<category name="GL_HP_image_transform" number="66">
    <function name="ImageTransformParameteriHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
    </function>

    <function name="ImageTransformParameterfHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
    </function>

    <function name="ImageTransformParameterivHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="ImageTransformParameterfvHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="GetImageTransformParameterivHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetImageTransformParameterfvHP" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
    </function>
</category>

<!-- Extension number 68 is not listed in the extension registry. -->
<!-- Extension number 70 is not listed in the extension registry. -->
<!-- Extension number 71 is not listed in the extension registry. -->
<!-- Extension number 72 is not listed in the extension registry. -->
<!-- Extension number 73 is not listed in the extension registry. -->

<category name="GL_EXT_color_subtable" number="74">
    <function name="ColorSubTableEXT" alias="ColorSubTable">
        <param name="target" type="GLenum"/>
        <param name="start" type="GLsizei"/>
        <param name="count" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="data" type="const GLvoid *"/>
    </function>

    <function name="CopyColorSubTableEXT" alias="CopyColorSubTable">
        <param name="target" type="GLenum"/>
        <param name="start" type="GLsizei"/>
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="width" type="GLsizei"/>
    </function>
</category>

<!-- Extension number 75 is a GLU extension. -->

<category name="GL_PGI_misc_hints" number="77">
    <function name="HintPGI" offset="544">
        <param name="target" type="GLenum"/>
        <param name="mode" type="GLint"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_EXT_paletted_texture" number="78">
    <function name="ColorTableEXT" alias="ColorTable">
        <param name="target" type="GLenum"/>
        <param name="internalFormat" type="GLenum"/>
        <param name="width" type="GLsizei"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="table" type="const GLvoid *"/>
    </function>

    <function name="GetColorTableEXT" offset="550">
        <param name="target" type="GLenum"/>
        <param name="format" type="GLenum"/>
        <param name="type" type="GLenum"/>
        <param name="data" type="GLvoid *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetColorTableParameterivEXT" offset="551">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetColorTableParameterfvEXT" offset="552">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_SGIX_list_priority" number="80">
    <function name="GetListParameterfvSGIX" offset="470">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetListParameterivSGIX" offset="471">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="ListParameterfSGIX" offset="472">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="ListParameterfvSGIX" offset="473">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="ListParameteriSGIX" offset="474">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="ListParameterivSGIX" offset="475">
        <param name="list" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>
</category>

<!-- Extension number 82 is not listed in the extension registry. -->
<!-- Extension number 83 is a GLX extension. -->

<category name="GL_SGIX_texture_lod_bias" number="84">
    <enum name="TEXTURE_LOD_BIAS_S_SGIX"                  value="0x818E">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_LOD_BIAS_T_SGIX"                  value="0x818F">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_LOD_BIAS_R_SGIX"                  value="0x8190">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<!-- Extension number 85 is a GLU extension. -->
<!-- Extension number 86 is a GLX extension. -->
<!-- Extension number 87 is not listed in the extension registry. -->
<!-- Extension number 88 is not listed in the extension registry. -->
<!-- Extension number 89 is not listed in the extension registry. -->


<category name="GL_SGIX_shadow_ambient" number="90">
    <enum name="SHADOW_AMBIENT_SGIX"                      value="0x80BF">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<!-- Extension number 91 is a GLX extension. -->
<!-- Extension number 92 is a GLX extension. -->

<category name="GL_EXT_index_material" number="94">
    <function name="IndexMaterialEXT" offset="538">
        <param name="face" type="GLenum"/>
        <param name="mode" type="GLenum"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_EXT_index_func" number="95">
    <function name="IndexFuncEXT" offset="539">
        <param name="func" type="GLenum"/>
        <param name="ref" type="GLclampf"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_EXT_compiled_vertex_array" number="97">
    <function name="LockArraysEXT" offset="540">
        <param name="first" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="UnlockArraysEXT" offset="541">
        <glx handcode="true" ignore="true"/>
    </function>
</category>

<category name="GL_EXT_cull_vertex" number="98">
    <enum name="CULL_VERTEX_EXT"                          value="0x81AA"/>
    <enum name="CULL_VERTEX_OBJECT_POSITION_EXT"          value="0x81AB">
        <size name="CullParameterfv" count="4"/>
        <size name="CullParameterdv" count="4"/>
    </enum>
    <enum name="CULL_VERTEX_EYE_POSITION_EXT"             value="0x81AC">
        <size name="CullParameterfv" count="4"/>
        <size name="CullParameterdv" count="4"/>
    </enum>

    <function name="CullParameterdvEXT" offset="542">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *"/> <!-- Spec bug. Should be const. -->
        <glx ignore="true"/>
    </function>

    <function name="CullParameterfvEXT" offset="543">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *"/> <!-- Spec bug. Should be const. -->
        <glx ignore="true"/>
    </function>
</category>

<!-- Extension number 99 is not listed in the extension registry. -->
<!-- Extension number 100 is a GLU extension. -->

<!-- Shouldn't this be EXT_fragment_lighting? -->
<category name="GL_SGIX_fragment_lighting" number="102">
    <function name="FragmentColorMaterialSGIX" offset="476">
        <param name="face" type="GLenum"/>
        <param name="mode" type="GLenum"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightfSGIX" offset="477">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightfvSGIX" offset="478">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightiSGIX" offset="479">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightivSGIX" offset="480">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightModelfSGIX" offset="481">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightModelfvSGIX" offset="482">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightModeliSGIX" offset="483">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentLightModelivSGIX" offset="484">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentMaterialfSGIX" offset="485">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentMaterialfvSGIX" offset="486">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentMaterialiSGIX" offset="487">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="FragmentMaterialivSGIX" offset="488">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="GetFragmentLightfvSGIX" offset="489">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetFragmentLightivSGIX" offset="490">
        <param name="light" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetFragmentMaterialfvSGIX" offset="491">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="GetFragmentMaterialivSGIX" offset="492">
        <param name="face" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="LightEnviSGIX" offset="493">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx ignore="true"/>
    </function>
</category>

<!-- Extension number 103 is not listed in the extension registry. -->
<!-- Extension number 104 is not listed in the extension registry. -->
<!-- Extension number 105 is not listed in the extension registry. -->
<!-- Extension number 106 is not listed in the extension registry. -->
<!-- Extension number 107 is not listed in the extension registry. -->
<!-- Extension number 108 is not listed in the extension registry. -->
<!-- Extension number 109 is not listed in the extension registry. -->

<category name="GL_EXT_draw_range_elements" number="112">
    <function name="DrawRangeElementsEXT" alias="DrawRangeElements">
        <param name="mode" type="GLenum"/>
        <param name="start" type="GLuint"/>
        <param name="end" type="GLuint"/>
        <param name="count" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>
</category>

<!-- Extension number 115 is a GLX extension. -->
<!-- Extension number 116 is not listed in the extension registry. -->

<category name="GL_EXT_light_texture" number="117">
    <function name="ApplyTextureEXT" offset="?">
        <param name="mode" type="GLenum"/>
    </function>

    <function name="TextureLightEXT" offset="?">
        <param name="pname" type="GLenum"/>
    </function>

    <function name="TextureMaterialEXT" offset="?">
        <param name="face" type="GLenum"/>
        <param name="mode" type="GLenum"/>
    </function>
</category>

<!-- Extension number 118 is not listed in the extension registry. -->
<!-- Extension number 121 is not listed in the extension registry. -->
<!-- Extension number 122 is not listed in the extension registry. -->
<!-- Extension number 123 is not listed in the extension registry. -->
<!-- Extension number 124 is not listed in the extension registry. -->
<!-- Extension number 125 is not listed in the extension registry. -->
<!-- Extension number 126 is not listed in the extension registry. -->
<!-- Extension number 128 is not listed in the extension registry. -->
<!-- Extension number 130 is not listed in the extension registry. -->
<!-- Extension number 131 is not listed in the extension registry. -->

<category name="GL_SGIX_async" number="132">
    <function name="AsyncMarkerSGIX" offset="?">
        <param name="marker" type="GLuint"/>
    </function>

    <function name="FinishAsyncSGIX" offset="?">
        <param name="markerp" type="GLuint *"/> <!-- Spec bug. Should be const. -->
        <return type="GLint"/>
    </function>

    <function name="PollAsyncSGIX" offset="?">
        <param name="markerp" type="GLuint *"/> <!-- Spec bug. Should be const. -->
        <return type="GLint"/>
    </function>

    <function name="GenAsyncMarkersSGIX" offset="?">
        <param name="range" type="GLsizei"/>
        <return type="GLuint"/>
    </function>

    <function name="DeleteAsyncMarkersSGIX" offset="?">
        <param name="marker" type="GLuint"/>
        <param name="range" type="GLsizei"/>
    </function>

    <function name="IsAsyncMarkerSGIX" offset="?">
        <param name="marker" type="GLuint"/>
        <return type="GLboolean"/>
    </function>
</category>

<category name="GL_INTEL_parallel_arrays" number="136">
    <function name="VertexPointervINTEL" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="pointer" type="const GLvoid **"/>
    </function>

    <function name="NormalPointervINTEL" offset="?">
        <param name="type" type="GLenum"/>
        <param name="pointer" type="const GLvoid **"/>
    </function>

    <function name="ColorPointervINTEL" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="pointer" type="const GLvoid **"/>
    </function>

    <function name="TexCoordPointervINTEL" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="pointer" type="const GLvoid **"/>
    </function>
</category>

<category name="GL_EXT_pixel_transform" number="138">
    <function name="PixelTransformParameteriEXT" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
    </function>

    <function name="PixelTransformParameterfEXT" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
    </function>

    <function name="PixelTransformParameterivEXT" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="PixelTransformParameterfvEXT" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>
</category>

<!-- Extension number 140 is not listed in the extension registry. -->
<!-- Extension number 142 is a GLX extension. -->
<!-- Extension number 143 is not listed in the extension registry. -->

<category name="GL_EXT_secondary_color" number="145">
    <function name="SecondaryColor3bEXT" offset="561" vectorequiv="SecondaryColor3bvEXT">
        <param name="red" type="GLbyte"/>
        <param name="green" type="GLbyte"/>
        <param name="blue" type="GLbyte"/>
    </function>

    <function name="SecondaryColor3bvEXT" offset="562">
        <param name="v" type="const GLbyte *" count="3"/>
        <glx rop="4126"/>
    </function>

    <function name="SecondaryColor3dEXT" offset="563" vectorequiv="SecondaryColor3dvEXT">
        <param name="red" type="GLdouble"/>
        <param name="green" type="GLdouble"/>
        <param name="blue" type="GLdouble"/>
    </function>

    <function name="SecondaryColor3dvEXT" offset="564">
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="4130"/>
    </function>

    <function name="SecondaryColor3fEXT" offset="565" vectorequiv="SecondaryColor3fvEXT">
        <param name="red" type="GLfloat"/>
        <param name="green" type="GLfloat"/>
        <param name="blue" type="GLfloat"/>
    </function>

    <function name="SecondaryColor3fvEXT" offset="566">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="4129"/>
    </function>

    <function name="SecondaryColor3iEXT" offset="567" vectorequiv="SecondaryColor3ivEXT">
        <param name="red" type="GLint"/>
        <param name="green" type="GLint"/>
        <param name="blue" type="GLint"/>
    </function>

    <function name="SecondaryColor3ivEXT" offset="568">
        <param name="v" type="const GLint *" count="3"/>
        <glx rop="4128"/>
    </function>

    <function name="SecondaryColor3sEXT" offset="569" vectorequiv="SecondaryColor3svEXT">
        <param name="red" type="GLshort"/>
        <param name="green" type="GLshort"/>
        <param name="blue" type="GLshort"/>
    </function>

    <function name="SecondaryColor3svEXT" offset="570">
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="4128"/>
    </function>

    <function name="SecondaryColor3ubEXT" offset="571" vectorequiv="SecondaryColor3ubvEXT">
        <param name="red" type="GLubyte"/>
        <param name="green" type="GLubyte"/>
        <param name="blue" type="GLubyte"/>
    </function>

    <function name="SecondaryColor3ubvEXT" offset="572">
        <param name="v" type="const GLubyte *" count="3"/>
        <glx rop="4131"/>
    </function>

    <function name="SecondaryColor3uiEXT" offset="573" vectorequiv="SecondaryColor3uivEXT">
        <param name="red" type="GLuint"/>
        <param name="green" type="GLuint"/>
        <param name="blue" type="GLuint"/>
    </function>

    <function name="SecondaryColor3uivEXT" offset="574">
        <param name="v" type="const GLuint *" count="3"/>
        <glx rop="4133"/>
    </function>

    <function name="SecondaryColor3usEXT" offset="575" vectorequiv="SecondaryColor3usvEXT">
        <param name="red" type="GLushort"/>
        <param name="green" type="GLushort"/>
        <param name="blue" type="GLushort"/>
    </function>

    <function name="SecondaryColor3usvEXT" offset="576">
        <param name="v" type="const GLushort *" count="3"/>
        <glx rop="4132"/>
    </function>

    <function name="SecondaryColorPointerEXT" offset="577">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>
</category>

<category name="GL_EXT_texture_perturb_normal" number="147">
    <function name="TextureNormalEXT" offset="?">
        <param name="mode" type="GLenum"/>
    </function>
</category>

<category name="GL_EXT_multi_draw_arrays" number="148">
    <function name="MultiDrawArraysEXT" offset="644">
        <param name="mode" type="GLenum"/>
        <param name="first" type="GLint *"/> <!-- Spec bug. Should be const. -->
        <param name="count" type="GLsizei *"/> <!-- Spec bug. Should be const. -->
        <param name="primcount" type="GLsizei"/>
        <glx handcode="true"/>
    </function>

    <function name="MultiDrawElementsEXT" offset="645">
        <param name="mode" type="GLenum"/>
        <param name="count" type="const GLsizei *"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid **"/>
        <param name="primcount" type="GLsizei"/>
        <glx handcode="true"/>
    </function>
</category>

<category name="GL_EXT_fog_coord" number="149">
    <function name="FogCoordfEXT" offset="545" vectorequiv="FogCoordfvEXT">
        <param name="coord" type="GLfloat"/>
    </function>

    <function name="FogCoordfvEXT" offset="546">
        <param name="coord" type="const GLfloat *" count="1"/>
        <glx rop="4124"/>
    </function>

    <function name="FogCoorddEXT" offset="547" vectorequiv="FogCoorddvEXT">
        <param name="coord" type="GLdouble"/>
    </function>

    <function name="FogCoorddvEXT" offset="548">
        <param name="coord" type="const GLdouble *" count="1"/>
        <glx rop="4125"/>
    </function>

    <function name="FogCoordPointerEXT" offset="549">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true"/>
    </function>
</category>

<!-- Extension number 150 is not listed in the extension registry. -->
<!-- Extension number 151 is not listed in the extension registry. -->
<!-- Extension number 152 is not listed in the extension registry. -->
<!-- Extension number 153 is not listed in the extension registry. -->
<!-- Extension number 154 is not listed in the extension registry. -->

<category name="GL_EXT_coordinate_frame" number="156">
    <function name="Tangent3bEXT" offset="?">
        <param name="tx" type="GLbyte"/>
        <param name="ty" type="GLbyte"/>
        <param name="tz" type="GLbyte"/>
    </function>

    <function name="Tangent3bvEXT" offset="?">
        <param name="v" type="const GLbyte *"/>
    </function>

    <function name="Tangent3dEXT" offset="?">
        <param name="tx" type="GLdouble"/>
        <param name="ty" type="GLdouble"/>
        <param name="tz" type="GLdouble"/>
    </function>

    <function name="Tangent3dvEXT" offset="?">
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="Tangent3fEXT" offset="?">
        <param name="tx" type="GLfloat"/>
        <param name="ty" type="GLfloat"/>
        <param name="tz" type="GLfloat"/>
    </function>

    <function name="Tangent3fvEXT" offset="?">
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Tangent3iEXT" offset="?">
        <param name="tx" type="GLint"/>
        <param name="ty" type="GLint"/>
        <param name="tz" type="GLint"/>
    </function>

    <function name="Tangent3ivEXT" offset="?">
        <param name="v" type="const GLint *"/>
    </function>

    <function name="Tangent3sEXT" offset="?">
        <param name="tx" type="GLshort"/>
        <param name="ty" type="GLshort"/>
        <param name="tz" type="GLshort"/>
    </function>

    <function name="Tangent3svEXT" offset="?">
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="Binormal3bEXT" offset="?">
        <param name="bx" type="GLbyte"/>
        <param name="by" type="GLbyte"/>
        <param name="bz" type="GLbyte"/>
    </function>

    <function name="Binormal3bvEXT" offset="?">
        <param name="v" type="const GLbyte *"/>
    </function>

    <function name="Binormal3dEXT" offset="?">
        <param name="bx" type="GLdouble"/>
        <param name="by" type="GLdouble"/>
        <param name="bz" type="GLdouble"/>
    </function>

    <function name="Binormal3dvEXT" offset="?">
        <param name="v" type="const GLdouble *"/>
    </function>

    <function name="Binormal3fEXT" offset="?">
        <param name="bx" type="GLfloat"/>
        <param name="by" type="GLfloat"/>
        <param name="bz" type="GLfloat"/>
    </function>

    <function name="Binormal3fvEXT" offset="?">
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Binormal3iEXT" offset="?">
        <param name="bx" type="GLint"/>
        <param name="by" type="GLint"/>
        <param name="bz" type="GLint"/>
    </function>

    <function name="Binormal3ivEXT" offset="?">
        <param name="v" type="const GLint *"/>
    </function>

    <function name="Binormal3sEXT" offset="?">
        <param name="bx" type="GLshort"/>
        <param name="by" type="GLshort"/>
        <param name="bz" type="GLshort"/>
    </function>

    <function name="Binormal3svEXT" offset="?">
        <param name="v" type="const GLshort *"/>
    </function>

    <function name="TangentPointerEXT" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
    </function>

    <function name="BinormalPointerEXT" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
    </function>
</category>

<!-- Extension number 157 is not listed in the extension registry. -->

<category name="GL_SGIX_pixel_texture" number="160">
    <function name="PixelTexGenSGIX" offset="430">
        <param name="mode" type="GLenum"/>
        <glx rop="2059" ignore="true"/>
    </function>
</category>

<!-- Extension number 161 is not listed in the extension registry. -->
<!-- Extension number 162 is not listed in the extension registry. -->

<category name="GL_SUNX_constant_data" number="163">
    <function name="FinishTextureSUNX" offset="?">
    </function>
</category>

<category name="GL_SUN_global_alpha" number="164">
    <function name="GlobalAlphaFactorbSUN" offset="?">
        <param name="factor" type="GLbyte"/>
    </function>

    <function name="GlobalAlphaFactorsSUN" offset="?">
        <param name="factor" type="GLshort"/>
    </function>

    <function name="GlobalAlphaFactoriSUN" offset="?">
        <param name="factor" type="GLint"/>
    </function>

    <function name="GlobalAlphaFactorfSUN" offset="?">
        <param name="factor" type="GLfloat"/>
    </function>

    <function name="GlobalAlphaFactordSUN" offset="?">
        <param name="factor" type="GLdouble"/>
    </function>

    <function name="GlobalAlphaFactorubSUN" offset="?">
        <param name="factor" type="GLubyte"/>
    </function>

    <function name="GlobalAlphaFactorusSUN" offset="?">
        <param name="factor" type="GLushort"/>
    </function>

    <function name="GlobalAlphaFactoruiSUN" offset="?">
        <param name="factor" type="GLuint"/>
    </function>
</category>

<category name="GL_SUN_triangle_list" number="165">
    <function name="ReplacementCodeuiSUN" offset="?">
        <param name="code" type="GLuint"/>
    </function>

    <function name="ReplacementCodeusSUN" offset="?">
        <param name="code" type="GLushort"/>
    </function>

    <function name="ReplacementCodeubSUN" offset="?">
        <param name="code" type="GLubyte"/>
    </function>

    <function name="ReplacementCodeuivSUN" offset="?">
        <param name="code" type="const GLuint *"/>
    </function>

    <function name="ReplacementCodeusvSUN" offset="?">
        <param name="code" type="const GLushort *"/>
    </function>

    <function name="ReplacementCodeubvSUN" offset="?">
        <param name="code" type="const GLubyte *"/>
    </function>

    <function name="ReplacementCodePointerSUN" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
    </function>
</category>

<category name="GL_SUN_vertex" number="166">
    <function name="Color4ubVertex2fSUN" offset="?">
        <param name="r" type="GLubyte"/>
        <param name="g" type="GLubyte"/>
        <param name="b" type="GLubyte"/>
        <param name="a" type="GLubyte"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
    </function>

    <function name="Color4ubVertex2fvSUN" offset="?">
        <param name="c" type="const GLubyte *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Color4ubVertex3fSUN" offset="?">
        <param name="r" type="GLubyte"/>
        <param name="g" type="GLubyte"/>
        <param name="b" type="GLubyte"/>
        <param name="a" type="GLubyte"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="Color4ubVertex3fvSUN" offset="?">
        <param name="c" type="const GLubyte *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Color3fVertex3fSUN" offset="?">
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="Color3fVertex3fvSUN" offset="?">
        <param name="c" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Normal3fVertex3fSUN" offset="?">
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="Normal3fVertex3fvSUN" offset="?">
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="Color4fNormal3fVertex3fSUN" offset="?">
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="a" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="Color4fNormal3fVertex3fvSUN" offset="?">
        <param name="c" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord2fVertex3fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="TexCoord2fVertex3fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord4fVertex4fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="p" type="GLfloat"/>
        <param name="q" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
    </function>

    <function name="TexCoord4fVertex4fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord2fColor4ubVertex3fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLubyte"/>
        <param name="g" type="GLubyte"/>
        <param name="b" type="GLubyte"/>
        <param name="a" type="GLubyte"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="TexCoord2fColor4ubVertex3fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="c" type="const GLubyte *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord2fColor3fVertex3fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="TexCoord2fColor3fVertex3fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord2fNormal3fVertex3fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="TexCoord2fNormal3fVertex3fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord2fColor4fNormal3fVertex3fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="a" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="TexCoord2fColor4fNormal3fVertex3fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="TexCoord4fColor4fNormal3fVertex4fSUN" offset="?">
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="p" type="GLfloat"/>
        <param name="q" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="a" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
    </function>

    <function name="TexCoord4fColor4fNormal3fVertex4fvSUN" offset="?">
        <param name="tc" type="const GLfloat *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiColor4ubVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="r" type="GLubyte"/>
        <param name="g" type="GLubyte"/>
        <param name="b" type="GLubyte"/>
        <param name="a" type="GLubyte"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiColor4ubVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="c" type="const GLubyte *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiColor3fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiColor3fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiNormal3fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiNormal3fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiColor4fNormal3fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="a" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiColor4fNormal3fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="tc" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="tc" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN" offset="?">
        <param name="rc" type="GLuint"/>
        <param name="s" type="GLfloat"/>
        <param name="t" type="GLfloat"/>
        <param name="r" type="GLfloat"/>
        <param name="g" type="GLfloat"/>
        <param name="b" type="GLfloat"/>
        <param name="a" type="GLfloat"/>
        <param name="nx" type="GLfloat"/>
        <param name="ny" type="GLfloat"/>
        <param name="nz" type="GLfloat"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN" offset="?">
        <param name="rc" type="const GLuint *"/>
        <param name="tc" type="const GLfloat *"/>
        <param name="c" type="const GLfloat *"/>
        <param name="n" type="const GLfloat *"/>
        <param name="v" type="const GLfloat *"/>
    </function>
</category>

<!-- Extension number 167 is a WGL extension. -->
<!-- Extension number 168 is a WGL extension. -->
<!-- Extension number 169 is a WGL extension. -->
<!-- Extension number 170 is a WGL extension. -->
<!-- Extension number 171 is a WGL extension. -->
<!-- Extension number 172 is a WGL extension. -->

<category name="GL_EXT_blend_func_separate" number="173">
    <function name="BlendFuncSeparateEXT" offset="537">
        <param name="sfactorRGB" type="GLenum"/>
        <param name="dfactorRGB" type="GLenum"/>
        <param name="sfactorAlpha" type="GLenum"/>
        <param name="dfactorAlpha" type="GLenum"/>
        <glx rop="4134"/>
    </function>
</category>

<!-- Extension number 177 is a WGL extension. -->
<!-- Extension number 180 is not listed in the extension registry. -->

<category name="GL_SUN_convolution_border_modes" number="182">
    <enum name="WRAP_BORDER_SUN"                          value="0x81D4"/>
</category>

<!-- Extension number 183 is a GLX extension. -->
<!-- Extension number 184 is not listed in the extension registry. -->

<category name="GL_EXT_texture_lod_bias" number="186">
    <enum name="TEXTURE_LOD_BIAS_EXT"                     value="0x8501">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<category name="GL_EXT_texture_filter_anisotropic" number="187">
    <enum name="TEXTURE_MAX_ANISOTROPY_EXT"               value="0x84FE">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="MAX_TEXTURE_MAX_ANISOTROPY_EXT"           value="0x84FF"/>
</category>

<category name="GL_EXT_vertex_weighting" number="188">
    <function name="VertexWeightfEXT" offset="494" vectorequiv="VertexWeightfvEXT">
        <param name="weight" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexWeightfvEXT" offset="495">
        <param name="weight" type="const GLfloat *" count="1"/>
        <glx rop="4135" ignore="true"/>
    </function>

    <function name="VertexWeightPointerEXT" offset="496">
        <param name="size" type="GLsizei"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true" ignore="true"/>
    </function>
</category>

<category name="GL_NV_vertex_array_range" number="190">
    <function name="FlushVertexArrayRangeNV" offset="497">
        <glx ignore="true"/>
    </function>

    <function name="VertexArrayRangeNV" offset="498">
        <param name="length" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_NV_register_combiners" number="191">
    <function name="CombinerParameterfvNV" offset="499">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *" variable_param="pname"/>
        <glx rop="4137" ignore="true"/>
    </function>

    <function name="CombinerParameterfNV" offset="500">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
        <glx rop="4136" ignore="true"/>
    </function>

    <function name="CombinerParameterivNV" offset="501">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="4139" ignore="true"/>
    </function>

    <function name="CombinerParameteriNV" offset="502">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLint"/>
        <glx rop="4138" ignore="true"/>
    </function>

    <function name="CombinerInputNV" offset="503">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="variable" type="GLenum"/>
        <param name="input" type="GLenum"/>
        <param name="mapping" type="GLenum"/>
        <param name="componentUsage" type="GLenum"/>
        <glx rop="4140" ignore="true"/>
    </function>

    <function name="CombinerOutputNV" offset="504">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="abOutput" type="GLenum"/>
        <param name="cdOutput" type="GLenum"/>
        <param name="sumOutput" type="GLenum"/>
        <param name="scale" type="GLenum"/>
        <param name="bias" type="GLenum"/>
        <param name="abDotProduct" type="GLboolean"/>
        <param name="cdDotProduct" type="GLboolean"/>
        <param name="muxSum" type="GLboolean"/>
        <glx rop="4141" ignore="true"/>
    </function>

    <function name="FinalCombinerInputNV" offset="505">
        <param name="variable" type="GLenum"/>
        <param name="input" type="GLenum"/>
        <param name="mapping" type="GLenum"/>
        <param name="componentUsage" type="GLenum"/>
        <glx rop="4142" ignore="true"/>
    </function>

    <function name="GetCombinerInputParameterfvNV" offset="506">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="variable" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1270" ignore="true"/>
    </function>

    <function name="GetCombinerInputParameterivNV" offset="507">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="variable" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1271" ignore="true"/>
    </function>

    <function name="GetCombinerOutputParameterfvNV" offset="508">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1272" ignore="true"/>
    </function>

    <function name="GetCombinerOutputParameterivNV" offset="509">
        <param name="stage" type="GLenum"/>
        <param name="portion" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1273" ignore="true"/>
    </function>

    <function name="GetFinalCombinerInputParameterfvNV" offset="510">
        <param name="variable" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1274" ignore="true"/>
    </function>

    <function name="GetFinalCombinerInputParameterivNV" offset="511">
        <param name="variable" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1275" ignore="true"/>
    </function>
</category>

<category name="GL_NV_fog_distance" number="192">
    <enum name="FOG_DISTANCE_MODE_NV"                     value="0x855A">
        <size name="Fogfv" count="1"/>
        <size name="Fogiv" count="1"/>
    </enum>
    <enum name="EYE_RADIAL_NV"                            value="0x855B"/>
    <enum name="EYE_PLANE_ABSOLUTE_NV"                    value="0x855C"/>
</category>

<category name="GL_NV_texture_env_combine4" number="195">
    <enum name="COMBINE4"                                 value="0x8503"/>
    <enum name="SOURCE3_RGB_NV"                           value="0x8583">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="SOURCE3_ALPHA_NV"                         value="0x858B">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND3_RGB_NV"                          value="0x8593">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
    <enum name="OPERAND3_ALPHA_NV"                        value="0x859B">
        <size name="TexEnvfv" count="1"/>
        <size name="TexEnviv" count="1"/>
    </enum>
</category>

<category name="GL_MESA_resize_buffers" number="196">
    <function name="ResizeBuffersMESA" offset="512">
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_MESA_window_pos" number="197">
    <function name="WindowPos2dMESA" offset="513">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2dvMESA" offset="514">
        <param name="v" type="const GLdouble *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2fMESA" offset="515">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2fvMESA" offset="516">
        <param name="v" type="const GLfloat *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2iMESA" offset="517">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2ivMESA" offset="518">
        <param name="v" type="const GLint *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2sMESA" offset="519">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos2svMESA" offset="520">
        <param name="v" type="const GLshort *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3dMESA" offset="521">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3dvMESA" offset="522">
        <param name="v" type="const GLdouble *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3fMESA" offset="523" vectorequiv="WindowPos3fvMESA">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
    </function>

    <function name="WindowPos3fvMESA" offset="524">
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="230"/>
    </function>

    <function name="WindowPos3iMESA" offset="525">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3ivMESA" offset="526">
        <param name="v" type="const GLint *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3sMESA" offset="527">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos3svMESA" offset="528">
        <param name="v" type="const GLshort *"/>
        <glx handcode="true"/>
    </function>

    <function name="WindowPos4dMESA" offset="529">
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4dvMESA" offset="530">
        <param name="v" type="const GLdouble *"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4fMESA" offset="531">
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4fvMESA" offset="532">
        <param name="v" type="const GLfloat *"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4iMESA" offset="533">
        <param name="x" type="GLint"/>
        <param name="y" type="GLint"/>
        <param name="z" type="GLint"/>
        <param name="w" type="GLint"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4ivMESA" offset="534">
        <param name="v" type="const GLint *"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4sMESA" offset="535">
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <param name="w" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="WindowPos4svMESA" offset="536">
        <param name="v" type="const GLshort *"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_IBM_multimode_draw_arrays" number="200">
    <function name="MultiModeDrawArraysIBM" offset="708">
        <param name="mode" type="const GLenum *"/>
        <param name="first" type="const GLint *"/>
        <param name="count" type="const GLsizei *"/>
        <param name="primcount" type="GLsizei"/>
        <param name="modestride" type="GLint"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="MultiModeDrawElementsIBM" offset="709">
        <param name="mode" type="const GLenum *"/>
        <param name="count" type="const GLsizei *"/>
        <param name="type" type="GLenum"/>
        <param name="indices" type="const GLvoid * const *"/>
        <param name="primcount" type="GLsizei"/>
        <param name="modestride" type="GLint"/>
        <glx handcode="true" ignore="true"/>
    </function>
</category>

<category name="GL_IBM_vertex_array_lists" number="201">
    <function name="ColorPointerListIBM" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="SecondaryColorPointerListIBM" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="EdgeFlagPointerListIBM" offset="?">
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLboolean **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="FogCoordPointerListIBM" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="IndexPointerListIBM" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="NormalPointerListIBM" offset="?">
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="TexCoordPointerListIBM" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>

    <function name="VertexPointerListIBM" offset="?">
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLint"/>
        <param name="pointer" type="const GLvoid **"/>
        <param name="ptrstride" type="GLint"/>
    </function>
</category>

<!-- Extension number 202 is not listed in the extension registry. -->
<!-- Extension number 203 is not listed in the extension registry. -->
<!-- Extension number 204 is not listed in the extension registry. -->
<!-- Extension number 205 is not listed in the extension registry. -->

<category name="GL_3DFX_tbuffer" number="208">
    <function name="TbufferMask3DFX" offset="553">
        <param name="mask" type="GLuint"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_EXT_multisample" number="209">
    <function name="SampleMaskEXT" alias="SampleMaskSGIS">
        <param name="value" type="GLclampf"/>
        <param name="invert" type="GLboolean"/>
    </function>

    <function name="SamplePatternEXT" alias="SamplePatternSGIS">
        <param name="pattern" type="GLenum"/>
    </function>
</category>

<!-- Extension number 211 is not listed in the extension registry. -->
<!-- Extension number 213 is not listed in the extension registry. -->

<category name="GL_SGIS_texture_color_mask" number="214">
    <enum name="TEXTURE_COLOR_WRITEMASK_SGIS"             value="0x81EF"/>

    <function name="TextureColorMaskSGIS" offset="?">
        <param name="red" type="GLboolean"/>
        <param name="green" type="GLboolean"/>
        <param name="blue" type="GLboolean"/>
        <param name="alpha" type="GLboolean"/>
        <glx rop="2082"/>
    </function>
</category>

<!-- Extension number 215 is a GLX extension. -->
<!-- Extension number 216 is a GLX extension. -->
<!-- Extension number 217 is a GLX extension. -->
<!-- Extension number 218 is a GLX extension. -->
<!-- Extension number 219 is not listed in the extension registry. -->

<category name="GL_EXT_texture_env_dot3" number="220">
    <enum name="DOT3_RGB_EXT"                             value="0x8740"/>
    <enum name="DOT3_RGBA_EXT"                            value="0x8741"/>
</category>

<category name="GL_ATI_texture_mirror_once" number="221">
    <enum name="MIRROR_CLAMP_ATI"                         value="0x8742"/>
    <enum name="MIRROR_CLAMP_TO_EDGE_ATI"                 value="0x8743"/>
</category>

<category name="GL_NV_fence" number="222">
    <function name="DeleteFencesNV" offset="647">
        <param name="n" type="GLsizei"/>
        <param name="fences" type="const GLuint *"/>
        <glx ignore="true"/>
    </function>

    <function name="GenFencesNV" offset="648">
        <param name="n" type="GLsizei"/>
        <param name="fences" type="GLuint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="IsFenceNV" offset="649">
        <param name="fence" type="GLuint"/>
        <return type="GLboolean"/>
        <glx ignore="true"/>
    </function>

    <function name="TestFenceNV" offset="650">
        <param name="fence" type="GLuint"/>
        <return type="GLboolean"/>
        <glx ignore="true"/>
    </function>

    <function name="GetFenceivNV" offset="651">
        <param name="fence" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx ignore="true"/>
    </function>

    <function name="FinishFenceNV" offset="652">
        <param name="fence" type="GLuint"/>
        <glx ignore="true"/>
    </function>

    <function name="SetFenceNV" offset="653">
        <param name="fence" type="GLuint"/>
        <param name="condition" type="GLenum"/>
        <glx ignore="true"/>
    </function>
</category>

<category name="GL_IBM_texture_mirrored_repeat" number="224">
    <enum name="MIRRORED_REPEAT_IBM"                      value="0x8370"/>
</category>

<category name="GL_NV_evaluators" number="225">
    <function name="MapControlPointsNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="type" type="GLenum"/>
        <param name="ustride" type="GLsizei"/>
        <param name="vstride" type="GLsizei"/>
        <param name="uorder" type="GLint"/>
        <param name="vorder" type="GLint"/>
        <param name="packed" type="GLboolean"/>
        <param name="points" type="const GLvoid *"/>
    </function>

    <function name="MapParameterivNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *"/>
    </function>

    <function name="MapParameterfvNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="GetMapControlPointsNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="type" type="GLenum"/>
        <param name="ustride" type="GLsizei"/>
        <param name="vstride" type="GLsizei"/>
        <param name="packed" type="GLboolean"/>
        <param name="points" type="GLvoid *" output="true"/>
    </function>

    <function name="GetMapParameterivNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetMapParameterfvNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
    </function>

    <function name="GetMapAttribParameterivNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
    </function>

    <function name="GetMapAttribParameterfvNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
    </function>

    <function name="EvalMapsNV" offset="?">
        <param name="target" type="GLenum"/>
        <param name="mode" type="GLenum"/>
    </function>
</category>

<category name="GL_NV_packed_depth_stencil" number="226">
    <enum name="DEPTH_STENCIL_NV"                         value="0x84F9"/>
    <enum name="UNSIGNED_INT_24_8_NV"                     value="0x84FA"/>
</category>

<category name="GL_NV_register_combiners2" number="227">
    <function name="CombinerStageParameterfvNV" offset="?">
        <param name="stage" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>

    <function name="GetCombinerStageParameterfvNV" offset="?">
        <param name="stage" type="GLenum"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
    </function>
</category>

<category name="GL_NV_texture_rectangle" number="229">
    <enum name="TEXTURE_RECTANGLE_NV"                     value="0x84F5"/>
    <enum name="TEXTURE_BINDING_RECTANGLE_NV"             value="0x84F6"/>
    <enum name="PROXY_TEXTURE_RECTANGLE_NV"               value="0x84F7"/>
    <enum name="MAX_RECTANGLE_TEXTURE_SIZE_NV"            value="0x84F8"/>
</category>

<category name="GL_NV_vertex_program" number="233">
    <function name="AreProgramsResidentNV" offset="578">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="ids" type="const GLuint *" count="n"/>
        <param name="residences" type="GLboolean *" output="true"/>
        <return type="GLboolean"/>
        <glx vendorpriv="1293" ignore="true"/>
    </function>

    <function name="BindProgramNV" offset="579">
        <param name="target" type="GLenum"/>
        <param name="id" type="GLuint"/>
        <glx rop="4108" ignore="true"/>
    </function>

    <function name="DeleteProgramsNV" offset="580">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="ids" type="const GLuint *" count="n"/>
        <glx vendorpriv="1294" ignore="true"/>
    </function>

    <function name="ExecuteProgramNV" offset="581">
        <param name="target" type="GLenum"/>
        <param name="id" type="GLuint"/>
        <param name="params" type="const GLfloat *" variable_param="target"/>
        <glx rop="4181" ignore="true"/>
    </function>

    <function name="GenProgramsNV" offset="582">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="GLuint *" output="true"/>
        <glx vendorpriv="1295" ignore="true"/>
    </function>

    <function name="GetProgramParameterdvNV" offset="583">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx vendorpriv="1297" ignore="true"/>
    </function>

    <function name="GetProgramParameterfvNV" offset="584">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1296" ignore="true"/>
    </function>

    <function name="GetProgramivNV" offset="585">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1307" ignore="true"/>
    </function>

    <function name="GetProgramStringNV" offset="586">
        <param name="id" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="program" type="GLubyte *" output="true"/>
        <glx vendorpriv="1308" handcode="true" ignore="true"/>
    </function>

    <function name="GetTrackMatrixivNV" offset="587">
        <param name="target" type="GLenum"/>
        <param name="address" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1300" ignore="true"/>
    </function>

    <function name="GetVertexAttribdvNV" offset="753">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx vendorpriv="1301" ignore="true"/>
    </function>

    <function name="GetVertexAttribfvNV" offset="754">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1302" ignore="true"/>
    </function>

    <function name="GetVertexAttribivNV" offset="755">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint *" output="true"/>
        <glx vendorpriv="1303" ignore="true"/>
    </function>

    <function name="GetVertexAttribPointervNV" offset="591">
        <param name="index" type="GLuint"/>
        <param name="pname" type="GLenum"/>
        <param name="pointer" type="GLvoid **" output="true"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="IsProgramNV" offset="592">
        <param name="id" type="GLuint"/>
        <return type="GLboolean"/>
        <glx vendorpriv="1304" ignore="true"/>
    </function>

    <function name="LoadProgramNV" offset="593">
        <param name="target" type="GLenum"/>
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei" counter="true"/>
        <param name="program" type="const GLubyte *" count="len"/>
        <glx rop="4183" ignore="true"/>
    </function>

    <function name="ProgramParameter4dNV" offset="594" vectorequiv="ProgramParameter4dvNV">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="ProgramParameter4dvNV" offset="595">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLdouble *" count="4"/>
        <glx rop="4185" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="ProgramParameter4fNV" offset="596" vectorequiv="ProgramParameter4fvNV">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="ProgramParameter4fvNV" offset="597">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="params" type="const GLfloat *" count="4"/>
        <glx rop="4184" ignore="true"/>
    </function>

    <function name="ProgramParameters4dvNV" offset="598">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="num" type="GLuint"/>
        <param name="params" type="const GLdouble *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'params' is 4*num.
        -->
        <glx rop="4187" handcode="true" ignore="true"/>
    </function>

    <function name="ProgramParameters4fvNV" offset="599">
        <param name="target" type="GLenum"/>
        <param name="index" type="GLuint"/>
        <param name="num" type="GLuint" counter="true"/>
        <param name="params" type="const GLfloat *" count="num"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'params' is 4*num.
        -->
        <glx rop="4186" handcode="true" ignore="true"/>
    </function>

    <function name="RequestResidentProgramsNV" offset="600">
        <param name="n" type="GLsizei"/>
        <param name="ids" type="const GLuint *"/>
        <glx rop="4182" handcode="true" ignore="true"/>
    </function>

    <function name="TrackMatrixNV" offset="601">
        <param name="target" type="GLenum"/>
        <param name="address" type="GLuint"/>
        <param name="matrix" type="GLenum"/>
        <param name="transform" type="GLenum"/>
        <glx rop="4188" ignore="true"/>
    </function>

    <function name="VertexAttribPointerNV" offset="602">
        <param name="index" type="GLuint"/>
        <param name="size" type="GLint"/>
        <param name="type" type="GLenum"/>
        <param name="stride" type="GLsizei"/>
        <param name="pointer" type="const GLvoid *"/>
        <glx handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttrib1dNV" offset="756" vectorequiv="VertexAttrib1dvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1dvNV" offset="757">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="1"/>
        <glx rop="4197" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="VertexAttrib1fNV" offset="758" vectorequiv="VertexAttrib1fvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1fvNV" offset="759">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="1"/>
        <glx rop="4193" ignore="true"/>
    </function>

    <function name="VertexAttrib1sNV" offset="760" vectorequiv="VertexAttrib1svNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib1svNV" offset="761">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="1"/>
        <glx rop="4189" ignore="true"/>
    </function>

    <function name="VertexAttrib2dNV" offset="762" vectorequiv="VertexAttrib2dvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2dvNV" offset="763">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="2"/>
        <glx rop="4198" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="VertexAttrib2fNV" offset="764" vectorequiv="VertexAttrib2fvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2fvNV" offset="765">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="2"/>
        <glx rop="4194" ignore="true"/>
    </function>

    <function name="VertexAttrib2sNV" offset="766" vectorequiv="VertexAttrib2svNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib2svNV" offset="767">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="2"/>
        <glx rop="4190" ignore="true"/>
    </function>

    <function name="VertexAttrib3dNV" offset="768" vectorequiv="VertexAttrib3dvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3dvNV" offset="769">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="3"/>
        <glx rop="4199" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="VertexAttrib3fNV" offset="770" vectorequiv="VertexAttrib3fvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3fvNV" offset="771">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="3"/>
        <glx rop="4195" ignore="true"/>
    </function>

    <function name="VertexAttrib3sNV" offset="772" vectorequiv="VertexAttrib3svNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib3svNV" offset="773">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="3"/>
        <glx rop="4191" ignore="true"/>
    </function>

    <function name="VertexAttrib4dNV" offset="774" vectorequiv="VertexAttrib4dvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4dvNV" offset="775">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLdouble *" count="4"/>
        <glx rop="4200" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="VertexAttrib4fNV" offset="776" vectorequiv="VertexAttrib4fvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4fvNV" offset="777">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLfloat *" count="4"/>
        <glx rop="4196" ignore="true"/>
    </function>

    <function name="VertexAttrib4sNV" offset="778" vectorequiv="VertexAttrib4svNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLshort"/>
        <param name="y" type="GLshort"/>
        <param name="z" type="GLshort"/>
        <param name="w" type="GLshort"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4svNV" offset="779">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLshort *" count="4"/>
        <glx rop="4192" ignore="true"/>
    </function>

    <function name="VertexAttrib4ubNV" offset="780" vectorequiv="VertexAttrib4ubvNV">
        <param name="index" type="GLuint"/>
        <param name="x" type="GLubyte"/>
        <param name="y" type="GLubyte"/>
        <param name="z" type="GLubyte"/>
        <param name="w" type="GLubyte"/>
        <glx ignore="true"/>
    </function>

    <function name="VertexAttrib4ubvNV" offset="781">
        <param name="index" type="GLuint"/>
        <param name="v" type="const GLubyte *" count="4"/>
        <glx rop="4201" ignore="true"/>
    </function>

    <function name="VertexAttribs1dvNV" offset="629">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="v" type="const GLdouble *" count="n"/>
        <glx rop="4210" doubles_in_order="true" ignore="true"/>
    </function>

    <function name="VertexAttribs1fvNV" offset="630">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="v" type="const GLfloat *" count="n"/>
        <glx rop="4206" ignore="true"/>
    </function>

    <function name="VertexAttribs1svNV" offset="631">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei" counter="true"/>
        <param name="v" type="const GLshort *" count="n"/>
        <glx rop="4202" ignore="true"/>
    </function>

    <function name="VertexAttribs2dvNV" offset="632">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLdouble *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 2*n.
        -->
        <glx rop="4211" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs2fvNV" offset="633">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLfloat *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 2*n.
        -->
        <glx rop="4207" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs2svNV" offset="634">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLshort *"/>
        <glx rop="4203" handcode="true" ignore="true"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 2*n.
        -->
    </function>

    <function name="VertexAttribs3dvNV" offset="635">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLdouble *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 3*n.
        -->
        <glx rop="4212" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs3fvNV" offset="636">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLfloat *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 3*n.
        -->
        <glx rop="4208" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs3svNV" offset="637">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLshort *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 3*n.
        -->
        <glx rop="4204" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs4dvNV" offset="638">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLdouble *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 4*n.
        -->
        <glx rop="4213" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs4fvNV" offset="639">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLfloat *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 4*n.
        -->
        <glx rop="4209" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs4svNV" offset="640">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLshort *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 4*n.
        -->
        <glx rop="4205" handcode="true" ignore="true"/>
    </function>

    <function name="VertexAttribs4ubvNV" offset="641">
        <param name="index" type="GLuint"/>
        <param name="n" type="GLsizei"/>
        <param name="v" type="const GLubyte *"/>

        <!-- This is hand coded because the number of array elements
             pointed to by 'v' is 4*n.
        -->
        <glx rop="4214" handcode="true" ignore="true"/>
    </function>
</category>

<!-- Extension number 234 is a GLX extension. -->

<category name="GL_SGIX_texture_coordinate_clamp" number="235">
    <enum name="TEXTURE_MAX_CLAMP_S_SGIX"                 value="0x8369">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_MAX_CLAMP_T_SGIX"                 value="0x836A">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
    <enum name="TEXTURE_MAX_CLAMP_R_SGIX"                 value="0x836B">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<!-- Extension number 236 is not listed in the extension registry. -->
<!-- Extension number 237 is a GLX extension. -->
<!-- Extension number 238 is a GLX extension. -->
<!-- Extension number 242 is a WGL extension. -->

<category name="GL_ATI_fragment_shader" number="245">
    <function name="GenFragmentShadersATI" offset="782">
      <return type="GLuint"/>
      <param name="range" type="GLuint"/>
      <glx ignore="true"/>
    </function>
    
    <function name="BindFragmentShaderATI" offset="783">
      <param name="id" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="DeleteFragmentShaderATI" offset="784">
      <param name="id" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="BeginFragmentShaderATI" offset="785">
      <glx ignore="true"/>
    </function>

    <function name="EndFragmentShaderATI" offset="786">
      <glx ignore="true"/>
    </function>
    
    <function name="PassTexCoordATI" offset="787">
      <param name="dst" type="GLuint"/>
      <param name="coord" type="GLuint"/>
      <param name="swizzle" type="GLenum"/>
      <glx ignore="true"/>
    </function>

    <function name="SampleMapATI" offset="788">
      <param name="dst" type="GLuint"/>
      <param name="interp" type="GLuint"/>
      <param name="swizzle" type="GLenum"/>
      <glx ignore="true"/>
    </function>

    <function name="ColorFragmentOp1ATI" offset="789">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMask" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="ColorFragmentOp2ATI" offset="790">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMask" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <param name="arg2" type="GLuint"/>
      <param name="arg2Rep" type="GLuint"/>
      <param name="arg2Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="ColorFragmentOp3ATI" offset="791">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMask" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <param name="arg2" type="GLuint"/>
      <param name="arg2Rep" type="GLuint"/>
      <param name="arg2Mod" type="GLuint"/>
      <param name="arg3" type="GLuint"/>
      <param name="arg3Rep" type="GLuint"/>
      <param name="arg3Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="AlphaFragmentOp1ATI" offset="792">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="AlphaFragmentOp2ATI" offset="793">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <param name="arg2" type="GLuint"/>
      <param name="arg2Rep" type="GLuint"/>
      <param name="arg2Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="AlphaFragmentOp3ATI" offset="794">
      <param name="op" type="GLenum"/>
      <param name="dst" type="GLuint"/>
      <param name="dstMod" type="GLuint"/>
      <param name="arg1" type="GLuint"/>
      <param name="arg1Rep" type="GLuint"/>
      <param name="arg1Mod" type="GLuint"/>
      <param name="arg2" type="GLuint"/>
      <param name="arg2Rep" type="GLuint"/>
      <param name="arg2Mod" type="GLuint"/>
      <param name="arg3" type="GLuint"/>
      <param name="arg3Rep" type="GLuint"/>
      <param name="arg3Mod" type="GLuint"/>
      <glx ignore="true"/>
    </function>

    <function name="SetFragmentShaderConstantATI" offset="795">
      <param name="dst" type="GLuint"/>
      <param name="value" type="const GLfloat *"/>
      <glx ignore="true"/>
    </function>
</category>

<!-- Extension number 250 is a WGL extension. -->
<!-- Extension number 251 is a WGL extension. -->
<!-- Extension number 252 is a WGL extension. -->
<!-- Extension number 253 is a WGL extension. -->
<!-- Extension number 254 is a WGL extension. -->
<!-- Extension number 255 is a WGL extension. -->

<category name="GL_SUN_mesh_array" number="257">
    <enum name="QUAD_MESH_SUN"                            value="0x8614"/>
    <enum name="TRIANGLE_MESH_SUN"                        value="0x8615"/>

    <function name="DrawMeshArraysSUN" offset="?">
        <param name="mode" type="GLenum"/>
        <param name="first" type="GLint"/>
        <param name="count" type="GLsizei"/>
        <param name="width" type="GLsizei"/>
    </function>
</category>

<category name="GL_NV_point_sprite" number="262">
    <!-- These existing enums can be passed as a parameter to the function
         added for this extension. -->

    <enum name="POINT_SIZE_MIN_EXT"                       value="0x8126">
        <size name="PointParameterivNV" count="1"/>
    </enum>
    <enum name="POINT_SIZE_MAX_EXT"                       value="0x8127">
        <size name="PointParameterivNV" count="1"/>
    </enum>
    <enum name="POINT_FADE_THRESHOLD_SIZE_EXT"            value="0x8128">
        <size name="PointParameterivNV" count="1"/>
    </enum>
    <enum name="POINT_DISTANCE_ATTENUATION_EXT"           value="0x8129">
        <size name="PointParameterivNV" count="3"/>
    </enum>

    <enum name="POINT_SPRITE_R_MODE_NV"                   value="0x8863	">
        <size name="PointParameterfvEXT" count="1"/>
        <size name="PointParameterivNV" count="1"/>
    </enum>

    <function name="PointParameteriNV" offset="642">
        <param name="pname" type="GLenum"/>
        <param name="params" type="GLint"/>
        <glx rop="4221"/>
    </function>

    <function name="PointParameterivNV" offset="643">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLint *" variable_param="pname"/>
        <glx rop="4222"/>
    </function>
</category>

<!-- Extension number 263 is a WGL extension. -->
<!-- Extension number 264 is a WGL extension. -->

<category name="EXT_stencil_two_side" number="268">
    <function name="ActiveStencilFaceEXT" offset="646">
        <param name="face" type="GLenum"/>
        <glx rop="4220"/>
    </function>
</category>

<category name="GL_ATI_draw_buffers" number="277">
    <function name="DrawBuffersATI" alias="DrawBuffersARB">
        <param name="n" type="GLsizei" counter="true"/>
        <param name="bufs" type="const GLenum *" count="n"/>
	<!-- GLX protocol is not fully defined for this extension. -->
    </function>
</category>

<!-- Extension number 278 is a WGL extension. -->

<category name="GL_NV_fragment_program" number="282">
    <function name="ProgramNamedParameter4fNV" offset="682" vectorequiv="ProgramNamedParameter4fvNV">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *"/>
        <param name="x" type="GLfloat"/>
        <param name="y" type="GLfloat"/>
        <param name="z" type="GLfloat"/>
        <param name="w" type="GLfloat"/>
        <glx rop="4218" handcode="true" ignore="true"/>
    </function>

    <function name="ProgramNamedParameter4dNV" offset="683" vectorequiv="ProgramNamedParameter4dvNV">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *" variable_param="len"/>
        <param name="x" type="GLdouble"/>
        <param name="y" type="GLdouble"/>
        <param name="z" type="GLdouble"/>
        <param name="w" type="GLdouble"/>
        <glx ignore="true"/>
    </function>

    <function name="ProgramNamedParameter4fvNV" offset="684">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *"/>
        <param name="v" type="const GLfloat *"/>
        <glx rop="4218" handcode="true" ignore="true"/>
    </function>

    <function name="ProgramNamedParameter4dvNV" offset="685">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *"/>
        <param name="v" type="const GLdouble *"/>
        <glx rop="4219" handcode="true" ignore="true"/>
    </function>

    <function name="GetProgramNamedParameterfvNV" offset="686">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *"/>
        <param name="params" type="GLfloat *" output="true"/>
        <glx vendorpriv="1310" handcode="true" ignore="true"/>
    </function>

    <function name="GetProgramNamedParameterdvNV" offset="687">
        <param name="id" type="GLuint"/>
        <param name="len" type="GLsizei"/>
        <param name="name" type="const GLubyte *"/>
        <param name="params" type="GLdouble *" output="true"/>
        <glx vendorpriv="1311" handcode="true" ignore="true"/>
    </function>
</category>

<category name="GL_NV_expand_normal" number="286">
    <enum name="TEXTURE_UNSIGNED_REMAP_MODE_NV"           value="0x888F">
        <size name="TexParameterfv" count="1"/>
        <size name="TexParameteriv" count="1"/>
    </enum>
</category>

<category name="GL_OES_read_format" number="295">
    <enum name="IMPLEMENTATION_COLOR_READ_TYPE_OES"       value="0x8B9A"/>
    <enum name="IMPLEMENTATION_COLOR_READ_FORMAT_OES"     value="0x8B9B"/>
</category>

<category name="GL_EXT_depth_bounds_test" number="297">
    <function name="DepthBoundsEXT" offset="699">
        <param name="zmin" type="GLclampd"/>
        <param name="zmax" type="GLclampd"/>
        <glx rop="4229" ignore="true"/>
    </function>
</category>

<category name="GL_EXT_texture_mirror_clamp" number="298">
    <enum name="MIRROR_CLAMP_EXT"                         value="0x8742"/>
    <enum name="MIRROR_CLAMP_TO_EDGE_EXT"                 value="0x8743"/>
    <enum name="MIRROR_CLAMP_TO_BORDER_EXT"               value="0x8912"/>
</category>

<category name="GL_EXT_blend_equation_separate" number="299">
    <function name="BlendEquationSeparateEXT" offset="710">
        <param name="modeRGB" type="GLenum"/>
        <param name="modeA" type="GLenum"/>
        <glx rop="4228" ignore="true"/>
    </function>
</category>

<category name="GL_EXT_pixel_buffer_object" number="302">
    <enum name="PIXEL_PACK_BUFFER_EXT"                    value="0x88EB"/>
    <enum name="PIXEL_UNPACK_BUFFER_EXT"                  value="0x88EC"/>
    <enum name="PIXEL_PACK_BUFFER_BINDING_EXT"            value="0x88ED"/>
    <enum name="PIXEL_UNPACK_BUFFER_BINDING_EXT"          value="0x88EF"/>
</category>

<!-- Unnumbered extensions sorted by name. -->

<category name="GL_ATI_blend_equation_separate">
    <function name="BlendEquationSeparateATI" alias="BlendEquationSeparateEXT">
        <param name="modeRGB" type="GLenum"/>
        <param name="modeA" type="GLenum"/>
    </function>
</category>

<category name="GL_INGR_blend_func_separate">
    <function name="BlendFuncSeparateINGR" alias="BlendFuncSeparateEXT">
        <param name="sfactorRGB" type="GLenum"/>
        <param name="dfactorRGB" type="GLenum"/>
        <param name="sfactorAlpha" type="GLenum"/>
        <param name="dfactorAlpha" type="GLenum"/>
    </function>
</category>

<category name="GL_SGIS_point_parameters">
    <enum name="POINT_SIZE_MIN_SGIS"                      value="0x8126">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_SIZE_MAX_SGIS"                      value="0x8127">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_FADE_THRESHOLD_SIZE_SGIS"           value="0x8128">
        <size name="PointParameterfvEXT" count="1"/>
    </enum>
    <enum name="POINT_DISTANCE_ATTENUATION_SGIS"          value="0x8129">
        <size name="PointParameterfvEXT" count="3"/>
    </enum>

    <function name="PointParameterfSGIS" alias="PointParameterfEXT">
        <param name="pname" type="GLenum"/>
        <param name="param" type="GLfloat"/>
    </function>

    <function name="PointParameterfvSGIS" alias="PointParameterfvEXT">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLfloat *"/>
    </function>
</category>

<category name="GL_SGIX_igloo_interface">
    <function name="IglooInterfaceSGIX" offset="?">
        <param name="pname" type="GLenum"/>
        <param name="params" type="const GLvoid *"/>
    </function>
</category>

<category name="GL_SGIX_polynomial_ffd">
    <function name="DeformationMap3dSGIX" offset="?">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLdouble"/>
        <param name="u2" type="GLdouble"/>
        <param name="ustride" type="GLint"/>
        <param name="uorder" type="GLint"/>
        <param name="v1" type="GLdouble"/>
        <param name="v2" type="GLdouble"/>
        <param name="vstride" type="GLint"/>
        <param name="vorder" type="GLint"/>
        <param name="w1" type="GLdouble"/>
        <param name="w2" type="GLdouble"/>
        <param name="wstride" type="GLint"/>
        <param name="worder" type="GLint"/>
        <param name="points" type="const GLdouble *"/>
    </function>

    <function name="DeformationMap3fSGIX" offset="?">
        <param name="target" type="GLenum"/>
        <param name="u1" type="GLfloat"/>
        <param name="u2" type="GLfloat"/>
        <param name="ustride" type="GLint"/>
        <param name="uorder" type="GLint"/>
        <param name="v1" type="GLfloat"/>
        <param name="v2" type="GLfloat"/>
        <param name="vstride" type="GLint"/>
        <param name="vorder" type="GLint"/>
        <param name="w1" type="GLfloat"/>
        <param name="w2" type="GLfloat"/>
        <param name="wstride" type="GLint"/>
        <param name="worder" type="GLint"/>
        <param name="points" type="const GLfloat *"/>
    </function>

    <function name="DeformSGIX" offset="?">
        <param name="mask" type="GLenum"/>
    </function>

    <function name="LoadIdentityDeformationMapSGIX" offset="?">
        <param name="mask" type="GLenum"/>
    </function>
</category>

</OpenGLAPI>
