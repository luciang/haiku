## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libm4 --source-base=lib --m4-base=m4 --doc-base=doc --aux-dir=. --no-libtool --macro-prefix=M4 avltree-oset binary-io clean-temp cloexec close-stream closeout config-h error fdl fopen-safer free gendocs getopt gnupload mkstemp obstack regex stdbool stdlib-safer strstr strtol unlocked-io verror xalloc xvasprintf

AUTOMAKE_OPTIONS = 1.5 gnits

noinst_LIBRARIES = libm4.a

libm4_a_SOURCES =
libm4_a_LIBADD = $(M4_LIBOBJS)
libm4_a_DEPENDENCIES = $(M4_LIBOBJS)
EXTRA_libm4_a_SOURCES =
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module alloca


EXTRA_DIST += alloca.c

EXTRA_libm4_a_SOURCES += alloca.c

libm4_a_LIBADD += @ALLOCA@
libm4_a_DEPENDENCIES += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/alloca_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

EXTRA_DIST += alloca_.h

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libm4_a_SOURCES += allocsa.h allocsa.c

EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module avltree-oset

libm4_a_SOURCES += gl_avltree_oset.h gl_avltree_oset.c gl_anytree_oset.h

## end   gnulib module avltree-oset

## begin gnulib module binary-io

libm4_a_SOURCES += binary-io.h

## end   gnulib module binary-io

## begin gnulib module clean-temp

libm4_a_SOURCES += clean-temp.h clean-temp.c

## end   gnulib module clean-temp

## begin gnulib module cloexec


EXTRA_DIST += cloexec.c cloexec.h

EXTRA_libm4_a_SOURCES += cloexec.c

## end   gnulib module cloexec

## begin gnulib module close-stream


EXTRA_DIST += close-stream.c close-stream.h

EXTRA_libm4_a_SOURCES += close-stream.c

## end   gnulib module close-stream

## begin gnulib module closeout


EXTRA_DIST += closeout.c closeout.h

EXTRA_libm4_a_SOURCES += closeout.c

## end   gnulib module closeout

## begin gnulib module error


EXTRA_DIST += error.c error.h

EXTRA_libm4_a_SOURCES += error.c

## end   gnulib module error

## begin gnulib module exit

libm4_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail


EXTRA_DIST += exitfail.c exitfail.h

EXTRA_libm4_a_SOURCES += exitfail.c

## end   gnulib module exitfail

## begin gnulib module fatal-signal

libm4_a_SOURCES += fatal-signal.h fatal-signal.c

## end   gnulib module fatal-signal

## begin gnulib module fopen-safer


EXTRA_DIST += fopen-safer.c stdio--.h stdio-safer.h

EXTRA_libm4_a_SOURCES += fopen-safer.c

## end   gnulib module fopen-safer

## begin gnulib module fpending


EXTRA_DIST += __fpending.c __fpending.h

EXTRA_libm4_a_SOURCES += __fpending.c

## end   gnulib module fpending

## begin gnulib module free


EXTRA_DIST += free.c

EXTRA_libm4_a_SOURCES += free.c

## end   gnulib module free

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)

# We need the following in order to create <getopt.h> when the system
# doesn't have one that works with the given compiler.
getopt.h: getopt_.h
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  cat $(srcdir)/getopt_.h; \
	} > $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

EXTRA_DIST += getopt.c getopt1.c getopt_.h getopt_int.h

EXTRA_libm4_a_SOURCES += getopt.c getopt1.c

## end   gnulib module getopt

## begin gnulib module gettext-h

libm4_a_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module linkedhash-list

libm4_a_SOURCES += gl_linkedhash_list.h gl_linkedhash_list.c gl_anyhash_list1.h gl_anyhash_list2.h gl_anylinked_list1.h gl_anylinked_list2.h

## end   gnulib module linkedhash-list

## begin gnulib module list

libm4_a_SOURCES += gl_list.h gl_list.c

## end   gnulib module list

## begin gnulib module malloc


EXTRA_DIST += malloc.c

EXTRA_libm4_a_SOURCES += malloc.c

## end   gnulib module malloc

## begin gnulib module mbchar


EXTRA_DIST += mbchar.c mbchar.h

EXTRA_libm4_a_SOURCES += mbchar.c

## end   gnulib module mbchar

## begin gnulib module mbuiter

libm4_a_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module memchr


EXTRA_DIST += memchr.c

EXTRA_libm4_a_SOURCES += memchr.c

## end   gnulib module memchr

## begin gnulib module mkdtemp


EXTRA_DIST += mkdtemp.c mkdtemp.h

EXTRA_libm4_a_SOURCES += mkdtemp.c

## end   gnulib module mkdtemp

## begin gnulib module mkstemp


EXTRA_DIST += mkstemp.c mkstemp.h

EXTRA_libm4_a_SOURCES += mkstemp.c

## end   gnulib module mkstemp

## begin gnulib module obstack


EXTRA_DIST += obstack.c obstack.h

EXTRA_libm4_a_SOURCES += obstack.c

## end   gnulib module obstack

## begin gnulib module oset

libm4_a_SOURCES += gl_oset.h gl_oset.c

## end   gnulib module oset

## begin gnulib module pathmax


EXTRA_DIST += pathmax.h

## end   gnulib module pathmax

## begin gnulib module quotearg


EXTRA_DIST += quotearg.c quotearg.h

EXTRA_libm4_a_SOURCES += quotearg.c

## end   gnulib module quotearg

## begin gnulib module regex


EXTRA_DIST += regcomp.c regex.c regex.h regex_internal.c regex_internal.h regexec.c

EXTRA_libm4_a_SOURCES += regcomp.c regex.c regex_internal.c regexec.c

## end   gnulib module regex

## begin gnulib module sigprocmask


EXTRA_DIST += sigprocmask.c sigprocmask.h

EXTRA_libm4_a_SOURCES += sigprocmask.c

## end   gnulib module sigprocmask

## begin gnulib module size_max

libm4_a_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

EXTRA_DIST += stdbool_.h

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	      -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	      -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	      -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	      -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	      -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	      -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	      -e 's/@''HAVE_UNSIGNED_LONG_LONG_INT''@/$(HAVE_UNSIGNED_LONG_LONG_INT)/g' \
	      -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	      -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	      -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	      -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	      -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	      -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	      -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	      -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	      -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	      -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	      < $(srcdir)/stdint_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

EXTRA_DIST += stdint_.h

## end   gnulib module stdint

## begin gnulib module stdlib-safer


EXTRA_DIST += mkstemp-safer.c stdlib--.h stdlib-safer.h

EXTRA_libm4_a_SOURCES += mkstemp-safer.c

## end   gnulib module stdlib-safer

## begin gnulib module strcase


EXTRA_DIST += strcase.h strcasecmp.c strncasecmp.c

EXTRA_libm4_a_SOURCES += strcasecmp.c strncasecmp.c

## end   gnulib module strcase

## begin gnulib module strnlen1

libm4_a_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strstr


EXTRA_DIST += strstr.c strstr.h

EXTRA_libm4_a_SOURCES += strstr.c

## end   gnulib module strstr

## begin gnulib module strtol


EXTRA_DIST += strtol.c

EXTRA_libm4_a_SOURCES += strtol.c

## end   gnulib module strtol

## begin gnulib module sys_stat

BUILT_SOURCES += $(SYS_STAT_H)

# We need the following in order to create <sys/stat.h> when the system
# has one that is incomplete.
sys/stat.h: stat_.h
	test -d sys || mkdir sys
	rm -f $@-t $@
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  sed -e 's|@''ABSOLUTE_SYS_STAT_H''@|$(ABSOLUTE_SYS_STAT_H)|g' \
	      < $(srcdir)/stat_.h; \
	} > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/stat.h sys/stat.h-t
MOSTLYCLEANDIRS += sys

EXTRA_DIST += stat_.h

## end   gnulib module sys_stat

## begin gnulib module tempname


EXTRA_DIST += tempname.c tempname.h

EXTRA_libm4_a_SOURCES += tempname.c

## end   gnulib module tempname

## begin gnulib module tmpdir

libm4_a_SOURCES += tmpdir.h tmpdir.c

## end   gnulib module tmpdir

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	{ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '/* Empty placeholder for $@.  */'; \
	} > $@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module unistd-safer


EXTRA_DIST += dup-safer.c fd-safer.c pipe-safer.c unistd--.h unistd-safer.h

EXTRA_libm4_a_SOURCES += dup-safer.c fd-safer.c pipe-safer.c

## end   gnulib module unistd-safer

## begin gnulib module unlocked-io


EXTRA_DIST += unlocked-io.h

## end   gnulib module unlocked-io

## begin gnulib module vasnprintf


EXTRA_DIST += asnprintf.c printf-args.c printf-args.h printf-parse.c printf-parse.h vasnprintf.c vasnprintf.h

EXTRA_libm4_a_SOURCES += asnprintf.c printf-args.c printf-parse.c vasnprintf.c

## end   gnulib module vasnprintf

## begin gnulib module vasprintf


EXTRA_DIST += asprintf.c vasprintf.c vasprintf.h

EXTRA_libm4_a_SOURCES += asprintf.c vasprintf.c

## end   gnulib module vasprintf

## begin gnulib module verify

libm4_a_SOURCES += verify.h

## end   gnulib module verify

## begin gnulib module verror

libm4_a_SOURCES += verror.h verror.c

## end   gnulib module verror

## begin gnulib module wcwidth

libm4_a_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xalloc


EXTRA_DIST += xalloc.h xmalloc.c

EXTRA_libm4_a_SOURCES += xmalloc.c

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libm4_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xallocsa

libm4_a_SOURCES += xallocsa.h xallocsa.c

## end   gnulib module xallocsa

## begin gnulib module xsize

libm4_a_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module xvasprintf

libm4_a_SOURCES += xvasprintf.h xvasprintf.c xasprintf.c

EXTRA_DIST += xalloc.h

## end   gnulib module xvasprintf


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done
