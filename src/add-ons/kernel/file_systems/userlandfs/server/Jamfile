SubDir HAIKU_TOP src add-ons kernel file_systems userlandfs server ;

local userlandFSTop = [ FDirName $(HAIKU_TOP) src add-ons kernel
	file_systems userlandfs ] ;
local userlandFSIncludes = [ PrivateHeaders userlandfs ] ;

SubDirSysHdrs [ FDirName $(userlandFSIncludes) ] ;
SubDirHdrs [ FDirName $(userlandFSIncludes) private ] ;
SubDirHdrs [ FDirName $(userlandFSIncludes) shared ] ;

SEARCH_SOURCE += [ FDirName $(userlandFSTop) private ] ;
SEARCH_SOURCE += [ FDirName $(userlandFSTop) shared ] ;

DEFINES += USER=1 ;
DEFINES += DEBUG_APP="\\\"UserlandFSServer\\\"" ;
DEFINES += BUILDING_USERLAND_FS_SERVER=1 ;

Application UserlandFSServer
	: AreaSupport.cpp
	  Debug.cpp
	  DispatcherDefs.cpp
	  driver_settings.c
	  LazyInitializable.cpp
	  Locker.cpp
	  ObjectTracker.cpp
	  Port.cpp
	  Referencable.cpp
	  Request.cpp
	  RequestAllocator.cpp
	  RequestHandler.cpp
	  RequestPort.cpp
	  Requests.cpp
	  SingleReplyRequestHandler.cpp
	  String.cpp

#	  beos_fs_cache.c

#	  beos_lock.cpp
#	  BeOSKernelFileSystem.cpp
#	  BeOSKernelVolume.cpp
	  DispatcherFileSystem.cpp
	  FileSystem.cpp
#	  haiku_block_cache.cpp
#	  haiku_file_cache.cpp
	  haiku_hash.cpp
	  haiku_lock.cpp
	  HaikuKernelFileSystem.cpp
	  HaikuKernelVolume.cpp
	  kernel_emu.cpp
	  main.cpp
	  RequestThread.cpp
	  ServerDefs.cpp
	  UserlandFSDispatcher.cpp
	  UserlandFSServer.cpp
	  UserlandRequestHandler.cpp
	  Volume.cpp
	: be
;

# the library providing the BeOS kernel interface for add-ons
SharedLibrary libuserlandfs_beos_kernel.so
	: beos_kernel_emu.cpp
	: <nogrist>UserlandFSServer
;

# the library providing the Haiku kernel interface for add-ons
SharedLibrary libuserlandfs_haiku_kernel.so
	: haiku_kernel_emu.cpp
	: <nogrist>UserlandFSServer
;
