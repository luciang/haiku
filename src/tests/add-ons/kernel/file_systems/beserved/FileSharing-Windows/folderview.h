#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFolderview wrapper class

class CFolderview : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFolderview)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xFBF52F2D, 0x9B93, 0x11D2, { 0xB4, 0x82, 0x0, 0x20, 0xAF, 0xD6, 0x9D, 0xE6 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:
enum
{
    Flat = 0,
    ThreeD = 1
}AppearanceConstants;
enum
{
    None = 0,
    FixedSingle = 1
}BorderStyleConstants;
enum
{
    AllAttributes = -1,
    CapabilityAttributes = 375,
    DisplayAttributes = 983040,
    ContentsAttributes = -2147483648,
    MiscellaneousAttributes = -1048576
}AttributesMask;
enum
{
    CanCopy = 1,
    CanMove = 2,
    CanLink = 4,
    CanRename = 16,
    CanDelete = 32,
    HasPropSheet = 64,
    DropTarget = 256,
    Shortcut = 65536,
    Share = 131072,
    ReadOnly = 262144,
    Hidden = 524288,
    HasSubfolder = -2147483648,
    IsFileSysAncestor = 268435456,
    IsFolder = 536870912,
    IsFileSystem = 1073741824,
    Validate = 16777216,
    Removable = 33554432,
    IsCompressed = 67108864,
    IsBrowsable = 134217728,
    NonEnumerated = 1048576,
    NewContent = 2097152
}AttributesEnum;
enum
{
    Desktop = 0,
    Internet = 1,
    Programs = 2,
    ControlPanel = 3,
    Printers = 4,
    Personal = 5,
    Favorites = 6,
    Startup = 7,
    Recent = 8,
    SendTo = 9,
    Recycled = 10,
    StartMenu = 11,
    DesktopDir = 16,
    MyComputer = 17,
    Network = 18,
    NetHood = 19,
    Fonts = 20,
    Templates = 21,
    CommonStartMenu = 22,
    CommonPrograms = 23,
    CommonStartup = 24,
    CommonDesktopDir = 25,
    AppData = 26,
    PrintHood = 27,
    AltStartup = 29,
    CommonAltStartup = 30,
    CommonFavorites = 31,
    InternetCache = 32,
    Cookies = 33,
    History = 34
}SpecialFolderPathConstants;


// Operations
public:

// IFolderView

// Functions
//

void put_BackColor(unsigned long newValue)
{
	static BYTE parms[] = VTS_UI4 ;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned long get_BackColor()
{
	unsigned long result;
	InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_UI4, (void*)&result, NULL);
	return result;
}
void put_ForeColor(unsigned long newValue)
{
	static BYTE parms[] = VTS_UI4 ;
	InvokeHelper(DISPID_FORECOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
unsigned long get_ForeColor()
{
	unsigned long result;
	InvokeHelper(DISPID_FORECOLOR, DISPATCH_PROPERTYGET, VT_UI4, (void*)&result, NULL);
	return result;
}
long get_Appearance()
{
	long result;
	InvokeHelper(DISPID_APPEARANCE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_Appearance(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(DISPID_APPEARANCE, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_BorderStyle()
{
	long result;
	InvokeHelper(DISPID_BORDERSTYLE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_BorderStyle(long newValue)
{
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(DISPID_BORDERSTYLE, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_HasLines()
{
	BOOL result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_HasLines(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_HasButtons()
{
	BOOL result;
	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_HasButtons(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_HasLinesAtRoot()
{
	BOOL result;
	InvokeHelper(0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_HasLinesAtRoot(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x3, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_ShowSelAlways()
{
	BOOL result;
	InvokeHelper(0x4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_ShowSelAlways(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x4, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
VARIANT get_Folders()
{
	VARIANT result;
	InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}
BOOL get_HasCheckBoxes()
{
	BOOL result;
	InvokeHelper(0x5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_HasCheckBoxes(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_DisplayShareName()
{
	BOOL result;
	InvokeHelper(0x7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_DisplayShareName(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_FoldersCheck()
{
	LPDISPATCH result;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
BOOL get_OverlayIcons()
{
	BOOL result;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_OverlayIcons(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_SpecialFolderPath(long specialFolder)
{
	CString result;
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0xa, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms, specialFolder);
	return result;
}
VARIANT get_SelectedFolder()
{
	VARIANT result;
	InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_VARIANT, (void*)&result, NULL);
	return result;
}
void put_SelectedFolder(VARIANT newValue)
{
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, &newValue);
}
BOOL get_EnableShellMenu()
{
	BOOL result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_EnableShellMenu(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
BOOL get_AutoUpdate()
{
	BOOL result;
	InvokeHelper(0xf, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_AutoUpdate(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_VisibleCount()
{
	long result;
	InvokeHelper(0x10, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
LPDISPATCH get_HitTest(long X, long Y)
{
	LPDISPATCH result;
	static BYTE parms[] = VTS_I4 VTS_I4 ;
	InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, parms, X, Y);
	return result;
}
BOOL get_HiddenFolders()
{
	BOOL result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_HiddenFolders(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x12, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_FirstVisibleFolder()
{
	LPDISPATCH result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
void put_FirstVisibleFolder(LPDISPATCH newValue)
{
	static BYTE parms[] = VTS_DISPATCH ;
	InvokeHelper(0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
void Refresh()
{
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
void EnsureVisible(VARIANT newVal)
{
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, parms, &newVal);
}
BOOL get_Enabled()
{
	BOOL result;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_Enabled(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Folder(VARIANT anPath)
{
	LPDISPATCH result;
	static BYTE parms[] = VTS_VARIANT ;
	InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, parms, &anPath);
	return result;
}
BOOL get_IconsVisible()
{
	BOOL result;
	InvokeHelper(0x15, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_IconsVisible(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x15, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Header()
{
	LPDISPATCH result;
	InvokeHelper(0x16, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
CString get_Version()
{
	CString result;
	InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_Version(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
CString get_ExploreFromHere()
{
	CString result;
	InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_ExploreFromHere(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
void About()
{
	InvokeHelper(0x19, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
CString get_LicenseKey()
{
	CString result;
	InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}
void put_LicenseKey(LPCTSTR newValue)
{
	static BYTE parms[] = VTS_BSTR ;
	InvokeHelper(0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_DropFilesCount()
{
	long result;
	InvokeHelper(0x1b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
CString get_DropFilesPathName(long nIndex)
{
	CString result;
	static BYTE parms[] = VTS_I4 ;
	InvokeHelper(0x1c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms, nIndex);
	return result;
}
BOOL get_AllowDropFiles()
{
	BOOL result;
	InvokeHelper(0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}
void put_AllowDropFiles(BOOL newValue)
{
	static BYTE parms[] = VTS_BOOL ;
	InvokeHelper(0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
long get_hwnd()
{
	long result;
	InvokeHelper(DISPID_HWND, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}
void put_Font(LPDISPATCH newValue)
{
	static BYTE parms[] = VTS_DISPATCH ;
	InvokeHelper(DISPID_FONT, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms, newValue);
}
LPDISPATCH get_Font()
{
	LPDISPATCH result;
	InvokeHelper(DISPID_FONT, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}
void putref_Font(LPDISPATCH newValue)
{
	static BYTE parms[] = VTS_DISPATCH ;
	InvokeHelper(DISPID_FONT, DISPATCH_PROPERTYPUTREF, VT_EMPTY, NULL, parms, newValue);
}

// Properties
//



};
