SubDir HAIKU_TOP src tests add-ons kernel file_systems udf udf_shell ;

SubDirHdrs $(HAIKU_TOP) src tests add-ons kernel file_systems fs_shell ;
SubDirHdrs $(HAIKU_TOP) src add-ons kernel file_systems udf ;

UsePrivateHeaders [ FDirName kernel util ] ;
UsePrivateHeaders [ FDirName kernel ] ;

{
	local defines = [ FDefines USER ] ; # DEBUG _NO_INLINE_ASM
	SubDirCcFlags $(defines) -fno-exceptions -fno-rtti ; #-fcheck-memory-usage
	SubDirC++Flags $(defines) -fno-exceptions -fno-rtti ; #-fcheck-memory-usage
}

local fsShellSources = 
	fsh.c rootfs.c initfs.c kernel.c cache.c external_commands.cpp sl.c
	stub.c tracker.cpp sysdep.c hexdump.c argv.c
;

SimpleTest udf_shell
	:
	$(fsShellSources)

	udf.cpp
	DirectoryIterator.cpp DString.cpp Icb.cpp
	MetadataPartition.cpp PhysicalPartition.cpp Recognition.cpp
	UdfDebug.cpp UdfString.cpp UdfStructures.cpp Utils.cpp
	SparablePartition.cpp VirtualPartition.cpp Volume.cpp 
	:
	;

# Tell Jam where to find these sources
SEARCH on [ FGristFiles
		udf.cpp 
		CS0String.cpp DirectoryIterator.cpp DString.cpp Icb.cpp
		MetadataPartition.cpp PhysicalPartition.cpp Recognition.cpp
		UdfDebug.cpp  UdfString.cpp UdfStructures.cpp Utils.cpp
		SparablePartition.cpp VirtualPartition.cpp Volume.cpp 
	] = [ FDirName $(HAIKU_TOP) src add-ons kernel file_systems udf ] ;

SEARCH on [ FGristFiles
		$(fsShellSources)
	] = [ FDirName $(HAIKU_TOP) src tests add-ons kernel file_systems fs_shell ] ;
