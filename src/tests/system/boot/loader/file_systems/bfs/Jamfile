SubDir HAIKU_TOP src tests system boot loader file_systems bfs ;

SetSubDirSupportedPlatformsBeOSCompatible ;

UsePrivateHeaders [ FDirName kernel ] ;
UsePrivateHeaders [ FDirName kernel disk_device_manager ] ;
UsePrivateHeaders [ FDirName storage ] ;
SubDirSysHdrs $(HAIKU_TOP) src tests system boot loader ;
SubDirHdrs $(HAIKU_TOP) src system boot loader file_systems bfs ;
SubDirHdrs $(HAIKU_TOP) src add-ons kernel file_systems bfs ;

if $(TARGET_PLATFORM) != haiku {
	UsePublicHeaders drivers ;	# disk_device_manager.h
	UsePublicHeaders storage ;	# DiskDeviceDefs.h
}

ObjectDefines
	bfs.cpp
	Directory.cpp
	File.cpp
	Link.cpp
	Stream.cpp
	BPlusTree.cpp
	:
	read_pos=boot_read_pos fstat=boot_fstat open=boot_open close=boot_close
	_BOOT_MODE #BFS_BIG_ENDIAN_ONLY
	;

KernelStaticLibrary boottest_bfs.a :
	bfs.cpp
	Directory.cpp
	File.cpp
	Link.cpp
	Stream.cpp
	BPlusTree.cpp
	;

# Tell Jam where to find the sources

SEARCH on [ FGristFiles
		bfs.cpp Directory.cpp File.cpp Link.cpp Stream.cpp BPlusTree.cpp
	] = [ FDirName $(HAIKU_TOP) src system boot loader file_systems bfs ] ;

