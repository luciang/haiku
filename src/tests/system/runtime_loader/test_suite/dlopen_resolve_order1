#!/bin/sh

# program
#
# dlopen():
# libb.so
# liba.so
#
# Expected: Undefined symbol in liba.so resolves to symbol in libb.so, not
# to symbol in program, since program image is ignored.


. test_setup


# create liba.so
cat > liba.c << EOI
extern int b();
int a() { return b(); }
EOI

# build
gcc -shared -o liba.so liba.c


# create libb.so
cat > libb.c << EOI
int b() { return 2; }
EOI

# build
gcc -shared -o libb.so libb.c


# create program
cat > program.c << EOI
#include <dlfcn.h>
#include <stdio.h>
#include <stdlib.h>

int b() { return 1; }

int
main()
{
	void* liba;
	void* libb;
	int (*a)();

	libb = dlopen("./libb.so", RTLD_NOW | RTLD_GLOBAL);
	if (libb == NULL) {
		fprintf(stderr, "Error opening libb.so: %s\n", dlerror());
		exit(117);
	}

	liba = dlopen("./liba.so", RTLD_NOW | RTLD_GLOBAL);
	if (liba == NULL) {
		fprintf(stderr, "Error opening liba.so: %s\n", dlerror());
		exit(117);
	}

	a = (int (*)())dlsym(liba, "a");
	if (a == NULL) {
		fprintf(stderr, "Error getting symbol a: %s\n", dlerror());
		exit(116);
	}

	return a();
}
EOI

# build
gcc -o program program.c $libdl -Xlinker -rpath -Xlinker .

# run
test_run_ok ./program 2

