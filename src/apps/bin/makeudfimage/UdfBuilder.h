//----------------------------------------------------------------------
//  This software is part of the OpenBeOS distribution and is covered 
//  by the OpenBeOS license.
//
//  Copyright (c) 2003 Tyler Dauwalder, tyler@dauwalder.net
//----------------------------------------------------------------------

/*! \file UdfBuilder.h

	Main UDF image building class interface declarations.
*/

#ifndef _UDF_BUILDER_H
#define _UDF_BUILDER_H

#include <stdarg.h>
#include <string>
#include <SupportDefs.h>

#include "Allocator.h"
#include "OutputFile.h"
#include "ProgressListener.h"

class UdfBuilder {
public:
	UdfBuilder(const char *outputFile, uint32 blockSize, bool doUdf,
	           bool doIso, const ProgressListener &listener);
	status_t InitCheck() const;
	status_t Build();
private:
	//! Maximum length of string generated by calls to any _Print*() functions
	static const int kMaxUpdateStringLength = 1024;

	OutputFile& _OutputFile() { return fOutputFile; }
	uint32 _BlockSize() const { return fBlockSize; }	
	uint32 _BlockShift() const { return fBlockShift; }	
	bool _DoUdf() const { return fDoUdf; }
	bool _DoIso() const { return fDoIso; }
	Allocator& _Allocator() { return fAllocator; }

	status_t _FormatString(char *message, const char *formatString, va_list arguments) const;
	void _PrintError(const char *formatString, ...) const;
	void _PrintWarning(const char *formatString, ...) const;
	void _PrintUpdate(VerbosityLevel level, const char *formatString, ...) const;

	status_t fInitStatus;
	OutputFile fOutputFile;
	string fOutputFilename;
	uint32 fBlockSize;
	uint32 fBlockShift;
	bool fDoUdf;
	bool fDoIso;
	const ProgressListener &fListener;
	Allocator fAllocator;
};


#endif	// _UDF_BUILDER_H
