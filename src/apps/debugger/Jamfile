SubDir HAIKU_TOP src apps debugger ;

CCFLAGS +=  -Werror ;
C++FLAGS += -Werror ;

UsePrivateHeaders debug interface kernel shared ;
UsePrivateSystemHeaders ;

SEARCH_SOURCE += [ FDirName $(SUBDIR) arch ] ;
SEARCH_SOURCE += [ FDirName $(SUBDIR) arch x86 ] ;
SEARCH_SOURCE += [ FDirName $(SUBDIR) debugger_interface ] ;
SEARCH_SOURCE += [ FDirName $(SUBDIR) gui team_window ] ;

local debugAnalyzerSources
	= [ FDirName $(HAIKU_TOP) src apps debuganalyzer ] ;

SubDirHdrs [ FDirName $(HAIKU_TOP) src bin debug ] ;
SubDirHdrs [ FDirName $(debugAnalyzerSources) gui ] ;

Application Debugger :
	Debugger.cpp
#	ElfFile.cpp
	Image.cpp
	ImageInfo.cpp
	Jobs.cpp
	Team.cpp
	TeamDebugger.cpp
	TeamDebugModel.cpp
	Thread.cpp
	ThreadInfo.cpp
	Worker.cpp

	# arch
	Architecture.cpp
	CpuState.cpp
	Register.cpp
	StackFrame.cpp
	StackTrace.cpp

	# arch/x86
	ArchitectureX86.cpp
	CpuStateX86.cpp
	StackFrameX86.cpp

	# debugger_interface
	DebugEvent.cpp
	DebuggerInterface.cpp

	# gui/team_window
	ImageListView.cpp
	RegisterView.cpp
	StackTraceView.cpp
	TeamWindow.cpp
	ThreadListView.cpp

# DWARF
#	attribute_classes.cpp
#	AttributeValue.cpp
#	DebugInfoEntries.cpp
#	DebugInfoEntry.cpp
#	DwarfManager.cpp
#	SourceLanguageInfo.cpp
#	tag_names.cpp

	:
	<nogrist>DebugAnalyzer_gui_table.o

	<bin>debug_utils.a
	libcolumnlistview.a
	libshared.a

	$(TARGET_LIBSTDC++)
	be libdebug.so

	: Debugger.rdef
;

HaikuSubInclude gui running_teams_window ;
